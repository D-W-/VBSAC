/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/java -ea -Didea.test.cyclic.buffer.size=1048576 -javaagent:/home/guzuxing/Downloads/idea-IU-171.4424.56/lib/idea_rt.jar=44320:/home/guzuxing/Downloads/idea-IU-171.4424.56/bin -Dfile.encoding=UTF-8 -classpath /home/guzuxing/Downloads/idea-IU-171.4424.56/lib/idea_rt.jar:/home/guzuxing/Downloads/idea-IU-171.4424.56/plugins/junit/lib/junit-rt.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/cldrdata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/dnsns.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/icedtea-sound.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/jaccess.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/localedata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/nashorn.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunec.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunjce_provider.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunpkcs11.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/zipfs.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/management-agent.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/rt.jar:/home/guzuxing/Documents/tsmart-v3/engine/out/test/classes:/home/guzuxing/Documents/tsmart-v3/engine/build/resources/test:/home/guzuxing/Documents/tsmart-v3/engine/out/production/classes:/home/guzuxing/Documents/tsmart-v3/engine/libs/runtime/llvm-macosx-x86_64.jar:/home/guzuxing/Documents/tsmart-v3/engine/libs/runtime/guava.jar:/home/guzuxing/Documents/tsmart-v3/engine/libs/runtime/java-cup-runtime.jar:/home/guzuxing/Documents/tsmart-v3/engine/libs/runtime/llvm-linux-x86_64.jar:/home/guzuxing/Documents/tsmart-v3/engine/libs/runtime/org.osgi.core.jar:/home/guzuxing/Documents/tsmart-v3/engine/libs/runtime/com.microsoft.z3.jar:/home/guzuxing/Documents/tsmart-v3/engine/libs/runtime/jopt-simple.jar:/home/guzuxing/Documents/tsmart-v3/engine/libs/runtime/javasmt.jar:/home/guzuxing/Documents/tsmart-v3/engine/libs/runtime/javacpp.jar:/home/guzuxing/Documents/tsmart-v3/engine/libs/runtime/scala-library.jar:/home/guzuxing/Documents/tsmart-v3/engine/libs/runtime/princess-assertionless.jar:/home/guzuxing/Documents/tsmart-v3/engine/libs/runtime/org.osgi.compendium.jar:/home/guzuxing/Documents/tsmart-v3/engine/libs/runtime/smtinterpol.jar:/home/guzuxing/Documents/tsmart-v3/engine/libs/runtime/llvm-linux-x86.jar:/home/guzuxing/Documents/tsmart-v3/engine/libs/runtime/llvm.jar:/home/guzuxing/Documents/tsmart-v3/engine/libs/runtime/llvm-platform.jar:/home/guzuxing/Documents/tsmart-v3/engine/libs/runtime/smt-parser.jar:/home/guzuxing/Documents/tsmart-v3/engine/libs/runtime/common.jar:/home/guzuxing/Documents/tsmart-v3/engine/libs/runtime/javolution-core-java.jar:/home/guzuxing/Documents/tsmart-v3/engine/libs/runtime/jsr305.jar:/home/guzuxing/Documents/tsmart-v3/engine/libs/XMLReport.jar:/home/guzuxing/Documents/tsmart-v3/engine/libs/build-capture.jar:/home/guzuxing/Documents/tsmart-v3/mod-commons/out/production/classes:/home/guzuxing/.gradle/caches/modules-2/files-2.1/junit/junit/4.11/4e031bb61df09069aeb2bffb4019e7a5034a4ee0/junit-4.11.jar:/home/guzuxing/.gradle/caches/modules-2/files-2.1/com.google.guava/guava/19.0/6ce200f6b23222af3d8abb6b6459e6c44f4bb0e9/guava-19.0.jar:/home/guzuxing/.gradle/caches/modules-2/files-2.1/com.google.code.findbugs/jsr305/3.0.0/5871fb60dc68d67da54a663c3fd636a10a532948/jsr305-3.0.0.jar:/home/guzuxing/.gradle/caches/modules-2/files-2.1/com.google.truth/truth/0.30/9d591b5a66eda81f0b88cf1c748ab8853d99b18b/truth-0.30.jar:/home/guzuxing/.gradle/caches/modules-2/files-2.1/org.hamcrest/hamcrest-core/1.3/42a25dc3219429f0e5d060061f71acb49bf010a0/hamcrest-core-1.3.jar:/home/guzuxing/.gradle/caches/modules-2/files-2.1/com.google.errorprone/error_prone_annotations/2.0.8/54e2d56cb157df08cbf183149bcf50c9f5151ed4/error_prone_annotations-2.0.8.jar com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 cn.edu.thu.tsmart.integrated.Juliet_401_Test
<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/401/401_1.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printLine]
 +printLine
SCC(1): [bad1]
 +bad1
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [good1]
 +good1
SCC(1): [main]
 +main
SCC(1): [printIntLine]
 +printIntLine
<begin of summary store (POINTER_AP)>
Functions [bad1, globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good1, main, printIntLine, printLine]
Loops     []
----
function: bad1
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good1
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.361s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N55): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Memory Leak
At node  : N0
On edge  : N0 -{Return edge from bad1 to main}-> N58
Message  : the heap object @H(bad1::call) is not referenced any more
> Start from entry function: main, At N55 of Function main
> Entering function: good1, On N84 -> N35 (call good1)
> takes the false branch, At N43 of Function good1
> Entering function: printLine, On N48 -> N70 (call printLine)
> takes the true branch, At N76 of Function printLine
> Leaving function: printLine, On N69 -> N50 (Return edge from printLine to good1)
> Leaving function: good1, On N34 -> N57 (Return edge from good1 to main)
> Entering function: bad1, On N57 -> N1 (call bad1)
> takes the false branch, At N9 of Function bad1
> Entering function: printLine, On N14 -> N70 (call printLine)
> takes the true branch, At N76 of Function printLine
> Leaving function: printLine, On N69 -> N16 (Return edge from printLine to bad1)
<Defect> : N0 -> N58: [Return edge from bad1 to main]
N0 -> N58: [Return edge from bad1 to main] <--
-- end of trace --
-- start of trace --
Weakness : Use of Uninitialized Variable
At node  : N40
On edge  : N40 -{store i8* %0, i8** %data, align 8}-> N41
Message  : use of uninitialized variable
> Start from entry function: main, At N55 of Function main
> Entering function: good1, On N84 -> N35 (call good1)
<Defect> : N40 -> N41: [store i8* %0, i8** %data, align 8]
N40 -> N41: [store i8* %0, i8** %data, align 8] <--
-- end of trace --
-- start of trace --
Weakness : Use of Uninitialized Variable
At node  : N72
On edge  : N72 -{store i8* %line, i8** %line.addr, align 8}-> N74
Message  : use of uninitialized variable
> Start from entry function: main, At N55 of Function main
> Entering function: good1, On N84 -> N35 (call good1)
> takes the false branch, At N43 of Function good1
> Entering function: printLine, On N48 -> N70 (call printLine)
<Defect> : N72 -> N74: [store i8* %line, i8** %line.addr, align 8]
N72 -> N74: [store i8* %line, i8** %line.addr, align 8] <--
-- end of trace --
=====================================================
CWE_401(Memory Leak): 1
	[./401_1.c 89] bad1 		[N0 -{Return edge from bad1 to main}-> N58]	(the heap object @H(bad1::call) is not referenced any more)

CWE_457(Use of Uninitialized Variable): 2
	[./401_1.c 75] good1 		[N40 -{store i8* %0, i8** %data, align 8}-> N41]	(use of uninitialized variable)
	[* 0] printLine 		[N72 -{store i8* %line, i8** %line.addr, align 8}-> N74]	(use of uninitialized variable)

Found 3 defects in all (2 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/401/401_2.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printLine]
 +printLine
SCC(1): [bad2]
 +bad2
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [good2]
 +good2
SCC(1): [main]
 +main
SCC(1): [printIntLine]
 +printIntLine
<begin of summary store (POINTER_AP)>
Functions [globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good2, main, printIntLine, printLine, bad2]
Loops     []
----
function: bad2
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good2
P+ = [] 
P- = [H(good2::call)] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [H(good2::call)] 
Point-To:

Ret-Value: R
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.055s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N150): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Memory Leak
At node  : N93
On edge  : N93 -{Return edge from bad2 to main}-> N153
Message  : the heap object @H(bad2::call) is not referenced any more
> Start from entry function: main, At N150 of Function main
> Entering function: good2, On N179 -> N128 (call good2)
> takes the true branch, At N136 of Function good2
> Leaving function: good2, On N127 -> N152 (Return edge from good2 to main)
> Entering function: bad2, On N152 -> N94 (call bad2)
> takes the false branch, At N102 of Function bad2
> Entering function: printLine, On N107 -> N165 (call printLine)
> takes the true branch, At N171 of Function printLine
> Leaving function: printLine, On N164 -> N109 (Return edge from printLine to bad2)
<Defect> : N93 -> N153: [Return edge from bad2 to main]
N93 -> N153: [Return edge from bad2 to main] <--
-- end of trace --
=====================================================
CWE_401(Memory Leak): 1
	[./401_2.c 105] bad2 		[N93 -{Return edge from bad2 to main}-> N153]	(the heap object @H(bad2::call) is not referenced any more)

Found 1 defects in all (2 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/401/401_3.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printLine]
 +printLine
SCC(1): [bad3]
 +bad3
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [good3]
 +good3
SCC(1): [main]
 +main
SCC(1): [printIntLine]
 +printIntLine
<begin of summary store (POINTER_AP)>
Functions [main, printIntLine, printLine, bad3, globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good3]
Loops     []
----
function: bad3
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good3
P+ = [] 
P- = [H(good3::call)] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [H(good3::call)] 
Point-To:

Ret-Value: R
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.065s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N245): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Memory Leak
At node  : N188
On edge  : N188 -{Return edge from bad3 to main}-> N248
Message  : the heap object @H(bad3::call) is not referenced any more
> Start from entry function: main, At N245 of Function main
> Entering function: good3, On N274 -> N223 (call good3)
> takes the true branch, At N231 of Function good3
> Leaving function: good3, On N222 -> N247 (Return edge from good3 to main)
> Entering function: bad3, On N247 -> N189 (call bad3)
> takes the false branch, At N197 of Function bad3
> Entering function: printLine, On N202 -> N260 (call printLine)
> takes the true branch, At N266 of Function printLine
> Leaving function: printLine, On N259 -> N204 (Return edge from printLine to bad3)
<Defect> : N188 -> N248: [Return edge from bad3 to main]
N188 -> N248: [Return edge from bad3 to main] <--
-- end of trace --
=====================================================
CWE_401(Memory Leak): 1
	[./401_3.c 105] bad3 		[N188 -{Return edge from bad3 to main}-> N248]	(the heap object @H(bad3::call) is not referenced any more)

Found 1 defects in all (2 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/401/401_4.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printLine]
 +printLine
SCC(1): [bad4]
 +bad4
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [good4]
 +good4
SCC(1): [main]
 +main
SCC(1): [printIntLine]
 +printIntLine
<begin of summary store (POINTER_AP)>
Functions [printLine, bad4, globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good4, main, printIntLine]
Loops     []
----
function: bad4
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good4
P+ = [] 
P- = [H(good4::call)] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [H(good4::call)] 
Point-To:

Ret-Value: R
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.014s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N340): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Memory Leak
At node  : N283
On edge  : N283 -{Return edge from bad4 to main}-> N343
Message  : the heap object @H(bad4::call) is not referenced any more
> Start from entry function: main, At N340 of Function main
> Entering function: good4, On N369 -> N318 (call good4)
> takes the true branch, At N326 of Function good4
> Leaving function: good4, On N317 -> N342 (Return edge from good4 to main)
> Entering function: bad4, On N342 -> N284 (call bad4)
> takes the false branch, At N292 of Function bad4
> Entering function: printLine, On N297 -> N355 (call printLine)
> takes the true branch, At N361 of Function printLine
> Leaving function: printLine, On N354 -> N299 (Return edge from printLine to bad4)
<Defect> : N283 -> N343: [Return edge from bad4 to main]
N283 -> N343: [Return edge from bad4 to main] <--
-- end of trace --
=====================================================
CWE_401(Memory Leak): 1
	[./401_4.c 109] bad4 		[N283 -{Return edge from bad4 to main}-> N343]	(the heap object @H(bad4::call) is not referenced any more)

Found 1 defects in all (2 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/401/401_5.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printLine]
 +printLine
SCC(1): [bad5]
 +bad5
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [good5]
 +good5
SCC(1): [main]
 +main
SCC(1): [printIntLine]
 +printIntLine
<begin of summary store (POINTER_AP)>
Functions [bad5, globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good5, main, printIntLine, printLine]
Loops     []
----
function: bad5
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good5
P+ = [] 
P- = [N, H(good5::call)] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [N, H(good5::call)] 
Point-To:

Ret-Value: R
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.02s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N459): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Memory Leak
At node  : N378
On edge  : N378 -{Return edge from bad5 to main}-> N462
Message  : the heap object @H(bad5::call) is not referenced any more
> Start from entry function: main, At N459 of Function main
> Entering function: good5, On N488 -> N424 (call good5)
> takes the true branch, At N430 of Function good5
> takes the true branch, At N435 of Function good5
> Leaving function: good5, On N423 -> N461 (Return edge from good5 to main)
> Entering function: bad5, On N461 -> N379 (call bad5)
> takes the true branch, At N385 of Function bad5
> takes the false branch, At N390 of Function bad5
> Entering function: printLine, On N395 -> N474 (call printLine)
> takes the true branch, At N480 of Function printLine
> Leaving function: printLine, On N473 -> N397 (Return edge from printLine to bad5)
> takes the true branch, At N399 of Function bad5
<Defect> : N378 -> N462: [Return edge from bad5 to main]
N378 -> N462: [Return edge from bad5 to main] <--
-- end of trace --
=====================================================
CWE_401(Memory Leak): 1
	[./401_5.c 108] bad5 		[N378 -{Return edge from bad5 to main}-> N462]	(the heap object @H(bad5::call) is not referenced any more)

Found 1 defects in all (2 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/401/401_6.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printLine]
 +printLine
SCC(1): [bad6]
 +bad6
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [good6]
 +good6
SCC(1): [main]
 +main
SCC(1): [printIntLine]
 +printIntLine
<begin of summary store (POINTER_AP)>
Functions [bad6, globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good6, main, printIntLine, printLine]
Loops     []
----
function: bad6
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good6
P+ = [] 
P- = [H(good6::call)] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [H(good6::call)] 
Point-To:

Ret-Value: R
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.006s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N557): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Memory Leak
At node  : N500
On edge  : N500 -{Return edge from bad6 to main}-> N560
Message  : the heap object @H(bad6::call) is not referenced any more
> Start from entry function: main, At N557 of Function main
> Entering function: good6, On N586 -> N535 (call good6)
> takes the true branch, At N543 of Function good6
> Leaving function: good6, On N534 -> N559 (Return edge from good6 to main)
> Entering function: bad6, On N559 -> N501 (call bad6)
> takes the false branch, At N509 of Function bad6
> Entering function: printLine, On N514 -> N572 (call printLine)
> takes the true branch, At N578 of Function printLine
> Leaving function: printLine, On N571 -> N516 (Return edge from printLine to bad6)
<Defect> : N500 -> N560: [Return edge from bad6 to main]
N500 -> N560: [Return edge from bad6 to main] <--
-- end of trace --
=====================================================
CWE_401(Memory Leak): 1
	[./401_6.c 108] bad6 		[N500 -{Return edge from bad6 to main}-> N560]	(the heap object @H(bad6::call) is not referenced any more)

Found 1 defects in all (2 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/401/401_7.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printLine]
 +printLine
SCC(1): [bad7]
 +bad7
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [good7]
 +good7
SCC(1): [main]
 +main
SCC(1): [printIntLine]
 +printIntLine
<begin of summary store (POINTER_AP)>
Functions [globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good7, main, printIntLine, printLine, bad7]
Loops     []
----
function: bad7
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good7
P+ = [] 
P- = [N, H(good7::call)] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [N, H(good7::call)] 
Point-To:

Ret-Value: R
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.011s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N676): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Memory Leak
At node  : N595
On edge  : N595 -{Return edge from bad7 to main}-> N679
Message  : the heap object @H(bad7::call) is not referenced any more
> Start from entry function: main, At N676 of Function main
> Entering function: good7, On N705 -> N641 (call good7)
> takes the true branch, At N647 of Function good7
> takes the true branch, At N652 of Function good7
> Leaving function: good7, On N640 -> N678 (Return edge from good7 to main)
> Entering function: bad7, On N678 -> N596 (call bad7)
> takes the true branch, At N602 of Function bad7
> takes the false branch, At N607 of Function bad7
> Entering function: printLine, On N612 -> N691 (call printLine)
> takes the true branch, At N697 of Function printLine
> Leaving function: printLine, On N690 -> N614 (Return edge from printLine to bad7)
> takes the true branch, At N616 of Function bad7
<Defect> : N595 -> N679: [Return edge from bad7 to main]
N595 -> N679: [Return edge from bad7 to main] <--
-- end of trace --
=====================================================
CWE_401(Memory Leak): 1
	[./401_7.c 108] bad7 		[N595 -{Return edge from bad7 to main}-> N679]	(the heap object @H(bad7::call) is not referenced any more)

Found 1 defects in all (2 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/401/401_8.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
10 SCCs to deal with
SCC(1): [printLine]
 +printLine
SCC(1): [staticReturnsTrue]
 +staticReturnsTrue
SCC(1): [bad8]
 +bad8
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [staticReturnsFalse]
 +staticReturnsFalse
SCC(1): [good8]
 +good8
SCC(1): [main]
 +main
SCC(1): [printIntLine]
 +printIntLine
<begin of summary store (POINTER_AP)>
Functions [globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good8, main, printIntLine, printLine, staticReturnsFalse, staticReturnsTrue, bad8]
Loops     []
----
function: bad8
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good8
P+ = [] 
P- = [N, H(good8::call1)] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [N, H(good8::call1)] 
Point-To:

Ret-Value: R
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: staticReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: staticReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.019s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N797): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Memory Leak
At node  : N716
On edge  : N716 -{Return edge from bad8 to main}-> N800
Message  : the heap object @H(bad8::call1) is not referenced any more
> Start from entry function: main, At N797 of Function main
> Entering function: good8, On N834 -> N762 (call good8)
> Entering function: staticReturnsTrue, On N766 -> N831 (call staticReturnsTrue)
> Leaving function: staticReturnsTrue, On N830 -> N767 (Return edge from staticReturnsTrue to good8)
> takes the true branch, At N768 of Function good8
> takes the true branch, At N773 of Function good8
> Leaving function: good8, On N761 -> N799 (Return edge from good8 to main)
> Entering function: bad8, On N799 -> N717 (call bad8)
> Entering function: staticReturnsTrue, On N721 -> N831 (call staticReturnsTrue)
> Leaving function: staticReturnsTrue, On N830 -> N722 (Return edge from staticReturnsTrue to bad8)
> takes the true branch, At N723 of Function bad8
> takes the false branch, At N728 of Function bad8
> Entering function: printLine, On N733 -> N812 (call printLine)
> takes the true branch, At N818 of Function printLine
> Leaving function: printLine, On N811 -> N735 (Return edge from printLine to bad8)
> Entering function: staticReturnsTrue, On N735 -> N831 (call staticReturnsTrue)
> Leaving function: staticReturnsTrue, On N830 -> N736 (Return edge from staticReturnsTrue to bad8)
> takes the true branch, At N737 of Function bad8
<Defect> : N716 -> N800: [Return edge from bad8 to main]
N716 -> N800: [Return edge from bad8 to main] <--
-- end of trace --
=====================================================
CWE_401(Memory Leak): 1
	[./401_8.c 115] bad8 		[N716 -{Return edge from bad8 to main}-> N800]	(the heap object @H(bad8::call1) is not referenced any more)

Found 1 defects in all (2 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/401/401_9.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printLine]
 +printLine
SCC(1): [bad9]
 +bad9
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [good9]
 +good9
SCC(1): [main]
 +main
SCC(1): [printIntLine]
 +printIntLine
<begin of summary store (POINTER_AP)>
Functions [globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good9, main, printIntLine, printLine, bad9]
Loops     []
----
function: bad9
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good9
P+ = [] 
P- = [H(good9::call)] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [H(good9::call)] 
Point-To:

Ret-Value: R
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.031s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N901): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Memory Leak
At node  : N844
On edge  : N844 -{Return edge from bad9 to main}-> N904
Message  : the heap object @H(bad9::call) is not referenced any more
> Start from entry function: main, At N901 of Function main
> Entering function: good9, On N930 -> N879 (call good9)
> takes the true branch, At N887 of Function good9
> Leaving function: good9, On N878 -> N903 (Return edge from good9 to main)
> Entering function: bad9, On N903 -> N845 (call bad9)
> takes the false branch, At N853 of Function bad9
> Entering function: printLine, On N858 -> N916 (call printLine)
> takes the true branch, At N922 of Function printLine
> Leaving function: printLine, On N915 -> N860 (Return edge from printLine to bad9)
<Defect> : N844 -> N904: [Return edge from bad9 to main]
N844 -> N904: [Return edge from bad9 to main] <--
-- end of trace --
=====================================================
CWE_401(Memory Leak): 1
	[./401_9.c 105] bad9 		[N844 -{Return edge from bad9 to main}-> N904]	(the heap object @H(bad9::call) is not referenced any more)

Found 1 defects in all (2 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/401/401_10.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printLine]
 +printLine
SCC(1): [bad10]
 +bad10
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [good10]
 +good10
SCC(1): [main]
 +main
SCC(1): [printIntLine]
 +printIntLine
<begin of summary store (POINTER_AP)>
Functions [main, printIntLine, printLine, bad10, globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good10]
Loops     []
----
function: bad10
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good10
P+ = [] 
P- = [N, H(good10::call)] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [N, H(good10::call)] 
Point-To:

Ret-Value: R
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.011s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N1020): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Memory Leak
At node  : N939
On edge  : N939 -{Return edge from bad10 to main}-> N1023
Message  : the heap object @H(bad10::call) is not referenced any more
> Start from entry function: main, At N1020 of Function main
> Entering function: good10, On N1049 -> N985 (call good10)
> takes the true branch, At N991 of Function good10
> takes the true branch, At N996 of Function good10
> Leaving function: good10, On N984 -> N1022 (Return edge from good10 to main)
> Entering function: bad10, On N1022 -> N940 (call bad10)
> takes the true branch, At N946 of Function bad10
> takes the false branch, At N951 of Function bad10
> Entering function: printLine, On N956 -> N1035 (call printLine)
> takes the true branch, At N1041 of Function printLine
> Leaving function: printLine, On N1034 -> N958 (Return edge from printLine to bad10)
> takes the true branch, At N960 of Function bad10
<Defect> : N939 -> N1023: [Return edge from bad10 to main]
N939 -> N1023: [Return edge from bad10 to main] <--
-- end of trace --
=====================================================
CWE_401(Memory Leak): 1
	[./401_10.c 106] bad10 		[N939 -{Return edge from bad10 to main}-> N1023]	(the heap object @H(bad10::call) is not referenced any more)

Found 1 defects in all (2 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/401/401_11.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [printLine]
 +printLine
SCC(1): [bad11]
 +bad11
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [good11]
 +good11
SCC(1): [main]
 +main
SCC(1): [printIntLine]
 +printIntLine
<begin of summary store (POINTER_AP)>
Functions [main, printIntLine, printLine, bad11, globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good11]
Loops     []
----
function: bad11
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good11
P+ = [] 
P- = [N, H(good11::call1)] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [N, H(good11::call1)] 
Point-To:

Ret-Value: R
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.01s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N1140): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Memory Leak
At node  : N1059
On edge  : N1059 -{Return edge from bad11 to main}-> N1143
Message  : the heap object @H(bad11::call1) is not referenced any more
> Start from entry function: main, At N1140 of Function main
> Entering function: good11, On N1169 -> N1105 (call good11)
> Entering function: globalReturnsTrue, On N1109 -> N1095 (call globalReturnsTrue)
> Leaving function: globalReturnsTrue, On N1094 -> N1110 (Return edge from globalReturnsTrue to good11)
> takes the true branch, At N1111 of Function good11
> takes the true branch, At N1116 of Function good11
> Leaving function: good11, On N1104 -> N1142 (Return edge from good11 to main)
> Entering function: bad11, On N1142 -> N1060 (call bad11)
> Entering function: globalReturnsTrue, On N1064 -> N1095 (call globalReturnsTrue)
> Leaving function: globalReturnsTrue, On N1094 -> N1065 (Return edge from globalReturnsTrue to bad11)
> takes the true branch, At N1066 of Function bad11
> takes the false branch, At N1071 of Function bad11
> Entering function: printLine, On N1076 -> N1155 (call printLine)
> takes the true branch, At N1161 of Function printLine
> Leaving function: printLine, On N1154 -> N1078 (Return edge from printLine to bad11)
> Entering function: globalReturnsTrue, On N1078 -> N1095 (call globalReturnsTrue)
> Leaving function: globalReturnsTrue, On N1094 -> N1079 (Return edge from globalReturnsTrue to bad11)
> takes the true branch, At N1080 of Function bad11
<Defect> : N1059 -> N1143: [Return edge from bad11 to main]
N1059 -> N1143: [Return edge from bad11 to main] <--
-- end of trace --
=====================================================
CWE_401(Memory Leak): 1
	[./401_11.c 107] bad11 		[N1059 -{Return edge from bad11 to main}-> N1143]	(the heap object @H(bad11::call1) is not referenced any more)

Found 1 defects in all (2 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/401/401_12.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printLine]
 +printLine
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [bad12]
 +bad12
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [good12]
 +good12
SCC(1): [main]
 +main
SCC(1): [printIntLine]
 +printIntLine
<begin of summary store (POINTER_AP)>
Functions [main, printIntLine, printLine, bad12, globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good12]
Loops     []
----
function: bad12
P+ = [] 
P- = [H(bad12::call1)] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good12
P+ = [] 
P- = [H(good12::call1), H(good12::call3)] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [H(bad12::call1), H(good12::call1), H(good12::call3)] 
Point-To:

Ret-Value: R
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.007s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N1278): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Memory Leak
At node  : N1179
On edge  : N1179 -{Return edge from bad12 to main}-> N1281
Message  : the heap object @H(bad12::call1) is not referenced any more
> Start from entry function: main, At N1278 of Function main
> Entering function: good12, On N1307 -> N1241 (call good12)
> Entering function: globalReturnsTrueOrFalse, On N1245 -> N1235 (call globalReturnsTrueOrFalse)
> Leaving function: globalReturnsTrueOrFalse, On N1234 -> N1246 (Return edge from globalReturnsTrueOrFalse to good12)
> takes the false branch, At N1247 of Function good12
> Entering function: printLine, On N1260 -> N1293 (call printLine)
> takes the true branch, At N1299 of Function printLine
> Leaving function: printLine, On N1292 -> N1262 (Return edge from printLine to good12)
> Entering function: globalReturnsTrueOrFalse, On N1262 -> N1235 (call globalReturnsTrueOrFalse)
> Leaving function: globalReturnsTrueOrFalse, On N1234 -> N1263 (Return edge from globalReturnsTrueOrFalse to good12)
> takes the false branch, At N1264 of Function good12
> Leaving function: good12, On N1240 -> N1280 (Return edge from good12 to main)
> Entering function: bad12, On N1280 -> N1180 (call bad12)
> Entering function: globalReturnsTrueOrFalse, On N1184 -> N1235 (call globalReturnsTrueOrFalse)
> Leaving function: globalReturnsTrueOrFalse, On N1234 -> N1185 (Return edge from globalReturnsTrueOrFalse to bad12)
> takes the true branch, At N1186 of Function bad12
> takes the false branch, At N1191 of Function bad12
> Entering function: printLine, On N1196 -> N1293 (call printLine)
> takes the true branch, At N1299 of Function printLine
> Leaving function: printLine, On N1292 -> N1209 (Return edge from printLine to bad12)
> Entering function: globalReturnsTrueOrFalse, On N1209 -> N1235 (call globalReturnsTrueOrFalse)
> Leaving function: globalReturnsTrueOrFalse, On N1234 -> N1210 (Return edge from globalReturnsTrueOrFalse to bad12)
> takes the true branch, At N1211 of Function bad12
<Defect> : N1179 -> N1281: [Return edge from bad12 to main]
N1179 -> N1281: [Return edge from bad12 to main] <--
-- end of trace --
-- start of trace --
Weakness : Use of Uninitialized Variable
At node  : N1199
On edge  : N1199 -{store i8* %3, i8** %data, align 8}-> N1200
Message  : use of uninitialized variable
> Start from entry function: main, At N1278 of Function main
> Entering function: good12, On N1307 -> N1241 (call good12)
> Entering function: globalReturnsTrueOrFalse, On N1245 -> N1235 (call globalReturnsTrueOrFalse)
> Leaving function: globalReturnsTrueOrFalse, On N1234 -> N1246 (Return edge from globalReturnsTrueOrFalse to good12)
> takes the false branch, At N1247 of Function good12
> Entering function: printLine, On N1260 -> N1293 (call printLine)
> takes the true branch, At N1299 of Function printLine
> Leaving function: printLine, On N1292 -> N1262 (Return edge from printLine to good12)
> Entering function: globalReturnsTrueOrFalse, On N1262 -> N1235 (call globalReturnsTrueOrFalse)
> Leaving function: globalReturnsTrueOrFalse, On N1234 -> N1263 (Return edge from globalReturnsTrueOrFalse to good12)
> takes the false branch, At N1264 of Function good12
> Leaving function: good12, On N1240 -> N1280 (Return edge from good12 to main)
> Entering function: bad12, On N1280 -> N1180 (call bad12)
> Entering function: globalReturnsTrueOrFalse, On N1184 -> N1235 (call globalReturnsTrueOrFalse)
> Leaving function: globalReturnsTrueOrFalse, On N1234 -> N1185 (Return edge from globalReturnsTrueOrFalse to bad12)
> takes the false branch, At N1186 of Function bad12
<Defect> : N1199 -> N1200: [store i8* %3, i8** %data, align 8]
N1199 -> N1200: [store i8* %3, i8** %data, align 8] <--
-- end of trace --
-- start of trace --
Weakness : Use of Uninitialized Variable
At node  : N1295
On edge  : N1295 -{store i8* %line, i8** %line.addr, align 8}-> N1297
Message  : use of uninitialized variable
> Start from entry function: main, At N1278 of Function main
> Entering function: good12, On N1307 -> N1241 (call good12)
> Entering function: globalReturnsTrueOrFalse, On N1245 -> N1235 (call globalReturnsTrueOrFalse)
> Leaving function: globalReturnsTrueOrFalse, On N1234 -> N1246 (Return edge from globalReturnsTrueOrFalse to good12)
> takes the false branch, At N1247 of Function good12
> Entering function: printLine, On N1260 -> N1293 (call printLine)
> takes the true branch, At N1299 of Function printLine
> Leaving function: printLine, On N1292 -> N1262 (Return edge from printLine to good12)
> Entering function: globalReturnsTrueOrFalse, On N1262 -> N1235 (call globalReturnsTrueOrFalse)
> Leaving function: globalReturnsTrueOrFalse, On N1234 -> N1263 (Return edge from globalReturnsTrueOrFalse to good12)
> takes the false branch, At N1264 of Function good12
> Leaving function: good12, On N1240 -> N1280 (Return edge from good12 to main)
> Entering function: bad12, On N1280 -> N1180 (call bad12)
> Entering function: globalReturnsTrueOrFalse, On N1184 -> N1235 (call globalReturnsTrueOrFalse)
> Leaving function: globalReturnsTrueOrFalse, On N1234 -> N1185 (Return edge from globalReturnsTrueOrFalse to bad12)
> takes the false branch, At N1186 of Function bad12
> takes the false branch, At N1202 of Function bad12
> Entering function: printLine, On N1207 -> N1293 (call printLine)
<Defect> : N1295 -> N1297: [store i8* %line, i8** %line.addr, align 8]
N1295 -> N1297: [store i8* %line, i8** %line.addr, align 8] <--
-- end of trace --
-- start of trace --
Weakness : Null Pointer Dereference
At node  : N1269
On edge  : N1269 -{call void @free(i8* %5, i8* @free)}-> N1271
Message  : null pointer dereference
> Start from entry function: main, At N1278 of Function main
> Entering function: good12, On N1307 -> N1241 (call good12)
> Entering function: globalReturnsTrueOrFalse, On N1245 -> N1235 (call globalReturnsTrueOrFalse)
> Leaving function: globalReturnsTrueOrFalse, On N1234 -> N1246 (Return edge from globalReturnsTrueOrFalse to good12)
> takes the false branch, At N1247 of Function good12
> Entering function: printLine, On N1260 -> N1293 (call printLine)
> takes the false branch, At N1299 of Function printLine
> Leaving function: printLine, On N1292 -> N1262 (Return edge from printLine to good12)
> Entering function: globalReturnsTrueOrFalse, On N1262 -> N1235 (call globalReturnsTrueOrFalse)
> Leaving function: globalReturnsTrueOrFalse, On N1234 -> N1263 (Return edge from globalReturnsTrueOrFalse to good12)
> takes the false branch, At N1264 of Function good12
<Defect> : N1269 -> N1271: [call void @free(i8* %5, i8* @free)]
N1269 -> N1271: [call void @free(i8* %5, i8* @free)] <--
-- end of trace --
-- start of trace --
Weakness : Null Pointer Dereference
At node  : N1266
On edge  : N1266 -{call void @free(i8* %4, i8* @free)}-> N1271
Message  : null pointer dereference
> Start from entry function: main, At N1278 of Function main
> Entering function: good12, On N1307 -> N1241 (call good12)
> Entering function: globalReturnsTrueOrFalse, On N1245 -> N1235 (call globalReturnsTrueOrFalse)
> Leaving function: globalReturnsTrueOrFalse, On N1234 -> N1246 (Return edge from globalReturnsTrueOrFalse to good12)
> takes the false branch, At N1247 of Function good12
> Entering function: printLine, On N1260 -> N1293 (call printLine)
> takes the false branch, At N1299 of Function printLine
> Leaving function: printLine, On N1292 -> N1262 (Return edge from printLine to good12)
> Entering function: globalReturnsTrueOrFalse, On N1262 -> N1235 (call globalReturnsTrueOrFalse)
> Leaving function: globalReturnsTrueOrFalse, On N1234 -> N1263 (Return edge from globalReturnsTrueOrFalse to good12)
> takes the true branch, At N1264 of Function good12
<Defect> : N1266 -> N1271: [call void @free(i8* %4, i8* @free)]
N1266 -> N1271: [call void @free(i8* %4, i8* @free)] <--
-- end of trace --
=====================================================
CWE_401(Memory Leak): 1
	[./401_12.c 127] bad12 		[N1179 -{Return edge from bad12 to main}-> N1281]	(the heap object @H(bad12::call1) is not referenced any more)

CWE_457(Use of Uninitialized Variable): 2
	[./401_12.c 68] bad12 		[N1199 -{store i8* %3, i8** %data, align 8}-> N1200]	(use of uninitialized variable)
	[* 0] printLine 		[N1295 -{store i8* %line, i8** %line.addr, align 8}-> N1297]	(use of uninitialized variable)

CWE_476(Null Pointer Dereference): 2
	[./401_12.c 118] good12 		[N1269 -{call void @free(i8* %5, i8* @free)}-> N1271]	(null pointer dereference)
	[./401_12.c 113] good12 		[N1266 -{call void @free(i8* %4, i8* @free)}-> N1271]	(null pointer dereference)

Found 5 defects in all (2 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/401/401_13.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printLine]
 +printLine
SCC(1): [bad13]
 +bad13
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [good13]
 +good13
SCC(1): [main]
 +main
SCC(1): [printIntLine]
 +printIntLine
<begin of summary store (POINTER_AP)>
Functions [printIntLine, printLine, bad13, globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good13, main]
Loops     []
----
function: bad13
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good13
P+ = [] 
P- = [H(good13::call)] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [H(good13::call)] 
Point-To:

Ret-Value: R
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.013s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N1373): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Memory Leak
At node  : N1316
On edge  : N1316 -{Return edge from bad13 to main}-> N1376
Message  : the heap object @H(bad13::call) is not referenced any more
> Start from entry function: main, At N1373 of Function main
> Entering function: good13, On N1402 -> N1351 (call good13)
> takes the true branch, At N1359 of Function good13
> Leaving function: good13, On N1350 -> N1375 (Return edge from good13 to main)
> Entering function: bad13, On N1375 -> N1317 (call bad13)
> takes the false branch, At N1325 of Function bad13
> Entering function: printLine, On N1330 -> N1388 (call printLine)
> takes the true branch, At N1394 of Function printLine
> Leaving function: printLine, On N1387 -> N1332 (Return edge from printLine to bad13)
<Defect> : N1316 -> N1376: [Return edge from bad13 to main]
N1316 -> N1376: [Return edge from bad13 to main] <--
-- end of trace --
=====================================================
CWE_401(Memory Leak): 1
	[./401_13.c 107] bad13 		[N1316 -{Return edge from bad13 to main}-> N1376]	(the heap object @H(bad13::call) is not referenced any more)

Found 1 defects in all (2 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/401/401_14.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printLine]
 +printLine
SCC(1): [bad14]
 +bad14
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [good14]
 +good14
SCC(1): [main]
 +main
SCC(1): [printIntLine]
 +printIntLine
<begin of summary store (POINTER_AP)>
Functions [printLine, bad14, globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good14, main, printIntLine]
Loops     []
----
function: bad14
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good14
P+ = [] 
P- = [N, H(good14::call)] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [N, H(good14::call)] 
Point-To:

Ret-Value: R
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.012s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N1492): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Memory Leak
At node  : N1411
On edge  : N1411 -{Return edge from bad14 to main}-> N1495
Message  : the heap object @H(bad14::call) is not referenced any more
> Start from entry function: main, At N1492 of Function main
> Entering function: good14, On N1521 -> N1457 (call good14)
> takes the true branch, At N1463 of Function good14
> takes the true branch, At N1468 of Function good14
> Leaving function: good14, On N1456 -> N1494 (Return edge from good14 to main)
> Entering function: bad14, On N1494 -> N1412 (call bad14)
> takes the true branch, At N1418 of Function bad14
> takes the false branch, At N1423 of Function bad14
> Entering function: printLine, On N1428 -> N1507 (call printLine)
> takes the true branch, At N1513 of Function printLine
> Leaving function: printLine, On N1506 -> N1430 (Return edge from printLine to bad14)
> takes the true branch, At N1432 of Function bad14
<Defect> : N1411 -> N1495: [Return edge from bad14 to main]
N1411 -> N1495: [Return edge from bad14 to main] <--
-- end of trace --
=====================================================
CWE_401(Memory Leak): 1
	[./401_14.c 107] bad14 		[N1411 -{Return edge from bad14 to main}-> N1495]	(the heap object @H(bad14::call) is not referenced any more)

Found 1 defects in all (2 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/401/401_15.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printLine]
 +printLine
SCC(1): [bad15]
 +bad15
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [good15]
 +good15
SCC(1): [main]
 +main
SCC(1): [printIntLine]
 +printIntLine
<begin of summary store (POINTER_AP)>
Functions [bad15, globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good15, main, printIntLine, printLine]
Loops     []
----
function: bad15
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good15
P+ = [] 
P- = [H(good15::call)] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [H(good15::call)] 
Point-To:

Ret-Value: R
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.005s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N1588): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Memory Leak
At node  : N1531
On edge  : N1531 -{Return edge from bad15 to main}-> N1591
Message  : the heap object @H(bad15::call) is not referenced any more
> Start from entry function: main, At N1588 of Function main
> Entering function: good15, On N1617 -> N1566 (call good15)
> takes the true branch, At N1574 of Function good15
> Leaving function: good15, On N1565 -> N1590 (Return edge from good15 to main)
> Entering function: bad15, On N1590 -> N1532 (call bad15)
> takes the false branch, At N1540 of Function bad15
> Entering function: printLine, On N1545 -> N1603 (call printLine)
> takes the true branch, At N1609 of Function printLine
> Leaving function: printLine, On N1602 -> N1547 (Return edge from printLine to bad15)
<Defect> : N1531 -> N1591: [Return edge from bad15 to main]
N1531 -> N1591: [Return edge from bad15 to main] <--
-- end of trace --
=====================================================
CWE_401(Memory Leak): 1
	[./401_15.c 126] bad15 		[N1531 -{Return edge from bad15 to main}-> N1591]	(the heap object @H(bad15::call) is not referenced any more)

Found 1 defects in all (2 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/401/401_16.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printLine]
 +printLine
SCC(1): [bad16]
 +bad16
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [good16]
 +good16
SCC(1): [main]
 +main
SCC(1): [printIntLine]
 +printIntLine
<begin of summary store (POINTER_AP)>
Functions [globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good16, main, printIntLine, printLine, bad16]
Loops     []
----
function: bad16
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good16
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.005s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N1681): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Memory Leak
At node  : N1626
On edge  : N1626 -{Return edge from bad16 to main}-> N1684
Message  : the heap object @H(bad16::call) is not referenced any more
> Start from entry function: main, At N1681 of Function main
> Entering function: good16, On N1710 -> N1661 (call good16)
> takes the false branch, At N1669 of Function good16
> Entering function: printLine, On N1674 -> N1696 (call printLine)
> takes the true branch, At N1702 of Function printLine
> Leaving function: printLine, On N1695 -> N1676 (Return edge from printLine to good16)
> Leaving function: good16, On N1660 -> N1683 (Return edge from good16 to main)
> Entering function: bad16, On N1683 -> N1627 (call bad16)
> takes the false branch, At N1635 of Function bad16
> Entering function: printLine, On N1640 -> N1696 (call printLine)
> takes the true branch, At N1702 of Function printLine
> Leaving function: printLine, On N1695 -> N1642 (Return edge from printLine to bad16)
<Defect> : N1626 -> N1684: [Return edge from bad16 to main]
N1626 -> N1684: [Return edge from bad16 to main] <--
-- end of trace --
-- start of trace --
Weakness : Use of Uninitialized Variable
At node  : N1666
On edge  : N1666 -{store i8* %0, i8** %data, align 8}-> N1667
Message  : use of uninitialized variable
> Start from entry function: main, At N1681 of Function main
> Entering function: good16, On N1710 -> N1661 (call good16)
<Defect> : N1666 -> N1667: [store i8* %0, i8** %data, align 8]
N1666 -> N1667: [store i8* %0, i8** %data, align 8] <--
-- end of trace --
-- start of trace --
Weakness : Use of Uninitialized Variable
At node  : N1698
On edge  : N1698 -{store i8* %line, i8** %line.addr, align 8}-> N1700
Message  : use of uninitialized variable
> Start from entry function: main, At N1681 of Function main
> Entering function: good16, On N1710 -> N1661 (call good16)
> takes the false branch, At N1669 of Function good16
> Entering function: printLine, On N1674 -> N1696 (call printLine)
<Defect> : N1698 -> N1700: [store i8* %line, i8** %line.addr, align 8]
N1698 -> N1700: [store i8* %line, i8** %line.addr, align 8] <--
-- end of trace --
=====================================================
CWE_401(Memory Leak): 1
	[./401_16.c 90] bad16 		[N1626 -{Return edge from bad16 to main}-> N1684]	(the heap object @H(bad16::call) is not referenced any more)

CWE_457(Use of Uninitialized Variable): 2
	[./401_16.c 75] good16 		[N1666 -{store i8* %0, i8** %data, align 8}-> N1667]	(use of uninitialized variable)
	[* 0] printLine 		[N1698 -{store i8* %line, i8** %line.addr, align 8}-> N1700]	(use of uninitialized variable)

Found 3 defects in all (2 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/401/401_17.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printLine]
 +printLine
SCC(1): [bad17]
 +bad17
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [good17]
 +good17
SCC(1): [main]
 +main
SCC(1): [printIntLine]
 +printIntLine
<begin of summary store (POINTER_AP)>
Functions [main, printIntLine, printLine, bad17, globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good17]
Loops     []
----
function: bad17
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good17
P+ = [] 
P- = [H(good17::call)] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [H(good17::call)] 
Point-To:

Ret-Value: R
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.037s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N1776): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Memory Leak
At node  : N1719
On edge  : N1719 -{Return edge from bad17 to main}-> N1779
Message  : the heap object @H(bad17::call) is not referenced any more
> Start from entry function: main, At N1776 of Function main
> Entering function: good17, On N1805 -> N1754 (call good17)
> takes the true branch, At N1762 of Function good17
> Leaving function: good17, On N1753 -> N1778 (Return edge from good17 to main)
> Entering function: bad17, On N1778 -> N1720 (call bad17)
> takes the false branch, At N1728 of Function bad17
> Entering function: printLine, On N1733 -> N1791 (call printLine)
> takes the true branch, At N1797 of Function printLine
> Leaving function: printLine, On N1790 -> N1735 (Return edge from printLine to bad17)
<Defect> : N1719 -> N1779: [Return edge from bad17 to main]
N1719 -> N1779: [Return edge from bad17 to main] <--
-- end of trace --
=====================================================
CWE_401(Memory Leak): 1
	[./401_17.c 105] bad17 		[N1719 -{Return edge from bad17 to main}-> N1779]	(the heap object @H(bad17::call) is not referenced any more)

Found 1 defects in all (2 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/401/401_18.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printLine]
 +printLine
SCC(1): [bad18]
 +bad18
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [good18]
 +good18
SCC(1): [main]
 +main
SCC(1): [printIntLine]
 +printIntLine
<begin of summary store (POINTER_AP)>
Functions [bad18, globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good18, main, printIntLine, printLine]
Loops     []
----
function: bad18
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good18
P+ = [] 
P- = [H(good18::call)] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [H(good18::call)] 
Point-To:

Ret-Value: R
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.006s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N1871): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Memory Leak
At node  : N1814
On edge  : N1814 -{Return edge from bad18 to main}-> N1874
Message  : the heap object @H(bad18::call) is not referenced any more
> Start from entry function: main, At N1871 of Function main
> Entering function: good18, On N1900 -> N1849 (call good18)
> takes the true branch, At N1857 of Function good18
> Leaving function: good18, On N1848 -> N1873 (Return edge from good18 to main)
> Entering function: bad18, On N1873 -> N1815 (call bad18)
> takes the false branch, At N1823 of Function bad18
> Entering function: printLine, On N1828 -> N1886 (call printLine)
> takes the true branch, At N1892 of Function printLine
> Leaving function: printLine, On N1885 -> N1830 (Return edge from printLine to bad18)
<Defect> : N1814 -> N1874: [Return edge from bad18 to main]
N1814 -> N1874: [Return edge from bad18 to main] <--
-- end of trace --
=====================================================
CWE_401(Memory Leak): 1
	[./401_18.c 105] bad18 		[N1814 -{Return edge from bad18 to main}-> N1874]	(the heap object @H(bad18::call) is not referenced any more)

Found 1 defects in all (2 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/401/401_19.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printLine]
 +printLine
SCC(1): [bad19]
 +bad19
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [good19]
 +good19
SCC(1): [main]
 +main
SCC(1): [printIntLine]
 +printIntLine
<begin of summary store (POINTER_AP)>
Functions [bad19, globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good19, main, printIntLine, printLine]
Loops     []
----
function: bad19
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good19
P+ = [] 
P- = [H(good19::call)] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [H(good19::call)] 
Point-To:

Ret-Value: R
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.005s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N1966): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Memory Leak
At node  : N1909
On edge  : N1909 -{Return edge from bad19 to main}-> N1969
Message  : the heap object @H(bad19::call) is not referenced any more
> Start from entry function: main, At N1966 of Function main
> Entering function: good19, On N1995 -> N1944 (call good19)
> takes the true branch, At N1952 of Function good19
> Leaving function: good19, On N1943 -> N1968 (Return edge from good19 to main)
> Entering function: bad19, On N1968 -> N1910 (call bad19)
> takes the false branch, At N1918 of Function bad19
> Entering function: printLine, On N1923 -> N1981 (call printLine)
> takes the true branch, At N1987 of Function printLine
> Leaving function: printLine, On N1980 -> N1925 (Return edge from printLine to bad19)
<Defect> : N1909 -> N1969: [Return edge from bad19 to main]
N1909 -> N1969: [Return edge from bad19 to main] <--
-- end of trace --
=====================================================
CWE_401(Memory Leak): 1
	[./401_19.c 108] bad19 		[N1909 -{Return edge from bad19 to main}-> N1969]	(the heap object @H(bad19::call) is not referenced any more)

Found 1 defects in all (2 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/401/401_20.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printLine]
 +printLine
SCC(1): [bad20]
 +bad20
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [good20]
 +good20
SCC(1): [main]
 +main
SCC(1): [printIntLine]
 +printIntLine
<begin of summary store (POINTER_AP)>
Functions [globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good20, main, printIntLine, printLine, bad20]
Loops     []
----
function: bad20
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good20
P+ = [] 
P- = [N, H(good20::call)] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [N, H(good20::call)] 
Point-To:

Ret-Value: R
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.014s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N2085): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Memory Leak
At node  : N2004
On edge  : N2004 -{Return edge from bad20 to main}-> N2088
Message  : the heap object @H(bad20::call) is not referenced any more
> Start from entry function: main, At N2085 of Function main
> Entering function: good20, On N2114 -> N2050 (call good20)
> takes the true branch, At N2056 of Function good20
> takes the true branch, At N2061 of Function good20
> Leaving function: good20, On N2049 -> N2087 (Return edge from good20 to main)
> Entering function: bad20, On N2087 -> N2005 (call bad20)
> takes the true branch, At N2011 of Function bad20
> takes the false branch, At N2016 of Function bad20
> Entering function: printLine, On N2021 -> N2100 (call printLine)
> takes the true branch, At N2106 of Function printLine
> Leaving function: printLine, On N2099 -> N2023 (Return edge from printLine to bad20)
> takes the true branch, At N2025 of Function bad20
<Defect> : N2004 -> N2088: [Return edge from bad20 to main]
N2004 -> N2088: [Return edge from bad20 to main] <--
-- end of trace --
=====================================================
CWE_401(Memory Leak): 1
	[./401_20.c 107] bad20 		[N2004 -{Return edge from bad20 to main}-> N2088]	(the heap object @H(bad20::call) is not referenced any more)

Found 1 defects in all (2 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/401/401_21.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printLine]
 +printLine
SCC(1): [bad21]
 +bad21
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [good21]
 +good21
SCC(1): [main]
 +main
SCC(1): [printIntLine]
 +printIntLine
<begin of summary store (POINTER_AP)>
Functions [globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good21, main, printIntLine, printLine, bad21]
Loops     []
----
function: bad21
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good21
P+ = [] 
P- = [H(good21::call)] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [H(good21::call)] 
Point-To:

Ret-Value: R
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.012s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N2183): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Memory Leak
At node  : N2126
On edge  : N2126 -{Return edge from bad21 to main}-> N2186
Message  : the heap object @H(bad21::call) is not referenced any more
> Start from entry function: main, At N2183 of Function main
> Entering function: good21, On N2212 -> N2161 (call good21)
> takes the true branch, At N2169 of Function good21
> Leaving function: good21, On N2160 -> N2185 (Return edge from good21 to main)
> Entering function: bad21, On N2185 -> N2127 (call bad21)
> takes the false branch, At N2135 of Function bad21
> Entering function: printLine, On N2140 -> N2198 (call printLine)
> takes the true branch, At N2204 of Function printLine
> Leaving function: printLine, On N2197 -> N2142 (Return edge from printLine to bad21)
<Defect> : N2126 -> N2186: [Return edge from bad21 to main]
N2126 -> N2186: [Return edge from bad21 to main] <--
-- end of trace --
=====================================================
CWE_401(Memory Leak): 1
	[./401_21.c 107] bad21 		[N2126 -{Return edge from bad21 to main}-> N2186]	(the heap object @H(bad21::call) is not referenced any more)

Found 1 defects in all (2 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/401/401_22.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printLine]
 +printLine
SCC(1): [bad22]
 +bad22
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [good22]
 +good22
SCC(1): [main]
 +main
SCC(1): [printIntLine]
 +printIntLine
<begin of summary store (POINTER_AP)>
Functions [main, printIntLine, printLine, bad22, globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good22]
Loops     []
----
function: bad22
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good22
P+ = [] 
P- = [N, H(good22::call)] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [N, H(good22::call)] 
Point-To:

Ret-Value: R
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.006s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N2302): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Memory Leak
At node  : N2221
On edge  : N2221 -{Return edge from bad22 to main}-> N2305
Message  : the heap object @H(bad22::call) is not referenced any more
> Start from entry function: main, At N2302 of Function main
> Entering function: good22, On N2331 -> N2267 (call good22)
> takes the true branch, At N2273 of Function good22
> takes the true branch, At N2278 of Function good22
> Leaving function: good22, On N2266 -> N2304 (Return edge from good22 to main)
> Entering function: bad22, On N2304 -> N2222 (call bad22)
> takes the true branch, At N2228 of Function bad22
> takes the false branch, At N2233 of Function bad22
> Entering function: printLine, On N2238 -> N2317 (call printLine)
> takes the true branch, At N2323 of Function printLine
> Leaving function: printLine, On N2316 -> N2240 (Return edge from printLine to bad22)
> takes the true branch, At N2242 of Function bad22
<Defect> : N2221 -> N2305: [Return edge from bad22 to main]
N2221 -> N2305: [Return edge from bad22 to main] <--
-- end of trace --
=====================================================
CWE_401(Memory Leak): 1
	[./401_22.c 107] bad22 		[N2221 -{Return edge from bad22 to main}-> N2305]	(the heap object @H(bad22::call) is not referenced any more)

Found 1 defects in all (2 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/401/401_23.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
10 SCCs to deal with
SCC(1): [printLine]
 +printLine
SCC(1): [staticReturnsTrue]
 +staticReturnsTrue
SCC(1): [bad23]
 +bad23
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [staticReturnsFalse]
 +staticReturnsFalse
SCC(1): [good23]
 +good23
SCC(1): [main]
 +main
SCC(1): [printIntLine]
 +printIntLine
<begin of summary store (POINTER_AP)>
Functions [main, printIntLine, printLine, staticReturnsFalse, staticReturnsTrue, bad23, globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good23]
Loops     []
----
function: bad23
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good23
P+ = [] 
P- = [N, H(good23::call1)] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [N, H(good23::call1)] 
Point-To:

Ret-Value: R
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: staticReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: staticReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.006s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N2423): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Memory Leak
At node  : N2342
On edge  : N2342 -{Return edge from bad23 to main}-> N2426
Message  : the heap object @H(bad23::call1) is not referenced any more
> Start from entry function: main, At N2423 of Function main
> Entering function: good23, On N2460 -> N2388 (call good23)
> Entering function: staticReturnsTrue, On N2392 -> N2457 (call staticReturnsTrue)
> Leaving function: staticReturnsTrue, On N2456 -> N2393 (Return edge from staticReturnsTrue to good23)
> takes the true branch, At N2394 of Function good23
> takes the true branch, At N2399 of Function good23
> Leaving function: good23, On N2387 -> N2425 (Return edge from good23 to main)
> Entering function: bad23, On N2425 -> N2343 (call bad23)
> Entering function: staticReturnsTrue, On N2347 -> N2457 (call staticReturnsTrue)
> Leaving function: staticReturnsTrue, On N2456 -> N2348 (Return edge from staticReturnsTrue to bad23)
> takes the true branch, At N2349 of Function bad23
> takes the false branch, At N2354 of Function bad23
> Entering function: printLine, On N2359 -> N2438 (call printLine)
> takes the true branch, At N2444 of Function printLine
> Leaving function: printLine, On N2437 -> N2361 (Return edge from printLine to bad23)
> Entering function: staticReturnsTrue, On N2361 -> N2457 (call staticReturnsTrue)
> Leaving function: staticReturnsTrue, On N2456 -> N2362 (Return edge from staticReturnsTrue to bad23)
> takes the true branch, At N2363 of Function bad23
<Defect> : N2342 -> N2426: [Return edge from bad23 to main]
N2342 -> N2426: [Return edge from bad23 to main] <--
-- end of trace --
=====================================================
CWE_401(Memory Leak): 1
	[./401_23.c 115] bad23 		[N2342 -{Return edge from bad23 to main}-> N2426]	(the heap object @H(bad23::call1) is not referenced any more)

Found 1 defects in all (2 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/401/401_24.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printLine]
 +printLine
SCC(1): [bad24]
 +bad24
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [good24]
 +good24
SCC(1): [main]
 +main
SCC(1): [printIntLine]
 +printIntLine
<begin of summary store (POINTER_AP)>
Functions [printIntLine, printLine, bad24, globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good24, main]
Loops     []
----
function: bad24
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good24
P+ = [] 
P- = [H(good24::call)] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [H(good24::call)] 
Point-To:

Ret-Value: R
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.005s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N2527): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Memory Leak
At node  : N2470
On edge  : N2470 -{Return edge from bad24 to main}-> N2530
Message  : the heap object @H(bad24::call) is not referenced any more
> Start from entry function: main, At N2527 of Function main
> Entering function: good24, On N2556 -> N2505 (call good24)
> takes the true branch, At N2513 of Function good24
> Leaving function: good24, On N2504 -> N2529 (Return edge from good24 to main)
> Entering function: bad24, On N2529 -> N2471 (call bad24)
> takes the false branch, At N2479 of Function bad24
> Entering function: printLine, On N2484 -> N2542 (call printLine)
> takes the true branch, At N2548 of Function printLine
> Leaving function: printLine, On N2541 -> N2486 (Return edge from printLine to bad24)
<Defect> : N2470 -> N2530: [Return edge from bad24 to main]
N2470 -> N2530: [Return edge from bad24 to main] <--
-- end of trace --
=====================================================
CWE_401(Memory Leak): 1
	[./401_24.c 105] bad24 		[N2470 -{Return edge from bad24 to main}-> N2530]	(the heap object @H(bad24::call) is not referenced any more)

Found 1 defects in all (2 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/401/401_25.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printLine]
 +printLine
SCC(1): [bad25]
 +bad25
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [good25]
 +good25
SCC(1): [main]
 +main
SCC(1): [printIntLine]
 +printIntLine
<begin of summary store (POINTER_AP)>
Functions [bad25, globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good25, main, printIntLine, printLine]
Loops     []
----
function: bad25
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good25
P+ = [] 
P- = [H(good25::call)] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [H(good25::call)] 
Point-To:

Ret-Value: R
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.004s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N2622): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Memory Leak
At node  : N2565
On edge  : N2565 -{Return edge from bad25 to main}-> N2625
Message  : the heap object @H(bad25::call) is not referenced any more
> Start from entry function: main, At N2622 of Function main
> Entering function: good25, On N2651 -> N2600 (call good25)
> takes the true branch, At N2608 of Function good25
> Leaving function: good25, On N2599 -> N2624 (Return edge from good25 to main)
> Entering function: bad25, On N2624 -> N2566 (call bad25)
> takes the false branch, At N2574 of Function bad25
> Entering function: printLine, On N2579 -> N2637 (call printLine)
> takes the true branch, At N2643 of Function printLine
> Leaving function: printLine, On N2636 -> N2581 (Return edge from printLine to bad25)
<Defect> : N2565 -> N2625: [Return edge from bad25 to main]
N2565 -> N2625: [Return edge from bad25 to main] <--
-- end of trace --
=====================================================
CWE_401(Memory Leak): 1
	[./401_25.c 105] bad25 		[N2565 -{Return edge from bad25 to main}-> N2625]	(the heap object @H(bad25::call) is not referenced any more)

Found 1 defects in all (2 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/401/401_26.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printLine]
 +printLine
SCC(1): [bad26]
 +bad26
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [good26]
 +good26
SCC(1): [main]
 +main
SCC(1): [printIntLine]
 +printIntLine
<begin of summary store (POINTER_AP)>
Functions [bad26, globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good26, main, printIntLine, printLine]
Loops     []
----
function: bad26
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good26
P+ = [] 
P- = [N, H(good26::call)] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [N, H(good26::call)] 
Point-To:

Ret-Value: R
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.004s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N2741): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Memory Leak
At node  : N2660
On edge  : N2660 -{Return edge from bad26 to main}-> N2744
Message  : the heap object @H(bad26::call) is not referenced any more
> Start from entry function: main, At N2741 of Function main
> Entering function: good26, On N2770 -> N2706 (call good26)
> takes the true branch, At N2712 of Function good26
> takes the true branch, At N2717 of Function good26
> Leaving function: good26, On N2705 -> N2743 (Return edge from good26 to main)
> Entering function: bad26, On N2743 -> N2661 (call bad26)
> takes the true branch, At N2667 of Function bad26
> takes the false branch, At N2672 of Function bad26
> Entering function: printLine, On N2677 -> N2756 (call printLine)
> takes the true branch, At N2762 of Function printLine
> Leaving function: printLine, On N2755 -> N2679 (Return edge from printLine to bad26)
> takes the true branch, At N2681 of Function bad26
<Defect> : N2660 -> N2744: [Return edge from bad26 to main]
N2660 -> N2744: [Return edge from bad26 to main] <--
-- end of trace --
=====================================================
CWE_401(Memory Leak): 1
	[./401_26.c 105] bad26 		[N2660 -{Return edge from bad26 to main}-> N2744]	(the heap object @H(bad26::call) is not referenced any more)

Found 1 defects in all (2 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/401/401_27.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [printLine]
 +printLine
SCC(1): [bad27]
 +bad27
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [good27]
 +good27
SCC(1): [main]
 +main
SCC(1): [printIntLine]
 +printIntLine
<begin of summary store (POINTER_AP)>
Functions [globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good27, main, printIntLine, printLine, bad27]
Loops     []
----
function: bad27
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good27
P+ = [] 
P- = [N, H(good27::call1)] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [N, H(good27::call1)] 
Point-To:

Ret-Value: R
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.012s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N2861): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Memory Leak
At node  : N2780
On edge  : N2780 -{Return edge from bad27 to main}-> N2864
Message  : the heap object @H(bad27::call1) is not referenced any more
> Start from entry function: main, At N2861 of Function main
> Entering function: good27, On N2890 -> N2826 (call good27)
> Entering function: globalReturnsTrue, On N2830 -> N2816 (call globalReturnsTrue)
> Leaving function: globalReturnsTrue, On N2815 -> N2831 (Return edge from globalReturnsTrue to good27)
> takes the true branch, At N2832 of Function good27
> takes the true branch, At N2837 of Function good27
> Leaving function: good27, On N2825 -> N2863 (Return edge from good27 to main)
> Entering function: bad27, On N2863 -> N2781 (call bad27)
> Entering function: globalReturnsTrue, On N2785 -> N2816 (call globalReturnsTrue)
> Leaving function: globalReturnsTrue, On N2815 -> N2786 (Return edge from globalReturnsTrue to bad27)
> takes the true branch, At N2787 of Function bad27
> takes the false branch, At N2792 of Function bad27
> Entering function: printLine, On N2797 -> N2876 (call printLine)
> takes the true branch, At N2882 of Function printLine
> Leaving function: printLine, On N2875 -> N2799 (Return edge from printLine to bad27)
> Entering function: globalReturnsTrue, On N2799 -> N2816 (call globalReturnsTrue)
> Leaving function: globalReturnsTrue, On N2815 -> N2800 (Return edge from globalReturnsTrue to bad27)
> takes the true branch, At N2801 of Function bad27
<Defect> : N2780 -> N2864: [Return edge from bad27 to main]
N2780 -> N2864: [Return edge from bad27 to main] <--
-- end of trace --
=====================================================
CWE_401(Memory Leak): 1
	[./401_27.c 105] bad27 		[N2780 -{Return edge from bad27 to main}-> N2864]	(the heap object @H(bad27::call1) is not referenced any more)

Found 1 defects in all (2 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/401/401_28.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printLine]
 +printLine
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [bad28]
 +bad28
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [good28]
 +good28
SCC(1): [main]
 +main
SCC(1): [printIntLine]
 +printIntLine
<begin of summary store (POINTER_AP)>
Functions [bad28, globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good28, main, printIntLine, printLine]
Loops     []
----
function: bad28
P+ = [] 
P- = [H(bad28::call1)] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good28
P+ = [] 
P- = [H(good28::call1), H(good28::call4)] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [H(bad28::call1), H(good28::call1), H(good28::call4)] 
Point-To:

Ret-Value: R
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.005s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N3011): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Memory Leak
At node  : N2900
On edge  : N2900 -{Return edge from bad28 to main}-> N3014
Message  : the heap object @H(bad28::call1) is not referenced any more
> Start from entry function: main, At N3011 of Function main
> Entering function: good28, On N3040 -> N2962 (call good28)
> Entering function: globalReturnsTrueOrFalse, On N2966 -> N2956 (call globalReturnsTrueOrFalse)
> Leaving function: globalReturnsTrueOrFalse, On N2955 -> N2967 (Return edge from globalReturnsTrueOrFalse to good28)
> takes the false branch, At N2968 of Function good28
> takes the true branch, At N2984 of Function good28
> Leaving function: good28, On N2961 -> N3013 (Return edge from good28 to main)
> Entering function: bad28, On N3013 -> N2901 (call bad28)
> Entering function: globalReturnsTrueOrFalse, On N2905 -> N2956 (call globalReturnsTrueOrFalse)
> Leaving function: globalReturnsTrueOrFalse, On N2955 -> N2906 (Return edge from globalReturnsTrueOrFalse to bad28)
> takes the true branch, At N2907 of Function bad28
> takes the false branch, At N2912 of Function bad28
> Entering function: printLine, On N2917 -> N3026 (call printLine)
> takes the true branch, At N3032 of Function printLine
> Leaving function: printLine, On N3025 -> N2930 (Return edge from printLine to bad28)
> Entering function: globalReturnsTrueOrFalse, On N2930 -> N2956 (call globalReturnsTrueOrFalse)
> Leaving function: globalReturnsTrueOrFalse, On N2955 -> N2931 (Return edge from globalReturnsTrueOrFalse to bad28)
> takes the true branch, At N2932 of Function bad28
<Defect> : N2900 -> N3014: [Return edge from bad28 to main]
N2900 -> N3014: [Return edge from bad28 to main] <--
-- end of trace --
-- start of trace --
Weakness : Use of Uninitialized Variable
At node  : N2920
On edge  : N2920 -{store i8* %3, i8** %data, align 8}-> N2921
Message  : use of uninitialized variable
> Start from entry function: main, At N3011 of Function main
> Entering function: good28, On N3040 -> N2962 (call good28)
> Entering function: globalReturnsTrueOrFalse, On N2966 -> N2956 (call globalReturnsTrueOrFalse)
> Leaving function: globalReturnsTrueOrFalse, On N2955 -> N2967 (Return edge from globalReturnsTrueOrFalse to good28)
> takes the false branch, At N2968 of Function good28
> takes the true branch, At N2984 of Function good28
> Leaving function: good28, On N2961 -> N3013 (Return edge from good28 to main)
> Entering function: bad28, On N3013 -> N2901 (call bad28)
> Entering function: globalReturnsTrueOrFalse, On N2905 -> N2956 (call globalReturnsTrueOrFalse)
> Leaving function: globalReturnsTrueOrFalse, On N2955 -> N2906 (Return edge from globalReturnsTrueOrFalse to bad28)
> takes the false branch, At N2907 of Function bad28
<Defect> : N2920 -> N2921: [store i8* %3, i8** %data, align 8]
N2920 -> N2921: [store i8* %3, i8** %data, align 8] <--
-- end of trace --
-- start of trace --
Weakness : Use of Uninitialized Variable
At node  : N3028
On edge  : N3028 -{store i8* %line, i8** %line.addr, align 8}-> N3030
Message  : use of uninitialized variable
> Start from entry function: main, At N3011 of Function main
> Entering function: good28, On N3040 -> N2962 (call good28)
> Entering function: globalReturnsTrueOrFalse, On N2966 -> N2956 (call globalReturnsTrueOrFalse)
> Leaving function: globalReturnsTrueOrFalse, On N2955 -> N2967 (Return edge from globalReturnsTrueOrFalse to good28)
> takes the false branch, At N2968 of Function good28
> takes the true branch, At N2984 of Function good28
> Leaving function: good28, On N2961 -> N3013 (Return edge from good28 to main)
> Entering function: bad28, On N3013 -> N2901 (call bad28)
> Entering function: globalReturnsTrueOrFalse, On N2905 -> N2956 (call globalReturnsTrueOrFalse)
> Leaving function: globalReturnsTrueOrFalse, On N2955 -> N2906 (Return edge from globalReturnsTrueOrFalse to bad28)
> takes the false branch, At N2907 of Function bad28
> takes the false branch, At N2923 of Function bad28
> Entering function: printLine, On N2928 -> N3026 (call printLine)
<Defect> : N3028 -> N3030: [store i8* %line, i8** %line.addr, align 8]
N3028 -> N3030: [store i8* %line, i8** %line.addr, align 8] <--
-- end of trace --
=====================================================
CWE_401(Memory Leak): 1
	[./401_28.c 126] bad28 		[N2900 -{Return edge from bad28 to main}-> N3014]	(the heap object @H(bad28::call1) is not referenced any more)

CWE_457(Use of Uninitialized Variable): 2
	[./401_28.c 68] bad28 		[N2920 -{store i8* %3, i8** %data, align 8}-> N2921]	(use of uninitialized variable)
	[* 0] printLine 		[N3028 -{store i8* %line, i8** %line.addr, align 8}-> N3030]	(use of uninitialized variable)

Found 3 defects in all (2 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/401/401_29.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printLine]
 +printLine
SCC(1): [bad29]
 +bad29
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [good29]
 +good29
SCC(1): [main]
 +main
SCC(1): [printIntLine]
 +printIntLine
<begin of summary store (POINTER_AP)>
Functions [bad29, globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good29, main, printIntLine, printLine]
Loops     []
----
function: bad29
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good29
P+ = [] 
P- = [H(good29::call)] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [H(good29::call)] 
Point-To:

Ret-Value: R
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.006s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N3106): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Memory Leak
At node  : N3049
On edge  : N3049 -{Return edge from bad29 to main}-> N3109
Message  : the heap object @H(bad29::call) is not referenced any more
> Start from entry function: main, At N3106 of Function main
> Entering function: good29, On N3135 -> N3084 (call good29)
> takes the true branch, At N3092 of Function good29
> Leaving function: good29, On N3083 -> N3108 (Return edge from good29 to main)
> Entering function: bad29, On N3108 -> N3050 (call bad29)
> takes the false branch, At N3058 of Function bad29
> Entering function: printLine, On N3063 -> N3121 (call printLine)
> takes the true branch, At N3127 of Function printLine
> Leaving function: printLine, On N3120 -> N3065 (Return edge from printLine to bad29)
<Defect> : N3049 -> N3109: [Return edge from bad29 to main]
N3049 -> N3109: [Return edge from bad29 to main] <--
-- end of trace --
=====================================================
CWE_401(Memory Leak): 1
	[./401_29.c 105] bad29 		[N3049 -{Return edge from bad29 to main}-> N3109]	(the heap object @H(bad29::call) is not referenced any more)

Found 1 defects in all (2 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/401/401_30.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printLine]
 +printLine
SCC(1): [bad30]
 +bad30
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [good30]
 +good30
SCC(1): [main]
 +main
SCC(1): [printIntLine]
 +printIntLine
<begin of summary store (POINTER_AP)>
Functions [globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good30, main, printIntLine, printLine, bad30]
Loops     []
----
function: bad30
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good30
P+ = [] 
P- = [N, H(good30::call)] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [N, H(good30::call)] 
Point-To:

Ret-Value: R
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.004s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N3225): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Memory Leak
At node  : N3144
On edge  : N3144 -{Return edge from bad30 to main}-> N3228
Message  : the heap object @H(bad30::call) is not referenced any more
> Start from entry function: main, At N3225 of Function main
> Entering function: good30, On N3254 -> N3190 (call good30)
> takes the true branch, At N3196 of Function good30
> takes the true branch, At N3201 of Function good30
> Leaving function: good30, On N3189 -> N3227 (Return edge from good30 to main)
> Entering function: bad30, On N3227 -> N3145 (call bad30)
> takes the true branch, At N3151 of Function bad30
> takes the false branch, At N3156 of Function bad30
> Entering function: printLine, On N3161 -> N3240 (call printLine)
> takes the true branch, At N3246 of Function printLine
> Leaving function: printLine, On N3239 -> N3163 (Return edge from printLine to bad30)
> takes the true branch, At N3165 of Function bad30
<Defect> : N3144 -> N3228: [Return edge from bad30 to main]
N3144 -> N3228: [Return edge from bad30 to main] <--
-- end of trace --
=====================================================
CWE_401(Memory Leak): 1
	[./401_30.c 105] bad30 		[N3144 -{Return edge from bad30 to main}-> N3228]	(the heap object @H(bad30::call) is not referenced any more)

Found 1 defects in all (2 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/401/401_31.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printLine]
 +printLine
SCC(1): [bad31]
 +bad31
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [good31]
 +good31
SCC(1): [main]
 +main
SCC(1): [printIntLine]
 +printIntLine
<begin of summary store (POINTER_AP)>
Functions [good31, main, printIntLine, printLine, bad31, globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse]
Loops     []
----
function: bad31
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good31
P+ = [] 
P- = [H(good31::call)] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [H(good31::call)] 
Point-To:

Ret-Value: R
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.01s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N3321): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Memory Leak
At node  : N3264
On edge  : N3264 -{Return edge from bad31 to main}-> N3324
Message  : the heap object @H(bad31::call) is not referenced any more
> Start from entry function: main, At N3321 of Function main
> Entering function: good31, On N3350 -> N3299 (call good31)
> takes the true branch, At N3307 of Function good31
> Leaving function: good31, On N3298 -> N3323 (Return edge from good31 to main)
> Entering function: bad31, On N3323 -> N3265 (call bad31)
> takes the false branch, At N3273 of Function bad31
> Entering function: printLine, On N3278 -> N3336 (call printLine)
> takes the true branch, At N3342 of Function printLine
> Leaving function: printLine, On N3335 -> N3280 (Return edge from printLine to bad31)
<Defect> : N3264 -> N3324: [Return edge from bad31 to main]
N3264 -> N3324: [Return edge from bad31 to main] <--
-- end of trace --
=====================================================
CWE_401(Memory Leak): 1
	[./401_31.c 123] bad31 		[N3264 -{Return edge from bad31 to main}-> N3324]	(the heap object @H(bad31::call) is not referenced any more)

Found 1 defects in all (2 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/401/401_32.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printLine]
 +printLine
SCC(1): [bad32]
 +bad32
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [good32]
 +good32
SCC(1): [main]
 +main
SCC(1): [printIntLine]
 +printIntLine
<begin of summary store (POINTER_AP)>
Functions [printLine, bad32, globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good32, main, printIntLine]
Loops     []
----
function: bad32
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good32
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.004s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N3415): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Memory Leak
At node  : N3359
On edge  : N3359 -{Return edge from bad32 to main}-> N3418
Message  : the heap object @H(bad32::call) is not referenced any more
> Start from entry function: main, At N3415 of Function main
> Entering function: good32, On N3444 -> N3395 (call good32)
> takes the false branch, At N3403 of Function good32
> Entering function: printLine, On N3408 -> N3430 (call printLine)
> takes the true branch, At N3436 of Function printLine
> Leaving function: printLine, On N3429 -> N3410 (Return edge from printLine to good32)
> Leaving function: good32, On N3394 -> N3417 (Return edge from good32 to main)
> Entering function: bad32, On N3417 -> N3360 (call bad32)
> takes the false branch, At N3369 of Function bad32
> Entering function: printLine, On N3374 -> N3430 (call printLine)
> takes the true branch, At N3436 of Function printLine
> Leaving function: printLine, On N3429 -> N3376 (Return edge from printLine to bad32)
<Defect> : N3359 -> N3418: [Return edge from bad32 to main]
N3359 -> N3418: [Return edge from bad32 to main] <--
-- end of trace --
-- start of trace --
Weakness : Use of Uninitialized Variable
At node  : N3400
On edge  : N3400 -{store i8* %0, i8** %data, align 8}-> N3401
Message  : use of uninitialized variable
> Start from entry function: main, At N3415 of Function main
> Entering function: good32, On N3444 -> N3395 (call good32)
<Defect> : N3400 -> N3401: [store i8* %0, i8** %data, align 8]
N3400 -> N3401: [store i8* %0, i8** %data, align 8] <--
-- end of trace --
-- start of trace --
Weakness : Use of Uninitialized Variable
At node  : N3432
On edge  : N3432 -{store i8* %line, i8** %line.addr, align 8}-> N3434
Message  : use of uninitialized variable
> Start from entry function: main, At N3415 of Function main
> Entering function: good32, On N3444 -> N3395 (call good32)
> takes the false branch, At N3403 of Function good32
> Entering function: printLine, On N3408 -> N3430 (call printLine)
<Defect> : N3432 -> N3434: [store i8* %line, i8** %line.addr, align 8]
N3432 -> N3434: [store i8* %line, i8** %line.addr, align 8] <--
-- end of trace --
=====================================================
CWE_401(Memory Leak): 1
	[./401_32.c 88] bad32 		[N3359 -{Return edge from bad32 to main}-> N3418]	(the heap object @H(bad32::call) is not referenced any more)

CWE_457(Use of Uninitialized Variable): 2
	[./401_32.c 75] good32 		[N3400 -{store i8* %0, i8** %data, align 8}-> N3401]	(use of uninitialized variable)
	[* 0] printLine 		[N3432 -{store i8* %line, i8** %line.addr, align 8}-> N3434]	(use of uninitialized variable)

Found 3 defects in all (2 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/401/401_33.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printLine]
 +printLine
SCC(1): [bad33]
 +bad33
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [good33]
 +good33
SCC(1): [main]
 +main
SCC(1): [printIntLine]
 +printIntLine
<begin of summary store (POINTER_AP)>
Functions [bad33, globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good33, main, printIntLine, printLine]
Loops     []
----
function: bad33
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good33
P+ = [] 
P- = [H(good33::call)] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [H(good33::call)] 
Point-To:

Ret-Value: R
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.01s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N3512): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Memory Leak
At node  : N3453
On edge  : N3453 -{Return edge from bad33 to main}-> N3515
Message  : the heap object @H(bad33::call) is not referenced any more
> Start from entry function: main, At N3512 of Function main
> Entering function: good33, On N3541 -> N3489 (call good33)
> takes the true branch, At N3498 of Function good33
> Leaving function: good33, On N3488 -> N3514 (Return edge from good33 to main)
> Entering function: bad33, On N3514 -> N3454 (call bad33)
> takes the false branch, At N3463 of Function bad33
> Entering function: printLine, On N3468 -> N3527 (call printLine)
> takes the true branch, At N3533 of Function printLine
> Leaving function: printLine, On N3526 -> N3470 (Return edge from printLine to bad33)
<Defect> : N3453 -> N3515: [Return edge from bad33 to main]
N3453 -> N3515: [Return edge from bad33 to main] <--
-- end of trace --
=====================================================
CWE_401(Memory Leak): 1
	[./401_33.c 105] bad33 		[N3453 -{Return edge from bad33 to main}-> N3515]	(the heap object @H(bad33::call) is not referenced any more)

Found 1 defects in all (2 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/401/401_34.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printLine]
 +printLine
SCC(1): [bad34]
 +bad34
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [good34]
 +good34
SCC(1): [main]
 +main
SCC(1): [printIntLine]
 +printIntLine
<begin of summary store (POINTER_AP)>
Functions [globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good34, main, printIntLine, printLine, bad34]
Loops     []
----
function: bad34
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good34
P+ = [] 
P- = [H(good34::call)] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [H(good34::call)] 
Point-To:

Ret-Value: R
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.003s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N3609): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Memory Leak
At node  : N3550
On edge  : N3550 -{Return edge from bad34 to main}-> N3612
Message  : the heap object @H(bad34::call) is not referenced any more
> Start from entry function: main, At N3609 of Function main
> Entering function: good34, On N3638 -> N3586 (call good34)
> takes the true branch, At N3595 of Function good34
> Leaving function: good34, On N3585 -> N3611 (Return edge from good34 to main)
> Entering function: bad34, On N3611 -> N3551 (call bad34)
> takes the false branch, At N3560 of Function bad34
> Entering function: printLine, On N3565 -> N3624 (call printLine)
> takes the true branch, At N3630 of Function printLine
> Leaving function: printLine, On N3623 -> N3567 (Return edge from printLine to bad34)
<Defect> : N3550 -> N3612: [Return edge from bad34 to main]
N3550 -> N3612: [Return edge from bad34 to main] <--
-- end of trace --
=====================================================
CWE_401(Memory Leak): 1
	[./401_34.c 104] bad34 		[N3550 -{Return edge from bad34 to main}-> N3612]	(the heap object @H(bad34::call) is not referenced any more)

Found 1 defects in all (2 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/401/401_35.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printLine]
 +printLine
SCC(1): [bad35]
 +bad35
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [good35]
 +good35
SCC(1): [main]
 +main
SCC(1): [printIntLine]
 +printIntLine
<begin of summary store (POINTER_AP)>
Functions [good35, main, printIntLine, printLine, bad35, globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse]
Loops     []
----
function: bad35
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good35
P+ = [] 
P- = [H(good35::call)] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [H(good35::call)] 
Point-To:

Ret-Value: R
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.004s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N3706): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Memory Leak
At node  : N3647
On edge  : N3647 -{Return edge from bad35 to main}-> N3709
Message  : the heap object @H(bad35::call) is not referenced any more
> Start from entry function: main, At N3706 of Function main
> Entering function: good35, On N3735 -> N3683 (call good35)
> takes the true branch, At N3692 of Function good35
> Leaving function: good35, On N3682 -> N3708 (Return edge from good35 to main)
> Entering function: bad35, On N3708 -> N3648 (call bad35)
> takes the false branch, At N3657 of Function bad35
> Entering function: printLine, On N3662 -> N3721 (call printLine)
> takes the true branch, At N3727 of Function printLine
> Leaving function: printLine, On N3720 -> N3664 (Return edge from printLine to bad35)
<Defect> : N3647 -> N3709: [Return edge from bad35 to main]
N3647 -> N3709: [Return edge from bad35 to main] <--
-- end of trace --
=====================================================
CWE_401(Memory Leak): 1
	[./401_35.c 108] bad35 		[N3647 -{Return edge from bad35 to main}-> N3709]	(the heap object @H(bad35::call) is not referenced any more)

Found 1 defects in all (2 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/401/401_36.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printLine]
 +printLine
SCC(1): [bad36]
 +bad36
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [good36]
 +good36
SCC(1): [main]
 +main
SCC(1): [printIntLine]
 +printIntLine
<begin of summary store (POINTER_AP)>
Functions [main, printIntLine, printLine, bad36, globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good36]
Loops     []
----
function: bad36
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good36
P+ = [] 
P- = [N, H(good36::call)] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [N, H(good36::call)] 
Point-To:

Ret-Value: R
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.004s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N3827): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Memory Leak
At node  : N3744
On edge  : N3744 -{Return edge from bad36 to main}-> N3830
Message  : the heap object @H(bad36::call) is not referenced any more
> Start from entry function: main, At N3827 of Function main
> Entering function: good36, On N3856 -> N3791 (call good36)
> takes the true branch, At N3797 of Function good36
> takes the true branch, At N3803 of Function good36
> Leaving function: good36, On N3790 -> N3829 (Return edge from good36 to main)
> Entering function: bad36, On N3829 -> N3745 (call bad36)
> takes the true branch, At N3751 of Function bad36
> takes the false branch, At N3757 of Function bad36
> Entering function: printLine, On N3762 -> N3842 (call printLine)
> takes the true branch, At N3848 of Function printLine
> Leaving function: printLine, On N3841 -> N3764 (Return edge from printLine to bad36)
> takes the true branch, At N3766 of Function bad36
<Defect> : N3744 -> N3830: [Return edge from bad36 to main]
N3744 -> N3830: [Return edge from bad36 to main] <--
-- end of trace --
=====================================================
CWE_401(Memory Leak): 1
	[./401_36.c 109] bad36 		[N3744 -{Return edge from bad36 to main}-> N3830]	(the heap object @H(bad36::call) is not referenced any more)

Found 1 defects in all (2 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/401/401_37.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printLine]
 +printLine
SCC(1): [bad37]
 +bad37
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [good37]
 +good37
SCC(1): [main]
 +main
SCC(1): [printIntLine]
 +printIntLine
<begin of summary store (POINTER_AP)>
Functions [printLine, bad37, globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good37, main, printIntLine]
Loops     []
----
function: bad37
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good37
P+ = [] 
P- = [H(good37::call)] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [H(good37::call)] 
Point-To:

Ret-Value: R
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.01s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N3927): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Memory Leak
At node  : N3868
On edge  : N3868 -{Return edge from bad37 to main}-> N3930
Message  : the heap object @H(bad37::call) is not referenced any more
> Start from entry function: main, At N3927 of Function main
> Entering function: good37, On N3956 -> N3904 (call good37)
> takes the true branch, At N3913 of Function good37
> Leaving function: good37, On N3903 -> N3929 (Return edge from good37 to main)
> Entering function: bad37, On N3929 -> N3869 (call bad37)
> takes the false branch, At N3878 of Function bad37
> Entering function: printLine, On N3883 -> N3942 (call printLine)
> takes the true branch, At N3948 of Function printLine
> Leaving function: printLine, On N3941 -> N3885 (Return edge from printLine to bad37)
<Defect> : N3868 -> N3930: [Return edge from bad37 to main]
N3868 -> N3930: [Return edge from bad37 to main] <--
-- end of trace --
=====================================================
CWE_401(Memory Leak): 1
	[./401_37.c 107] bad37 		[N3868 -{Return edge from bad37 to main}-> N3930]	(the heap object @H(bad37::call) is not referenced any more)

Found 1 defects in all (2 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/401/401_38.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printLine]
 +printLine
SCC(1): [bad38]
 +bad38
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [good38]
 +good38
SCC(1): [main]
 +main
SCC(1): [printIntLine]
 +printIntLine
<begin of summary store (POINTER_AP)>
Functions [bad38, globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good38, main, printIntLine, printLine]
Loops     []
----
function: bad38
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good38
P+ = [] 
P- = [N, H(good38::call)] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [N, H(good38::call)] 
Point-To:

Ret-Value: R
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.006s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N4048): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Memory Leak
At node  : N3965
On edge  : N3965 -{Return edge from bad38 to main}-> N4051
Message  : the heap object @H(bad38::call) is not referenced any more
> Start from entry function: main, At N4048 of Function main
> Entering function: good38, On N4077 -> N4012 (call good38)
> takes the true branch, At N4018 of Function good38
> takes the true branch, At N4024 of Function good38
> Leaving function: good38, On N4011 -> N4050 (Return edge from good38 to main)
> Entering function: bad38, On N4050 -> N3966 (call bad38)
> takes the true branch, At N3972 of Function bad38
> takes the false branch, At N3978 of Function bad38
> Entering function: printLine, On N3983 -> N4063 (call printLine)
> takes the true branch, At N4069 of Function printLine
> Leaving function: printLine, On N4062 -> N3985 (Return edge from printLine to bad38)
> takes the true branch, At N3987 of Function bad38
<Defect> : N3965 -> N4051: [Return edge from bad38 to main]
N3965 -> N4051: [Return edge from bad38 to main] <--
-- end of trace --
=====================================================
CWE_401(Memory Leak): 1
	[./401_38.c 108] bad38 		[N3965 -{Return edge from bad38 to main}-> N4051]	(the heap object @H(bad38::call) is not referenced any more)

Found 1 defects in all (2 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/401/401_39.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
10 SCCs to deal with
SCC(1): [printLine]
 +printLine
SCC(1): [staticReturnsTrue]
 +staticReturnsTrue
SCC(1): [bad39]
 +bad39
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [staticReturnsFalse]
 +staticReturnsFalse
SCC(1): [good39]
 +good39
SCC(1): [main]
 +main
SCC(1): [printIntLine]
 +printIntLine
<begin of summary store (POINTER_AP)>
Functions [staticReturnsFalse, staticReturnsTrue, bad39, globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good39, main, printIntLine, printLine]
Loops     []
----
function: bad39
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good39
P+ = [] 
P- = [N, H(good39::call1)] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [N, H(good39::call1)] 
Point-To:

Ret-Value: R
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: staticReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: staticReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.017s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N4171): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Memory Leak
At node  : N4088
On edge  : N4088 -{Return edge from bad39 to main}-> N4174
Message  : the heap object @H(bad39::call1) is not referenced any more
> Start from entry function: main, At N4171 of Function main
> Entering function: good39, On N4208 -> N4135 (call good39)
> Entering function: staticReturnsTrue, On N4139 -> N4205 (call staticReturnsTrue)
> Leaving function: staticReturnsTrue, On N4204 -> N4140 (Return edge from staticReturnsTrue to good39)
> takes the true branch, At N4141 of Function good39
> takes the true branch, At N4147 of Function good39
> Leaving function: good39, On N4134 -> N4173 (Return edge from good39 to main)
> Entering function: bad39, On N4173 -> N4089 (call bad39)
> Entering function: staticReturnsTrue, On N4093 -> N4205 (call staticReturnsTrue)
> Leaving function: staticReturnsTrue, On N4204 -> N4094 (Return edge from staticReturnsTrue to bad39)
> takes the true branch, At N4095 of Function bad39
> takes the false branch, At N4101 of Function bad39
> Entering function: printLine, On N4106 -> N4186 (call printLine)
> takes the true branch, At N4192 of Function printLine
> Leaving function: printLine, On N4185 -> N4108 (Return edge from printLine to bad39)
> Entering function: staticReturnsTrue, On N4108 -> N4205 (call staticReturnsTrue)
> Leaving function: staticReturnsTrue, On N4204 -> N4109 (Return edge from staticReturnsTrue to bad39)
> takes the true branch, At N4110 of Function bad39
<Defect> : N4088 -> N4174: [Return edge from bad39 to main]
N4088 -> N4174: [Return edge from bad39 to main] <--
-- end of trace --
=====================================================
CWE_401(Memory Leak): 1
	[./401_39.c 115] bad39 		[N4088 -{Return edge from bad39 to main}-> N4174]	(the heap object @H(bad39::call1) is not referenced any more)

Found 1 defects in all (2 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/401/401_40.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printLine]
 +printLine
SCC(1): [bad40]
 +bad40
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [good40]
 +good40
SCC(1): [main]
 +main
SCC(1): [printIntLine]
 +printIntLine
<begin of summary store (POINTER_AP)>
Functions [bad40, globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good40, main, printIntLine, printLine]
Loops     []
----
function: bad40
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good40
P+ = [] 
P- = [H(good40::call)] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [H(good40::call)] 
Point-To:

Ret-Value: R
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.005s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N4277): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Memory Leak
At node  : N4218
On edge  : N4218 -{Return edge from bad40 to main}-> N4280
Message  : the heap object @H(bad40::call) is not referenced any more
> Start from entry function: main, At N4277 of Function main
> Entering function: good40, On N4306 -> N4254 (call good40)
> takes the true branch, At N4263 of Function good40
> Leaving function: good40, On N4253 -> N4279 (Return edge from good40 to main)
> Entering function: bad40, On N4279 -> N4219 (call bad40)
> takes the false branch, At N4228 of Function bad40
> Entering function: printLine, On N4233 -> N4292 (call printLine)
> takes the true branch, At N4298 of Function printLine
> Leaving function: printLine, On N4291 -> N4235 (Return edge from printLine to bad40)
<Defect> : N4218 -> N4280: [Return edge from bad40 to main]
N4218 -> N4280: [Return edge from bad40 to main] <--
-- end of trace --
=====================================================
CWE_401(Memory Leak): 1
	[./401_40.c 106] bad40 		[N4218 -{Return edge from bad40 to main}-> N4280]	(the heap object @H(bad40::call) is not referenced any more)

Found 1 defects in all (2 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/401/401_41.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printLine]
 +printLine
SCC(1): [bad41]
 +bad41
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [good41]
 +good41
SCC(1): [main]
 +main
SCC(1): [printIntLine]
 +printIntLine
<begin of summary store (POINTER_AP)>
Functions [globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good41, main, printIntLine, printLine, bad41]
Loops     []
----
function: bad41
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good41
P+ = [] 
P- = [N, H(good41::call)] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [N, H(good41::call)] 
Point-To:

Ret-Value: R
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.005s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N4398): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Memory Leak
At node  : N4315
On edge  : N4315 -{Return edge from bad41 to main}-> N4401
Message  : the heap object @H(bad41::call) is not referenced any more
> Start from entry function: main, At N4398 of Function main
> Entering function: good41, On N4427 -> N4362 (call good41)
> takes the true branch, At N4368 of Function good41
> takes the true branch, At N4374 of Function good41
> Leaving function: good41, On N4361 -> N4400 (Return edge from good41 to main)
> Entering function: bad41, On N4400 -> N4316 (call bad41)
> takes the true branch, At N4322 of Function bad41
> takes the false branch, At N4328 of Function bad41
> Entering function: printLine, On N4333 -> N4413 (call printLine)
> takes the true branch, At N4419 of Function printLine
> Leaving function: printLine, On N4412 -> N4335 (Return edge from printLine to bad41)
> takes the true branch, At N4337 of Function bad41
<Defect> : N4315 -> N4401: [Return edge from bad41 to main]
N4315 -> N4401: [Return edge from bad41 to main] <--
-- end of trace --
=====================================================
CWE_401(Memory Leak): 1
	[./401_41.c 104] bad41 		[N4315 -{Return edge from bad41 to main}-> N4401]	(the heap object @H(bad41::call) is not referenced any more)

Found 1 defects in all (2 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/401/401_42.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [printLine]
 +printLine
SCC(1): [bad42]
 +bad42
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [good42]
 +good42
SCC(1): [main]
 +main
SCC(1): [printIntLine]
 +printIntLine
<begin of summary store (POINTER_AP)>
Functions [globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good42, main, printIntLine, printLine, bad42]
Loops     []
----
function: bad42
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good42
P+ = [] 
P- = [N, H(good42::call1)] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [N, H(good42::call1)] 
Point-To:

Ret-Value: R
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.004s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N4520): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Memory Leak
At node  : N4437
On edge  : N4437 -{Return edge from bad42 to main}-> N4523
Message  : the heap object @H(bad42::call1) is not referenced any more
> Start from entry function: main, At N4520 of Function main
> Entering function: good42, On N4549 -> N4484 (call good42)
> Entering function: globalReturnsTrue, On N4488 -> N4474 (call globalReturnsTrue)
> Leaving function: globalReturnsTrue, On N4473 -> N4489 (Return edge from globalReturnsTrue to good42)
> takes the true branch, At N4490 of Function good42
> takes the true branch, At N4496 of Function good42
> Leaving function: good42, On N4483 -> N4522 (Return edge from good42 to main)
> Entering function: bad42, On N4522 -> N4438 (call bad42)
> Entering function: globalReturnsTrue, On N4442 -> N4474 (call globalReturnsTrue)
> Leaving function: globalReturnsTrue, On N4473 -> N4443 (Return edge from globalReturnsTrue to bad42)
> takes the true branch, At N4444 of Function bad42
> takes the false branch, At N4450 of Function bad42
> Entering function: printLine, On N4455 -> N4535 (call printLine)
> takes the true branch, At N4541 of Function printLine
> Leaving function: printLine, On N4534 -> N4457 (Return edge from printLine to bad42)
> Entering function: globalReturnsTrue, On N4457 -> N4474 (call globalReturnsTrue)
> Leaving function: globalReturnsTrue, On N4473 -> N4458 (Return edge from globalReturnsTrue to bad42)
> takes the true branch, At N4459 of Function bad42
<Defect> : N4437 -> N4523: [Return edge from bad42 to main]
N4437 -> N4523: [Return edge from bad42 to main] <--
-- end of trace --
=====================================================
CWE_401(Memory Leak): 1
	[./401_42.c 105] bad42 		[N4437 -{Return edge from bad42 to main}-> N4523]	(the heap object @H(bad42::call1) is not referenced any more)

Found 1 defects in all (2 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/401/401_43.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [bad43]
 +bad43
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [good43]
 +good43
SCC(1): [main]
 +main
SCC(1): [printLine]
 +printLine
<begin of summary store (POINTER_AP)>
Functions [globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good43, main, printIntLine, printLine, bad43]
Loops     []
----
function: bad43
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good43
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.006s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N4622): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Memory Leak
At node  : N4559
On edge  : N4559 -{Return edge from bad43 to main}-> N4625
Message  : the heap object @H(bad43::call) is not referenced any more
> Start from entry function: main, At N4622 of Function main
> Entering function: good43, On N4651 -> N4598 (call good43)
> takes the false branch, At N4607 of Function good43
> Entering function: printIntLine, On N4615 -> N4628 (call printIntLine)
> Leaving function: printIntLine, On N4627 -> N4617 (Return edge from printIntLine to good43)
> Leaving function: good43, On N4597 -> N4624 (Return edge from good43 to main)
> Entering function: bad43, On N4624 -> N4560 (call bad43)
> takes the false branch, At N4569 of Function bad43
> Entering function: printIntLine, On N4577 -> N4628 (call printIntLine)
> Leaving function: printIntLine, On N4627 -> N4579 (Return edge from printIntLine to bad43)
<Defect> : N4559 -> N4625: [Return edge from bad43 to main]
N4559 -> N4625: [Return edge from bad43 to main] <--
-- end of trace --
-- start of trace --
Weakness : Use of Uninitialized Variable
At node  : N4604
On edge  : N4604 -{store i32* %1, i32** %data, align 8}-> N4605
Message  : use of uninitialized variable
> Start from entry function: main, At N4622 of Function main
> Entering function: good43, On N4651 -> N4598 (call good43)
<Defect> : N4604 -> N4605: [store i32* %1, i32** %data, align 8]
N4604 -> N4605: [store i32* %1, i32** %data, align 8] <--
-- end of trace --
=====================================================
CWE_401(Memory Leak): 1
	[./401_43.c 87] bad43 		[N4559 -{Return edge from bad43 to main}-> N4625]	(the heap object @H(bad43::call) is not referenced any more)

CWE_457(Use of Uninitialized Variable): 1
	[./401_43.c 74] good43 		[N4604 -{store i32* %1, i32** %data, align 8}-> N4605]	(use of uninitialized variable)

Found 2 defects in all (2 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/401/401_44.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [bad44]
 +bad44
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [good44]
 +good44
SCC(1): [main]
 +main
SCC(1): [printLine]
 +printLine
<begin of summary store (POINTER_AP)>
Functions [main, printIntLine, printLine, bad44, globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good44]
Loops     []
----
function: bad44
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good44
P+ = [] 
P- = [H(good44::call)] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [H(good44::call)] 
Point-To:

Ret-Value: R
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.008s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N4725): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Memory Leak
At node  : N4659
On edge  : N4659 -{Return edge from bad44 to main}-> N4728
Message  : the heap object @H(bad44::call) is not referenced any more
> Start from entry function: main, At N4725 of Function main
> Entering function: good44, On N4754 -> N4698 (call good44)
> takes the true branch, At N4707 of Function good44
> Leaving function: good44, On N4697 -> N4727 (Return edge from good44 to main)
> Entering function: bad44, On N4727 -> N4660 (call bad44)
> takes the false branch, At N4669 of Function bad44
> Entering function: printIntLine, On N4677 -> N4731 (call printIntLine)
> Leaving function: printIntLine, On N4730 -> N4679 (Return edge from printIntLine to bad44)
<Defect> : N4659 -> N4728: [Return edge from bad44 to main]
N4659 -> N4728: [Return edge from bad44 to main] <--
-- end of trace --
=====================================================
CWE_401(Memory Leak): 1
	[./401_44.c 105] bad44 		[N4659 -{Return edge from bad44 to main}-> N4728]	(the heap object @H(bad44::call) is not referenced any more)

Found 1 defects in all (2 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/401/401_45.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [bad45]
 +bad45
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [good45]
 +good45
SCC(1): [main]
 +main
SCC(1): [printLine]
 +printLine
<begin of summary store (POINTER_AP)>
Functions [printIntLine, printLine, bad45, globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good45, main]
Loops     []
----
function: bad45
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good45
P+ = [] 
P- = [H(good45::call)] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [H(good45::call)] 
Point-To:

Ret-Value: R
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.005s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N4828): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Memory Leak
At node  : N4762
On edge  : N4762 -{Return edge from bad45 to main}-> N4831
Message  : the heap object @H(bad45::call) is not referenced any more
> Start from entry function: main, At N4828 of Function main
> Entering function: good45, On N4857 -> N4801 (call good45)
> takes the true branch, At N4810 of Function good45
> Leaving function: good45, On N4800 -> N4830 (Return edge from good45 to main)
> Entering function: bad45, On N4830 -> N4763 (call bad45)
> takes the false branch, At N4772 of Function bad45
> Entering function: printIntLine, On N4780 -> N4834 (call printIntLine)
> Leaving function: printIntLine, On N4833 -> N4782 (Return edge from printIntLine to bad45)
<Defect> : N4762 -> N4831: [Return edge from bad45 to main]
N4762 -> N4831: [Return edge from bad45 to main] <--
-- end of trace --
=====================================================
CWE_401(Memory Leak): 1
	[./401_45.c 105] bad45 		[N4762 -{Return edge from bad45 to main}-> N4831]	(the heap object @H(bad45::call) is not referenced any more)

Found 1 defects in all (2 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/401/401_46.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [bad46]
 +bad46
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [good46]
 +good46
SCC(1): [main]
 +main
SCC(1): [printLine]
 +printLine
<begin of summary store (POINTER_AP)>
Functions [bad46, globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good46, main, printIntLine, printLine]
Loops     []
----
function: bad46
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good46
P+ = [] 
P- = [H(good46::call)] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [H(good46::call)] 
Point-To:

Ret-Value: R
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.003s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N4931): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Memory Leak
At node  : N4865
On edge  : N4865 -{Return edge from bad46 to main}-> N4934
Message  : the heap object @H(bad46::call) is not referenced any more
> Start from entry function: main, At N4931 of Function main
> Entering function: good46, On N4960 -> N4904 (call good46)
> takes the true branch, At N4913 of Function good46
> Leaving function: good46, On N4903 -> N4933 (Return edge from good46 to main)
> Entering function: bad46, On N4933 -> N4866 (call bad46)
> takes the false branch, At N4875 of Function bad46
> Entering function: printIntLine, On N4883 -> N4937 (call printIntLine)
> Leaving function: printIntLine, On N4936 -> N4885 (Return edge from printIntLine to bad46)
<Defect> : N4865 -> N4934: [Return edge from bad46 to main]
N4865 -> N4934: [Return edge from bad46 to main] <--
-- end of trace --
=====================================================
CWE_401(Memory Leak): 1
	[./401_46.c 108] bad46 		[N4865 -{Return edge from bad46 to main}-> N4934]	(the heap object @H(bad46::call) is not referenced any more)

Found 1 defects in all (2 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/401/401_47.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [bad47]
 +bad47
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [printLine]
 +printLine
SCC(1): [good47]
 +good47
SCC(1): [main]
 +main
<begin of summary store (POINTER_AP)>
Functions [bad47, globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good47, main, printIntLine, printLine]
Loops     []
----
function: bad47
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good47
P+ = [] 
P- = [N, H(good47::call)] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [N, H(good47::call)] 
Point-To:

Ret-Value: R
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.004s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N5058): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Memory Leak
At node  : N4968
On edge  : N4968 -{Return edge from bad47 to main}-> N5060
Message  : the heap object @H(bad47::call) is not referenced any more
> Start from entry function: main, At N5058 of Function main
> Entering function: bad47, On N5087 -> N4969 (call bad47)
> takes the true branch, At N4975 of Function bad47
> takes the false branch, At N4981 of Function bad47
> Entering function: printIntLine, On N4989 -> N5064 (call printIntLine)
> Leaving function: printIntLine, On N5063 -> N4991 (Return edge from printIntLine to bad47)
> takes the true branch, At N4993 of Function bad47
<Defect> : N4968 -> N5060: [Return edge from bad47 to main]
N4968 -> N5060: [Return edge from bad47 to main] <--
-- end of trace --
=====================================================
CWE_401(Memory Leak): 1
	[./401_47.c 107] bad47 		[N4968 -{Return edge from bad47 to main}-> N5060]	(the heap object @H(bad47::call) is not referenced any more)

Found 1 defects in all (5 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/401/401_48.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [bad48]
 +bad48
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [good48]
 +good48
SCC(1): [main]
 +main
SCC(1): [printLine]
 +printLine
<begin of summary store (POINTER_AP)>
Functions [bad48, globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good48, main, printIntLine, printLine]
Loops     []
----
function: bad48
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good48
P+ = [] 
P- = [H(good48::call)] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [H(good48::call)] 
Point-To:

Ret-Value: R
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.011s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N5164): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Memory Leak
At node  : N5098
On edge  : N5098 -{Return edge from bad48 to main}-> N5167
Message  : the heap object @H(bad48::call) is not referenced any more
> Start from entry function: main, At N5164 of Function main
> Entering function: good48, On N5193 -> N5137 (call good48)
> takes the true branch, At N5146 of Function good48
> Leaving function: good48, On N5136 -> N5166 (Return edge from good48 to main)
> Entering function: bad48, On N5166 -> N5099 (call bad48)
> takes the false branch, At N5108 of Function bad48
> Entering function: printIntLine, On N5116 -> N5170 (call printIntLine)
> Leaving function: printIntLine, On N5169 -> N5118 (Return edge from printIntLine to bad48)
<Defect> : N5098 -> N5167: [Return edge from bad48 to main]
N5098 -> N5167: [Return edge from bad48 to main] <--
-- end of trace --
=====================================================
CWE_401(Memory Leak): 1
	[./401_48.c 106] bad48 		[N5098 -{Return edge from bad48 to main}-> N5167]	(the heap object @H(bad48::call) is not referenced any more)

Found 1 defects in all (2 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/401/401_49.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [bad49]
 +bad49
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [printLine]
 +printLine
SCC(1): [good49]
 +good49
SCC(1): [main]
 +main
<begin of summary store (POINTER_AP)>
Functions [globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good49, main, printIntLine, printLine, bad49]
Loops     []
----
function: bad49
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good49
P+ = [] 
P- = [N, H(good49::call)] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [N, H(good49::call)] 
Point-To:

Ret-Value: R
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.007s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N5291): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Memory Leak
At node  : N5201
On edge  : N5201 -{Return edge from bad49 to main}-> N5294
Message  : the heap object @H(bad49::call) is not referenced any more
> Start from entry function: main, At N5291 of Function main
> Entering function: good49, On N5320 -> N5251 (call good49)
> takes the true branch, At N5257 of Function good49
> takes the true branch, At N5263 of Function good49
> Leaving function: good49, On N5250 -> N5293 (Return edge from good49 to main)
> Entering function: bad49, On N5293 -> N5202 (call bad49)
> takes the true branch, At N5208 of Function bad49
> takes the false branch, At N5214 of Function bad49
> Entering function: printIntLine, On N5222 -> N5297 (call printIntLine)
> Leaving function: printIntLine, On N5296 -> N5224 (Return edge from printIntLine to bad49)
> takes the true branch, At N5226 of Function bad49
<Defect> : N5201 -> N5294: [Return edge from bad49 to main]
N5201 -> N5294: [Return edge from bad49 to main] <--
-- end of trace --
=====================================================
CWE_401(Memory Leak): 1
	[./401_49.c 107] bad49 		[N5201 -{Return edge from bad49 to main}-> N5294]	(the heap object @H(bad49::call) is not referenced any more)

Found 1 defects in all (2 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/401/401_50.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
10 SCCs to deal with
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [staticReturnsTrue]
 +staticReturnsTrue
SCC(1): [bad50]
 +bad50
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [printLine]
 +printLine
SCC(1): [staticReturnsFalse]
 +staticReturnsFalse
SCC(1): [good50]
 +good50
SCC(1): [main]
 +main
<begin of summary store (POINTER_AP)>
Functions [globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good50, main, printIntLine, printLine, staticReturnsFalse, staticReturnsTrue, bad50]
Loops     []
----
function: bad50
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good50
P+ = [] 
P- = [N, H(good50::call1)] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [N, H(good50::call1)] 
Point-To:

Ret-Value: R
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: staticReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: staticReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.004s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N5420): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Memory Leak
At node  : N5330
On edge  : N5330 -{Return edge from bad50 to main}-> N5423
Message  : the heap object @H(bad50::call1) is not referenced any more
> Start from entry function: main, At N5420 of Function main
> Entering function: good50, On N5457 -> N5380 (call good50)
> Entering function: staticReturnsTrue, On N5384 -> N5454 (call staticReturnsTrue)
> Leaving function: staticReturnsTrue, On N5453 -> N5385 (Return edge from staticReturnsTrue to good50)
> takes the true branch, At N5386 of Function good50
> takes the true branch, At N5392 of Function good50
> Leaving function: good50, On N5379 -> N5422 (Return edge from good50 to main)
> Entering function: bad50, On N5422 -> N5331 (call bad50)
> Entering function: staticReturnsTrue, On N5335 -> N5454 (call staticReturnsTrue)
> Leaving function: staticReturnsTrue, On N5453 -> N5336 (Return edge from staticReturnsTrue to bad50)
> takes the true branch, At N5337 of Function bad50
> takes the false branch, At N5343 of Function bad50
> Entering function: printIntLine, On N5351 -> N5426 (call printIntLine)
> Leaving function: printIntLine, On N5425 -> N5353 (Return edge from printIntLine to bad50)
> Entering function: staticReturnsTrue, On N5353 -> N5454 (call staticReturnsTrue)
> Leaving function: staticReturnsTrue, On N5453 -> N5354 (Return edge from staticReturnsTrue to bad50)
> takes the true branch, At N5355 of Function bad50
<Defect> : N5330 -> N5423: [Return edge from bad50 to main]
N5330 -> N5423: [Return edge from bad50 to main] <--
-- end of trace --
=====================================================
CWE_401(Memory Leak): 1
	[./401_50.c 115] bad50 		[N5330 -{Return edge from bad50 to main}-> N5423]	(the heap object @H(bad50::call1) is not referenced any more)

Found 1 defects in all (2 duplicates ignored).
=====================================================
Phase status: SUCCESS


Process finished with exit code 0
