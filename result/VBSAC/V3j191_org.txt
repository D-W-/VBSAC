/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/java -ea -Didea.test.cyclic.buffer.size=1048576 -javaagent:/home/guzuxing/Downloads/idea-IU-171.4424.56/lib/idea_rt.jar=42327:/home/guzuxing/Downloads/idea-IU-171.4424.56/bin -Dfile.encoding=UTF-8 -classpath /home/guzuxing/Downloads/idea-IU-171.4424.56/lib/idea_rt.jar:/home/guzuxing/Downloads/idea-IU-171.4424.56/plugins/junit/lib/junit-rt.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/cldrdata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/dnsns.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/icedtea-sound.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/jaccess.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/localedata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/nashorn.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunec.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunjce_provider.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunpkcs11.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/zipfs.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/management-agent.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/rt.jar:/home/guzuxing/Documents/tsmart-v3/engine/out/test/classes:/home/guzuxing/Documents/tsmart-v3/engine/build/resources/test:/home/guzuxing/Documents/tsmart-v3/engine/out/production/classes:/home/guzuxing/Documents/tsmart-v3/engine/libs/runtime/llvm-macosx-x86_64.jar:/home/guzuxing/Documents/tsmart-v3/engine/libs/runtime/guava.jar:/home/guzuxing/Documents/tsmart-v3/engine/libs/runtime/java-cup-runtime.jar:/home/guzuxing/Documents/tsmart-v3/engine/libs/runtime/llvm-linux-x86_64.jar:/home/guzuxing/Documents/tsmart-v3/engine/libs/runtime/org.osgi.core.jar:/home/guzuxing/Documents/tsmart-v3/engine/libs/runtime/com.microsoft.z3.jar:/home/guzuxing/Documents/tsmart-v3/engine/libs/runtime/jopt-simple.jar:/home/guzuxing/Documents/tsmart-v3/engine/libs/runtime/javasmt.jar:/home/guzuxing/Documents/tsmart-v3/engine/libs/runtime/javacpp.jar:/home/guzuxing/Documents/tsmart-v3/engine/libs/runtime/scala-library.jar:/home/guzuxing/Documents/tsmart-v3/engine/libs/runtime/princess-assertionless.jar:/home/guzuxing/Documents/tsmart-v3/engine/libs/runtime/org.osgi.compendium.jar:/home/guzuxing/Documents/tsmart-v3/engine/libs/runtime/smtinterpol.jar:/home/guzuxing/Documents/tsmart-v3/engine/libs/runtime/llvm-linux-x86.jar:/home/guzuxing/Documents/tsmart-v3/engine/libs/runtime/llvm.jar:/home/guzuxing/Documents/tsmart-v3/engine/libs/runtime/llvm-platform.jar:/home/guzuxing/Documents/tsmart-v3/engine/libs/runtime/smt-parser.jar:/home/guzuxing/Documents/tsmart-v3/engine/libs/runtime/common.jar:/home/guzuxing/Documents/tsmart-v3/engine/libs/runtime/javolution-core-java.jar:/home/guzuxing/Documents/tsmart-v3/engine/libs/runtime/jsr305.jar:/home/guzuxing/Documents/tsmart-v3/engine/libs/XMLReport.jar:/home/guzuxing/Documents/tsmart-v3/engine/libs/build-capture.jar:/home/guzuxing/Documents/tsmart-v3/mod-commons/out/production/classes:/home/guzuxing/.gradle/caches/modules-2/files-2.1/junit/junit/4.11/4e031bb61df09069aeb2bffb4019e7a5034a4ee0/junit-4.11.jar:/home/guzuxing/.gradle/caches/modules-2/files-2.1/com.google.guava/guava/19.0/6ce200f6b23222af3d8abb6b6459e6c44f4bb0e9/guava-19.0.jar:/home/guzuxing/.gradle/caches/modules-2/files-2.1/com.google.code.findbugs/jsr305/3.0.0/5871fb60dc68d67da54a663c3fd636a10a532948/jsr305-3.0.0.jar:/home/guzuxing/.gradle/caches/modules-2/files-2.1/com.google.truth/truth/0.30/9d591b5a66eda81f0b88cf1c748ab8853d99b18b/truth-0.30.jar:/home/guzuxing/.gradle/caches/modules-2/files-2.1/org.hamcrest/hamcrest-core/1.3/42a25dc3219429f0e5d060061f71acb49bf010a0/hamcrest-core-1.3.jar:/home/guzuxing/.gradle/caches/modules-2/files-2.1/com.google.errorprone/error_prone_annotations/2.0.8/54e2d56cb157df08cbf183149bcf50c9f5151ed4/error_prone_annotations-2.0.8.jar com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 cn.edu.thu.tsmart.integrated.Juliet_191_Test
<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/191/191_1.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [bad1]
 +bad1
SCC(1): [good1]
 +good1
SCC(1): [main]
 +main
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [printLine]
 +printLine
SCC(1): [printLongLine]
 +printLongLine
SCC(1): [printUnsignedLine]
 +printUnsignedLine
<begin of summary store (POINTER_AP)>
Functions [printUnsignedLine, bad1, good1, main, printHexCharLine, printIntLine, printLine, printLongLine]
Loops     []
----
function: bad1
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: good1
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printUnsignedLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.26s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N51): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Integer Underflow
At node  : N15
On edge  : N15 -{%conv3 = trunc i32 %mul to i16}-> N16
Message  : integer underflow
> Start from entry function: main, At N51 of Function main
> Entering function: good1, On N108 -> N26 (call good1)
> takes the true branch, At N35 of Function good1
> Entering function: printIntLine, On N44 -> N67 (call printIntLine)
> Leaving function: printIntLine, On N66 -> N46 (Return edge from printIntLine to good1)
> Leaving function: good1, On N25 -> N53 (Return edge from good1 to main)
> Entering function: bad1, On N53 -> N1 (call bad1)
> takes the true branch, At N10 of Function bad1
<Defect> : N15 -> N16: [%conv3 = trunc i32 %mul to i16]
N15 -> N16: [%conv3 = trunc i32 %mul to i16] <--
-- end of trace --
=====================================================
CWE_191(Integer Underflow): 1
	[./191_1.c 51] bad1 		[N15 -{%conv3 = trunc i32 %mul to i16}-> N16]	(integer underflow)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/191/191_2.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [bad2]
 +bad2
SCC(1): [printLine]
 +printLine
SCC(1): [good2]
 +good2
SCC(1): [main]
 +main
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [printLongLine]
 +printLongLine
SCC(1): [printUnsignedLine]
 +printUnsignedLine
<begin of summary store (POINTER_AP)>
Functions [bad2, good2, main, printHexCharLine, printIntLine, printLine, printLongLine, printUnsignedLine]
Loops     []
----
function: bad2
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: good2
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printUnsignedLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.067s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N156): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Integer Underflow
At node  : N123
On edge  : N123 -{%conv1 = trunc i32 %sub to i8}-> N124
Message  : integer underflow
> Start from entry function: main, At N156 of Function main
> Entering function: good2, On N213 -> N130 (call good2)
> takes the false branch, At N139 of Function good2
> Entering function: printLine, On N154 -> N181 (call printLine)
> takes the true branch, At N187 of Function printLine
> Leaving function: printLine, On N180 -> N151 (Return edge from printLine to good2)
> Leaving function: good2, On N129 -> N158 (Return edge from good2 to main)
> Entering function: bad2, On N158 -> N113 (call bad2)
<Defect> : N123 -> N124: [%conv1 = trunc i32 %sub to i8]
N123 -> N124: [%conv1 = trunc i32 %sub to i8] <--
-- end of trace --
=====================================================
CWE_191(Integer Underflow): 1
	[./191_2.c 55] bad2 		[N123 -{%conv1 = trunc i32 %sub to i8}-> N124]	(integer underflow)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/191/191_3.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [bad3]
 +bad3
SCC(1): [printLine]
 +printLine
SCC(1): [good3]
 +good3
SCC(1): [main]
 +main
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [printLongLine]
 +printLongLine
SCC(1): [printUnsignedLine]
 +printUnsignedLine
<begin of summary store (POINTER_AP)>
Functions [good3, main, printHexCharLine, printIntLine, printLine, printLongLine, printUnsignedLine, bad3]
Loops     []
----
function: bad3
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: good3
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printUnsignedLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.026s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N257): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Integer Underflow
At node  : N227
On edge  : N227 -{%sub = sub i32 %0, 1}-> N228
Message  : integer underflow
> Start from entry function: main, At N257 of Function main
> Entering function: good3, On N314 -> N234 (call good3)
> takes the false branch, At N242 of Function good3
> Entering function: printLine, On N255 -> N282 (call printLine)
> takes the true branch, At N288 of Function printLine
> Leaving function: printLine, On N281 -> N252 (Return edge from printLine to good3)
> Leaving function: good3, On N233 -> N259 (Return edge from good3 to main)
> Entering function: bad3, On N259 -> N219 (call bad3)
<Defect> : N227 -> N228: [%sub = sub i32 %0, 1]
N227 -> N228: [%sub = sub i32 %0, 1] <--
-- end of trace --
=====================================================
CWE_191(Integer Underflow): 1
	[./191_3.c 56] bad3 		[N227 -{%sub = sub i32 %0, 1}-> N228]	(integer underflow)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/191/191_4.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printLongLine]
 +printLongLine
SCC(1): [bad4]
 +bad4
SCC(1): [printLine]
 +printLine
SCC(1): [good4]
 +good4
SCC(1): [main]
 +main
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [printUnsignedLine]
 +printUnsignedLine
<begin of summary store (POINTER_AP)>
Functions [main, printHexCharLine, printIntLine, printLine, printLongLine, printUnsignedLine, bad4, good4]
Loops     []
----
function: bad4
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: good4
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printUnsignedLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.012s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N358): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Integer Underflow
At node  : N328
On edge  : N328 -{%sub = sub i64 %0, 1}-> N329
Message  : integer underflow
> Start from entry function: main, At N358 of Function main
> Entering function: good4, On N415 -> N335 (call good4)
> takes the false branch, At N343 of Function good4
> Entering function: printLine, On N356 -> N383 (call printLine)
> takes the true branch, At N389 of Function printLine
> Leaving function: printLine, On N382 -> N353 (Return edge from printLine to good4)
> Leaving function: good4, On N334 -> N360 (Return edge from good4 to main)
> Entering function: bad4, On N360 -> N320 (call bad4)
<Defect> : N328 -> N329: [%sub = sub i64 %0, 1]
N328 -> N329: [%sub = sub i64 %0, 1] <--
-- end of trace --
=====================================================
CWE_191(Integer Underflow): 1
	[./191_4.c 61] bad4 		[N328 -{%sub = sub i64 %0, 1}-> N329]	(integer underflow)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/191/191_5.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printUnsignedLine]
 +printUnsignedLine
SCC(1): [bad5]
 +bad5
SCC(1): [printLine]
 +printLine
SCC(1): [good5]
 +good5
SCC(1): [main]
 +main
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [printLongLine]
 +printLongLine
<begin of summary store (POINTER_AP)>
Functions [main, printHexCharLine, printIntLine, printLine, printLongLine, printUnsignedLine, bad5, good5]
Loops     []
----
function: bad5
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: good5
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printUnsignedLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.036s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N485): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Integer Underflow
At node  : N437
On edge  : N437 -{%sub = sub i32 %3, 1}-> N438
Message  : integer underflow
> Start from entry function: main, At N485 of Function main
> Entering function: good5, On N542 -> N449 (call good5)
> takes the true branch, At N456 of Function good5
> takes the true branch, At N462 of Function good5
> takes the false branch, At N465 of Function good5
> Entering function: printLine, On N483 -> N510 (call printLine)
> takes the true branch, At N516 of Function printLine
> Leaving function: printLine, On N509 -> N476 (Return edge from printLine to good5)
> Leaving function: good5, On N448 -> N487 (Return edge from good5 to main)
> Entering function: bad5, On N487 -> N421 (call bad5)
> takes the true branch, At N428 of Function bad5
> takes the true branch, At N434 of Function bad5
<Defect> : N437 -> N438: [%sub = sub i32 %3, 1]
N437 -> N438: [%sub = sub i32 %3, 1] <--
-- end of trace --
=====================================================
CWE_191(Integer Underflow): 1
	[./191_5.c 61] bad5 		[N437 -{%sub = sub i32 %3, 1}-> N438]	(integer underflow)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/191/191_6.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [bad6]
 +bad6
SCC(1): [good6]
 +good6
SCC(1): [main]
 +main
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [printLine]
 +printLine
SCC(1): [printLongLine]
 +printLongLine
SCC(1): [printUnsignedLine]
 +printUnsignedLine
<begin of summary store (POINTER_AP)>
Functions [printIntLine, printLine, printLongLine, printUnsignedLine, bad6, good6, main, printHexCharLine]
Loops     []
----
function: bad6
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: good6
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printUnsignedLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.009s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N599): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Integer Underflow
At node  : N565
On edge  : N565 -{%conv3 = trunc i32 %mul to i8}-> N566
Message  : integer underflow
> Start from entry function: main, At N599 of Function main
> Entering function: good6, On N656 -> N575 (call good6)
> takes the true branch, At N584 of Function good6
> Entering function: printHexCharLine, On N592 -> N605 (call printHexCharLine)
> Leaving function: printHexCharLine, On N604 -> N594 (Return edge from printHexCharLine to good6)
> Leaving function: good6, On N574 -> N601 (Return edge from good6 to main)
> Entering function: bad6, On N601 -> N551 (call bad6)
> takes the true branch, At N560 of Function bad6
<Defect> : N565 -> N566: [%conv3 = trunc i32 %mul to i8]
N565 -> N566: [%conv3 = trunc i32 %mul to i8] <--
-- end of trace --
=====================================================
CWE_191(Integer Underflow): 1
	[./191_6.c 53] bad6 		[N565 -{%conv3 = trunc i32 %mul to i8}-> N566]	(integer underflow)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/191/191_7.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [bad7]
 +bad7
SCC(1): [good7]
 +good7
SCC(1): [main]
 +main
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [printLine]
 +printLine
SCC(1): [printLongLine]
 +printLongLine
SCC(1): [printUnsignedLine]
 +printUnsignedLine
<begin of summary store (POINTER_AP)>
Functions [printLongLine, printUnsignedLine, bad7, good7, main, printHexCharLine, printIntLine, printLine]
Loops     []
----
function: bad7
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: good7
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printUnsignedLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.01s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N709): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Integer Underflow
At node  : N675
On edge  : N675 -{%conv3 = trunc i32 %mul to i8}-> N676
Message  : integer underflow
> Start from entry function: main, At N709 of Function main
> Entering function: good7, On N766 -> N685 (call good7)
> takes the true branch, At N694 of Function good7
> Entering function: printHexCharLine, On N702 -> N715 (call printHexCharLine)
> Leaving function: printHexCharLine, On N714 -> N704 (Return edge from printHexCharLine to good7)
> Leaving function: good7, On N684 -> N711 (Return edge from good7 to main)
> Entering function: bad7, On N711 -> N661 (call bad7)
> takes the true branch, At N670 of Function bad7
<Defect> : N675 -> N676: [%conv3 = trunc i32 %mul to i8]
N675 -> N676: [%conv3 = trunc i32 %mul to i8] <--
-- end of trace --
=====================================================
CWE_191(Integer Underflow): 1
	[./191_7.c 58] bad7 		[N675 -{%conv3 = trunc i32 %mul to i8}-> N676]	(integer underflow)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/191/191_8.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [bad8]
 +bad8
SCC(1): [good8]
 +good8
SCC(1): [main]
 +main
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [printLine]
 +printLine
SCC(1): [printLongLine]
 +printLongLine
SCC(1): [printUnsignedLine]
 +printUnsignedLine
<begin of summary store (POINTER_AP)>
Functions [printUnsignedLine, bad8, good8, main, printHexCharLine, printIntLine, printLine, printLongLine]
Loops     []
----
function: bad8
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: good8
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printUnsignedLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.009s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N819): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Integer Underflow
At node  : N785
On edge  : N785 -{%conv3 = trunc i32 %mul to i8}-> N786
Message  : integer underflow
> Start from entry function: main, At N819 of Function main
> Entering function: good8, On N876 -> N795 (call good8)
> takes the true branch, At N804 of Function good8
> Entering function: printHexCharLine, On N812 -> N825 (call printHexCharLine)
> Leaving function: printHexCharLine, On N824 -> N814 (Return edge from printHexCharLine to good8)
> Leaving function: good8, On N794 -> N821 (Return edge from good8 to main)
> Entering function: bad8, On N821 -> N771 (call bad8)
> takes the true branch, At N780 of Function bad8
<Defect> : N785 -> N786: [%conv3 = trunc i32 %mul to i8]
N785 -> N786: [%conv3 = trunc i32 %mul to i8] <--
-- end of trace --
=====================================================
CWE_191(Integer Underflow): 1
	[./191_8.c 58] bad8 		[N785 -{%conv3 = trunc i32 %mul to i8}-> N786]	(integer underflow)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/191/191_9.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [bad9]
 +bad9
SCC(1): [good9]
 +good9
SCC(1): [main]
 +main
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [printLine]
 +printLine
SCC(1): [printLongLine]
 +printLongLine
SCC(1): [printUnsignedLine]
 +printUnsignedLine
<begin of summary store (POINTER_AP)>
Functions [bad9, good9, main, printHexCharLine, printIntLine, printLine, printLongLine, printUnsignedLine]
Loops     []
----
function: bad9
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: good9
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printUnsignedLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.007s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N929): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Integer Underflow
At node  : N895
On edge  : N895 -{%conv3 = trunc i32 %mul to i8}-> N896
Message  : integer underflow
> Start from entry function: main, At N929 of Function main
> Entering function: good9, On N986 -> N905 (call good9)
> takes the true branch, At N914 of Function good9
> Entering function: printHexCharLine, On N922 -> N935 (call printHexCharLine)
> Leaving function: printHexCharLine, On N934 -> N924 (Return edge from printHexCharLine to good9)
> Leaving function: good9, On N904 -> N931 (Return edge from good9 to main)
> Entering function: bad9, On N931 -> N881 (call bad9)
> takes the true branch, At N890 of Function bad9
<Defect> : N895 -> N896: [%conv3 = trunc i32 %mul to i8]
N895 -> N896: [%conv3 = trunc i32 %mul to i8] <--
-- end of trace --
=====================================================
CWE_191(Integer Underflow): 1
	[./191_9.c 61] bad9 		[N895 -{%conv3 = trunc i32 %mul to i8}-> N896]	(integer underflow)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/191/191_10.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [bad10]
 +bad10
SCC(1): [printLine]
 +printLine
SCC(1): [good10]
 +good10
SCC(1): [main]
 +main
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [printLongLine]
 +printLongLine
SCC(1): [printUnsignedLine]
 +printUnsignedLine
<begin of summary store (POINTER_AP)>
Functions [good10, main, printHexCharLine, printIntLine, printLine, printLongLine, printUnsignedLine, bad10]
Loops     []
----
function: bad10
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: good10
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printUnsignedLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.008s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N1065): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Integer Underflow
At node  : N1012
On edge  : N1012 -{%conv6 = trunc i32 %mul to i8}-> N1013
Message  : integer underflow
> Start from entry function: main, At N1065 of Function main
> Entering function: good10, On N1122 -> N1027 (call good10)
> takes the false branch, At N1034 of Function good10
> takes the true branch, At N1041 of Function good10
> takes the true branch, At N1045 of Function good10
> Entering function: printHexCharLine, On N1053 -> N1071 (call printHexCharLine)
> Leaving function: printHexCharLine, On N1070 -> N1056 (Return edge from printHexCharLine to good10)
> Leaving function: good10, On N1026 -> N1067 (Return edge from good10 to main)
> Entering function: bad10, On N1067 -> N991 (call bad10)
> takes the true branch, At N998 of Function bad10
> takes the true branch, At N1003 of Function bad10
> takes the true branch, At N1007 of Function bad10
<Defect> : N1012 -> N1013: [%conv6 = trunc i32 %mul to i8]
N1012 -> N1013: [%conv6 = trunc i32 %mul to i8] <--
-- end of trace --
=====================================================
CWE_191(Integer Underflow): 1
	[./191_10.c 61] bad10 		[N1012 -{%conv6 = trunc i32 %mul to i8}-> N1013]	(integer underflow)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/191/191_11.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [bad11]
 +bad11
SCC(1): [good11]
 +good11
SCC(1): [main]
 +main
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [printLine]
 +printLine
SCC(1): [printLongLine]
 +printLongLine
SCC(1): [printUnsignedLine]
 +printUnsignedLine
<begin of summary store (POINTER_AP)>
Functions [bad11, good11, main, printHexCharLine, printIntLine, printLine, printLongLine, printUnsignedLine]
Loops     []
----
function: bad11
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: good11
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printUnsignedLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.01s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N1178): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Integer Underflow
At node  : N1144
On edge  : N1144 -{%conv3 = trunc i32 %mul to i8}-> N1145
Message  : integer underflow
> Start from entry function: main, At N1178 of Function main
> Entering function: good11, On N1235 -> N1154 (call good11)
> takes the true branch, At N1163 of Function good11
> Entering function: printHexCharLine, On N1171 -> N1184 (call printHexCharLine)
> Leaving function: printHexCharLine, On N1183 -> N1173 (Return edge from printHexCharLine to good11)
> Leaving function: good11, On N1153 -> N1180 (Return edge from good11 to main)
> Entering function: bad11, On N1180 -> N1130 (call bad11)
> takes the true branch, At N1139 of Function bad11
<Defect> : N1144 -> N1145: [%conv3 = trunc i32 %mul to i8]
N1144 -> N1145: [%conv3 = trunc i32 %mul to i8] <--
-- end of trace --
=====================================================
CWE_191(Integer Underflow): 1
	[./191_11.c 60] bad11 		[N1144 -{%conv3 = trunc i32 %mul to i8}-> N1145]	(integer underflow)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/191/191_12.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [bad12]
 +bad12
SCC(1): [printLine]
 +printLine
SCC(1): [good12]
 +good12
SCC(1): [main]
 +main
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [printLongLine]
 +printLongLine
SCC(1): [printUnsignedLine]
 +printUnsignedLine
<begin of summary store (POINTER_AP)>
Functions [good12, main, printHexCharLine, printIntLine, printLine, printLongLine, printUnsignedLine, bad12]
Loops     []
----
function: bad12
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: good12
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printUnsignedLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.012s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N1314): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Integer Underflow
At node  : N1261
On edge  : N1261 -{%conv7 = trunc i32 %mul to i8}-> N1262
Message  : integer underflow
> Start from entry function: main, At N1314 of Function main
> Entering function: good12, On N1371 -> N1276 (call good12)
> takes the false branch, At N1283 of Function good12
> takes the true branch, At N1290 of Function good12
> takes the true branch, At N1294 of Function good12
> Entering function: printHexCharLine, On N1302 -> N1320 (call printHexCharLine)
> Leaving function: printHexCharLine, On N1319 -> N1305 (Return edge from printHexCharLine to good12)
> Leaving function: good12, On N1275 -> N1316 (Return edge from good12 to main)
> Entering function: bad12, On N1316 -> N1240 (call bad12)
> takes the true branch, At N1247 of Function bad12
> takes the true branch, At N1252 of Function bad12
> takes the true branch, At N1256 of Function bad12
<Defect> : N1261 -> N1262: [%conv7 = trunc i32 %mul to i8]
N1261 -> N1262: [%conv7 = trunc i32 %mul to i8] <--
-- end of trace --
=====================================================
CWE_191(Integer Underflow): 1
	[./191_12.c 60] bad12 		[N1261 -{%conv7 = trunc i32 %mul to i8}-> N1262]	(integer underflow)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/191/191_13.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
10 SCCs to deal with
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [staticReturnsTrue]
 +staticReturnsTrue
SCC(1): [bad13]
 +bad13
SCC(1): [printLine]
 +printLine
SCC(1): [staticReturnsFalse]
 +staticReturnsFalse
SCC(1): [good13]
 +good13
SCC(1): [main]
 +main
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [printLongLine]
 +printLongLine
SCC(1): [printUnsignedLine]
 +printUnsignedLine
<begin of summary store (POINTER_AP)>
Functions [staticReturnsFalse, staticReturnsTrue, bad13, good13, main, printHexCharLine, printIntLine, printLine, printLongLine, printUnsignedLine]
Loops     []
----
function: bad13
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: good13
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printUnsignedLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: staticReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: staticReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.008s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N1452): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Integer Underflow
At node  : N1399
On edge  : N1399 -{%conv7 = trunc i32 %mul to i8}-> N1400
Message  : integer underflow
> Start from entry function: main, At N1452 of Function main
> Entering function: good13, On N1517 -> N1414 (call good13)
> Entering function: staticReturnsFalse, On N1419 -> N1510 (call staticReturnsFalse)
> Leaving function: staticReturnsFalse, On N1509 -> N1420 (Return edge from staticReturnsFalse to good13)
> takes the false branch, At N1421 of Function good13
> Entering function: staticReturnsTrue, On N1426 -> N1514 (call staticReturnsTrue)
> Leaving function: staticReturnsTrue, On N1513 -> N1427 (Return edge from staticReturnsTrue to good13)
> takes the true branch, At N1428 of Function good13
> takes the true branch, At N1432 of Function good13
> Entering function: printHexCharLine, On N1440 -> N1458 (call printHexCharLine)
> Leaving function: printHexCharLine, On N1457 -> N1443 (Return edge from printHexCharLine to good13)
> Leaving function: good13, On N1413 -> N1454 (Return edge from good13 to main)
> Entering function: bad13, On N1454 -> N1378 (call bad13)
> Entering function: staticReturnsTrue, On N1383 -> N1514 (call staticReturnsTrue)
> Leaving function: staticReturnsTrue, On N1513 -> N1384 (Return edge from staticReturnsTrue to bad13)
> takes the true branch, At N1385 of Function bad13
> Entering function: staticReturnsTrue, On N1388 -> N1514 (call staticReturnsTrue)
> Leaving function: staticReturnsTrue, On N1513 -> N1389 (Return edge from staticReturnsTrue to bad13)
> takes the true branch, At N1390 of Function bad13
> takes the true branch, At N1394 of Function bad13
<Defect> : N1399 -> N1400: [%conv7 = trunc i32 %mul to i8]
N1399 -> N1400: [%conv7 = trunc i32 %mul to i8] <--
-- end of trace --
=====================================================
CWE_191(Integer Underflow): 1
	[./191_13.c 68] bad13 		[N1399 -{%conv7 = trunc i32 %mul to i8}-> N1400]	(integer underflow)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/191/191_14.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [bad14]
 +bad14
SCC(1): [good14]
 +good14
SCC(1): [main]
 +main
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [printLine]
 +printLine
SCC(1): [printLongLine]
 +printLongLine
SCC(1): [printUnsignedLine]
 +printUnsignedLine
<begin of summary store (POINTER_AP)>
Functions [bad14, good14, main, printHexCharLine, printIntLine, printLine, printLongLine, printUnsignedLine]
Loops     []
----
function: bad14
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: good14
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printUnsignedLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.005s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N1571): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Integer Underflow
At node  : N1537
On edge  : N1537 -{%conv3 = trunc i32 %mul to i8}-> N1538
Message  : integer underflow
> Start from entry function: main, At N1571 of Function main
> Entering function: good14, On N1628 -> N1547 (call good14)
> takes the true branch, At N1556 of Function good14
> Entering function: printHexCharLine, On N1564 -> N1577 (call printHexCharLine)
> Leaving function: printHexCharLine, On N1576 -> N1566 (Return edge from printHexCharLine to good14)
> Leaving function: good14, On N1546 -> N1573 (Return edge from good14 to main)
> Entering function: bad14, On N1573 -> N1523 (call bad14)
> takes the true branch, At N1532 of Function bad14
<Defect> : N1537 -> N1538: [%conv3 = trunc i32 %mul to i8]
N1537 -> N1538: [%conv3 = trunc i32 %mul to i8] <--
-- end of trace --
=====================================================
CWE_191(Integer Underflow): 1
	[./191_14.c 61] bad14 		[N1537 -{%conv3 = trunc i32 %mul to i8}-> N1538]	(integer underflow)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/191/191_15.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [bad15]
 +bad15
SCC(1): [printLine]
 +printLine
SCC(1): [good15]
 +good15
SCC(1): [main]
 +main
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [printLongLine]
 +printLongLine
SCC(1): [printUnsignedLine]
 +printUnsignedLine
<begin of summary store (POINTER_AP)>
Functions [bad15, good15, main, printHexCharLine, printIntLine, printLine, printLongLine, printUnsignedLine]
Loops     []
----
function: bad15
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: good15
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printUnsignedLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.007s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N1710): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Integer Underflow
At node  : N1657
On edge  : N1657 -{%conv6 = trunc i32 %mul to i8}-> N1658
Message  : integer underflow
> Start from entry function: main, At N1710 of Function main
> Entering function: good15, On N1767 -> N1672 (call good15)
> takes the false branch, At N1679 of Function good15
> takes the true branch, At N1686 of Function good15
> takes the true branch, At N1690 of Function good15
> Entering function: printHexCharLine, On N1698 -> N1716 (call printHexCharLine)
> Leaving function: printHexCharLine, On N1715 -> N1701 (Return edge from printHexCharLine to good15)
> Leaving function: good15, On N1671 -> N1712 (Return edge from good15 to main)
> Entering function: bad15, On N1712 -> N1636 (call bad15)
> takes the true branch, At N1643 of Function bad15
> takes the true branch, At N1648 of Function bad15
> takes the true branch, At N1652 of Function bad15
<Defect> : N1657 -> N1658: [%conv6 = trunc i32 %mul to i8]
N1657 -> N1658: [%conv6 = trunc i32 %mul to i8] <--
-- end of trace --
=====================================================
CWE_191(Integer Underflow): 1
	[./191_15.c 65] bad15 		[N1657 -{%conv6 = trunc i32 %mul to i8}-> N1658]	(integer underflow)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/191/191_16.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [bad16]
 +bad16
SCC(1): [good16]
 +good16
SCC(1): [main]
 +main
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [printLine]
 +printLine
SCC(1): [printLongLine]
 +printLongLine
SCC(1): [printUnsignedLine]
 +printUnsignedLine
<begin of summary store (POINTER_AP)>
Functions [bad16, good16, main, printHexCharLine, printIntLine, printLine, printLongLine, printUnsignedLine]
Loops     []
----
function: bad16
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: good16
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printUnsignedLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.006s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N1813): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Integer Underflow
At node  : N1789
On edge  : N1789 -{%conv1 = trunc i32 %sub to i8}-> N1790
Message  : integer underflow
> Start from entry function: main, At N1813 of Function main
> Entering function: good16, On N1870 -> N1796 (call good16)
> Entering function: printHexCharLine, On N1809 -> N1819 (call printHexCharLine)
> Leaving function: printHexCharLine, On N1818 -> N1810 (Return edge from printHexCharLine to good16)
> Leaving function: good16, On N1795 -> N1815 (Return edge from good16 to main)
> Entering function: bad16, On N1815 -> N1779 (call bad16)
<Defect> : N1789 -> N1790: [%conv1 = trunc i32 %sub to i8]
N1789 -> N1790: [%conv1 = trunc i32 %sub to i8] <--
-- end of trace --
=====================================================
CWE_191(Integer Underflow): 1
	[./191_16.c 51] bad16 		[N1789 -{%conv1 = trunc i32 %sub to i8}-> N1790]	(integer underflow)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/191/191_17.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [bad17]
 +bad17
SCC(1): [good17]
 +good17
SCC(1): [main]
 +main
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [printLine]
 +printLine
SCC(1): [printLongLine]
 +printLongLine
SCC(1): [printUnsignedLine]
 +printUnsignedLine
<begin of summary store (POINTER_AP)>
Functions [good17, main, printHexCharLine, printIntLine, printLine, printLongLine, printUnsignedLine, bad17]
Loops     []
----
function: bad17
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: good17
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printUnsignedLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.006s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N1909): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Integer Underflow
At node  : N1885
On edge  : N1885 -{%conv1 = trunc i32 %sub to i8}-> N1886
Message  : integer underflow
> Start from entry function: main, At N1909 of Function main
> Entering function: good17, On N1966 -> N1892 (call good17)
> Entering function: printHexCharLine, On N1905 -> N1915 (call printHexCharLine)
> Leaving function: printHexCharLine, On N1914 -> N1906 (Return edge from printHexCharLine to good17)
> Leaving function: good17, On N1891 -> N1911 (Return edge from good17 to main)
> Entering function: bad17, On N1911 -> N1875 (call bad17)
<Defect> : N1885 -> N1886: [%conv1 = trunc i32 %sub to i8]
N1885 -> N1886: [%conv1 = trunc i32 %sub to i8] <--
-- end of trace --
=====================================================
CWE_191(Integer Underflow): 1
	[./191_17.c 56] bad17 		[N1885 -{%conv1 = trunc i32 %sub to i8}-> N1886]	(integer underflow)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/191/191_18.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [bad18]
 +bad18
SCC(1): [good18]
 +good18
SCC(1): [main]
 +main
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [printLine]
 +printLine
SCC(1): [printLongLine]
 +printLongLine
SCC(1): [printUnsignedLine]
 +printUnsignedLine
<begin of summary store (POINTER_AP)>
Functions [printIntLine, printLine, printLongLine, printUnsignedLine, bad18, good18, main, printHexCharLine]
Loops     []
----
function: bad18
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: good18
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printUnsignedLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.008s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N2005): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Integer Underflow
At node  : N1981
On edge  : N1981 -{%conv1 = trunc i32 %sub to i8}-> N1982
Message  : integer underflow
> Start from entry function: main, At N2005 of Function main
> Entering function: good18, On N2062 -> N1988 (call good18)
> Entering function: printHexCharLine, On N2001 -> N2011 (call printHexCharLine)
> Leaving function: printHexCharLine, On N2010 -> N2002 (Return edge from printHexCharLine to good18)
> Leaving function: good18, On N1987 -> N2007 (Return edge from good18 to main)
> Entering function: bad18, On N2007 -> N1971 (call bad18)
<Defect> : N1981 -> N1982: [%conv1 = trunc i32 %sub to i8]
N1981 -> N1982: [%conv1 = trunc i32 %sub to i8] <--
-- end of trace --
=====================================================
CWE_191(Integer Underflow): 1
	[./191_18.c 56] bad18 		[N1981 -{%conv1 = trunc i32 %sub to i8}-> N1982]	(integer underflow)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/191/191_19.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [bad19]
 +bad19
SCC(1): [good19]
 +good19
SCC(1): [main]
 +main
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [printLine]
 +printLine
SCC(1): [printLongLine]
 +printLongLine
SCC(1): [printUnsignedLine]
 +printUnsignedLine
<begin of summary store (POINTER_AP)>
Functions [printUnsignedLine, bad19, good19, main, printHexCharLine, printIntLine, printLine, printLongLine]
Loops     []
----
function: bad19
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: good19
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printUnsignedLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.004s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N2101): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Integer Underflow
At node  : N2077
On edge  : N2077 -{%conv1 = trunc i32 %sub to i8}-> N2078
Message  : integer underflow
> Start from entry function: main, At N2101 of Function main
> Entering function: good19, On N2158 -> N2084 (call good19)
> Entering function: printHexCharLine, On N2097 -> N2107 (call printHexCharLine)
> Leaving function: printHexCharLine, On N2106 -> N2098 (Return edge from printHexCharLine to good19)
> Leaving function: good19, On N2083 -> N2103 (Return edge from good19 to main)
> Entering function: bad19, On N2103 -> N2067 (call bad19)
<Defect> : N2077 -> N2078: [%conv1 = trunc i32 %sub to i8]
N2077 -> N2078: [%conv1 = trunc i32 %sub to i8] <--
-- end of trace --
=====================================================
CWE_191(Integer Underflow): 1
	[./191_19.c 59] bad19 		[N2077 -{%conv1 = trunc i32 %sub to i8}-> N2078]	(integer underflow)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/191/191_20.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [bad20]
 +bad20
SCC(1): [printLine]
 +printLine
SCC(1): [good20]
 +good20
SCC(1): [main]
 +main
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [printLongLine]
 +printLongLine
SCC(1): [printUnsignedLine]
 +printUnsignedLine
<begin of summary store (POINTER_AP)>
Functions [bad20, good20, main, printHexCharLine, printIntLine, printLine, printLongLine, printUnsignedLine]
Loops     []
----
function: bad20
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: good20
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printUnsignedLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.012s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N2223): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Integer Underflow
At node  : N2180
On edge  : N2180 -{%conv3 = trunc i32 %sub to i8}-> N2181
Message  : integer underflow
> Start from entry function: main, At N2223 of Function main
> Entering function: good20, On N2280 -> N2192 (call good20)
> takes the false branch, At N2199 of Function good20
> takes the true branch, At N2206 of Function good20
> Entering function: printHexCharLine, On N2214 -> N2229 (call printHexCharLine)
> Leaving function: printHexCharLine, On N2228 -> N2216 (Return edge from printHexCharLine to good20)
> Leaving function: good20, On N2191 -> N2225 (Return edge from good20 to main)
> Entering function: bad20, On N2225 -> N2163 (call bad20)
> takes the true branch, At N2170 of Function bad20
> takes the true branch, At N2175 of Function bad20
<Defect> : N2180 -> N2181: [%conv3 = trunc i32 %sub to i8]
N2180 -> N2181: [%conv3 = trunc i32 %sub to i8] <--
-- end of trace --
=====================================================
CWE_191(Integer Underflow): 1
	[./191_20.c 59] bad20 		[N2180 -{%conv3 = trunc i32 %sub to i8}-> N2181]	(integer underflow)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/191/191_21.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [bad21]
 +bad21
SCC(1): [good21]
 +good21
SCC(1): [main]
 +main
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [printLine]
 +printLine
SCC(1): [printLongLine]
 +printLongLine
SCC(1): [printUnsignedLine]
 +printUnsignedLine
<begin of summary store (POINTER_AP)>
Functions [bad21, good21, main, printHexCharLine, printIntLine, printLine, printLongLine, printUnsignedLine]
Loops     []
----
function: bad21
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: good21
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printUnsignedLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.005s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N2322): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Integer Underflow
At node  : N2298
On edge  : N2298 -{%conv1 = trunc i32 %sub to i8}-> N2299
Message  : integer underflow
> Start from entry function: main, At N2322 of Function main
> Entering function: good21, On N2379 -> N2305 (call good21)
> Entering function: printHexCharLine, On N2318 -> N2328 (call printHexCharLine)
> Leaving function: printHexCharLine, On N2327 -> N2319 (Return edge from printHexCharLine to good21)
> Leaving function: good21, On N2304 -> N2324 (Return edge from good21 to main)
> Entering function: bad21, On N2324 -> N2288 (call bad21)
<Defect> : N2298 -> N2299: [%conv1 = trunc i32 %sub to i8]
N2298 -> N2299: [%conv1 = trunc i32 %sub to i8] <--
-- end of trace --
=====================================================
CWE_191(Integer Underflow): 1
	[./191_21.c 58] bad21 		[N2298 -{%conv1 = trunc i32 %sub to i8}-> N2299]	(integer underflow)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/191/191_22.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [bad22]
 +bad22
SCC(1): [printLine]
 +printLine
SCC(1): [good22]
 +good22
SCC(1): [main]
 +main
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [printLongLine]
 +printLongLine
SCC(1): [printUnsignedLine]
 +printUnsignedLine
<begin of summary store (POINTER_AP)>
Functions [good22, main, printHexCharLine, printIntLine, printLine, printLongLine, printUnsignedLine, bad22]
Loops     []
----
function: bad22
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: good22
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printUnsignedLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.004s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N2444): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Integer Underflow
At node  : N2401
On edge  : N2401 -{%conv3 = trunc i32 %sub to i8}-> N2402
Message  : integer underflow
> Start from entry function: main, At N2444 of Function main
> Entering function: good22, On N2501 -> N2413 (call good22)
> takes the false branch, At N2420 of Function good22
> takes the true branch, At N2427 of Function good22
> Entering function: printHexCharLine, On N2435 -> N2450 (call printHexCharLine)
> Leaving function: printHexCharLine, On N2449 -> N2437 (Return edge from printHexCharLine to good22)
> Leaving function: good22, On N2412 -> N2446 (Return edge from good22 to main)
> Entering function: bad22, On N2446 -> N2384 (call bad22)
> takes the true branch, At N2391 of Function bad22
> takes the true branch, At N2396 of Function bad22
<Defect> : N2401 -> N2402: [%conv3 = trunc i32 %sub to i8]
N2401 -> N2402: [%conv3 = trunc i32 %sub to i8] <--
-- end of trace --
=====================================================
CWE_191(Integer Underflow): 1
	[./191_22.c 58] bad22 		[N2401 -{%conv3 = trunc i32 %sub to i8}-> N2402]	(integer underflow)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/191/191_23.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
10 SCCs to deal with
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [staticReturnsTrue]
 +staticReturnsTrue
SCC(1): [bad23]
 +bad23
SCC(1): [printLine]
 +printLine
SCC(1): [staticReturnsFalse]
 +staticReturnsFalse
SCC(1): [good23]
 +good23
SCC(1): [main]
 +main
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [printLongLine]
 +printLongLine
SCC(1): [printUnsignedLine]
 +printUnsignedLine
<begin of summary store (POINTER_AP)>
Functions [good23, main, printHexCharLine, printIntLine, printLine, printLongLine, printUnsignedLine, staticReturnsFalse, staticReturnsTrue, bad23]
Loops     []
----
function: bad23
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: good23
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printUnsignedLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: staticReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: staticReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.007s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N2568): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Integer Underflow
At node  : N2525
On edge  : N2525 -{%conv4 = trunc i32 %sub to i8}-> N2526
Message  : integer underflow
> Start from entry function: main, At N2568 of Function main
> Entering function: good23, On N2633 -> N2537 (call good23)
> Entering function: staticReturnsFalse, On N2542 -> N2626 (call staticReturnsFalse)
> Leaving function: staticReturnsFalse, On N2625 -> N2543 (Return edge from staticReturnsFalse to good23)
> takes the false branch, At N2544 of Function good23
> Entering function: staticReturnsTrue, On N2549 -> N2630 (call staticReturnsTrue)
> Leaving function: staticReturnsTrue, On N2629 -> N2550 (Return edge from staticReturnsTrue to good23)
> takes the true branch, At N2551 of Function good23
> Entering function: printHexCharLine, On N2559 -> N2574 (call printHexCharLine)
> Leaving function: printHexCharLine, On N2573 -> N2561 (Return edge from printHexCharLine to good23)
> Leaving function: good23, On N2536 -> N2570 (Return edge from good23 to main)
> Entering function: bad23, On N2570 -> N2508 (call bad23)
> Entering function: staticReturnsTrue, On N2513 -> N2630 (call staticReturnsTrue)
> Leaving function: staticReturnsTrue, On N2629 -> N2514 (Return edge from staticReturnsTrue to bad23)
> takes the true branch, At N2515 of Function bad23
> Entering function: staticReturnsTrue, On N2518 -> N2630 (call staticReturnsTrue)
> Leaving function: staticReturnsTrue, On N2629 -> N2519 (Return edge from staticReturnsTrue to bad23)
> takes the true branch, At N2520 of Function bad23
<Defect> : N2525 -> N2526: [%conv4 = trunc i32 %sub to i8]
N2525 -> N2526: [%conv4 = trunc i32 %sub to i8] <--
-- end of trace --
=====================================================
CWE_191(Integer Underflow): 1
	[./191_23.c 66] bad23 		[N2525 -{%conv4 = trunc i32 %sub to i8}-> N2526]	(integer underflow)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/191/191_24.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [bad24]
 +bad24
SCC(1): [good24]
 +good24
SCC(1): [main]
 +main
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [printLine]
 +printLine
SCC(1): [printLongLine]
 +printLongLine
SCC(1): [printUnsignedLine]
 +printUnsignedLine
<begin of summary store (POINTER_AP)>
Functions [main, printHexCharLine, printIntLine, printLine, printLongLine, printUnsignedLine, bad24, good24]
Loops     []
----
function: bad24
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: good24
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printUnsignedLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.004s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N2673): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Integer Underflow
At node  : N2649
On edge  : N2649 -{%conv1 = trunc i32 %sub to i8}-> N2650
Message  : integer underflow
> Start from entry function: main, At N2673 of Function main
> Entering function: good24, On N2730 -> N2656 (call good24)
> Entering function: printHexCharLine, On N2669 -> N2679 (call printHexCharLine)
> Leaving function: printHexCharLine, On N2678 -> N2670 (Return edge from printHexCharLine to good24)
> Leaving function: good24, On N2655 -> N2675 (Return edge from good24 to main)
> Entering function: bad24, On N2675 -> N2639 (call bad24)
<Defect> : N2649 -> N2650: [%conv1 = trunc i32 %sub to i8]
N2649 -> N2650: [%conv1 = trunc i32 %sub to i8] <--
-- end of trace --
=====================================================
CWE_191(Integer Underflow): 1
	[./191_24.c 64] bad24 		[N2649 -{%conv1 = trunc i32 %sub to i8}-> N2650]	(integer underflow)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/191/191_25.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [bad25]
 +bad25
SCC(1): [printLine]
 +printLine
SCC(1): [good25]
 +good25
SCC(1): [main]
 +main
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [printLongLine]
 +printLongLine
SCC(1): [printUnsignedLine]
 +printUnsignedLine
<begin of summary store (POINTER_AP)>
Functions [main, printHexCharLine, printIntLine, printLine, printLongLine, printUnsignedLine, bad25, good25]
Loops     []
----
function: bad25
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: good25
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printUnsignedLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.004s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N2801): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Integer Underflow
At node  : N2758
On edge  : N2758 -{%conv3 = trunc i32 %sub to i8}-> N2759
Message  : integer underflow
> Start from entry function: main, At N2801 of Function main
> Entering function: good25, On N2858 -> N2770 (call good25)
> takes the false branch, At N2777 of Function good25
> takes the true branch, At N2784 of Function good25
> Entering function: printHexCharLine, On N2792 -> N2807 (call printHexCharLine)
> Leaving function: printHexCharLine, On N2806 -> N2794 (Return edge from printHexCharLine to good25)
> Leaving function: good25, On N2769 -> N2803 (Return edge from good25 to main)
> Entering function: bad25, On N2803 -> N2741 (call bad25)
> takes the true branch, At N2748 of Function bad25
> takes the true branch, At N2753 of Function bad25
<Defect> : N2758 -> N2759: [%conv3 = trunc i32 %sub to i8]
N2758 -> N2759: [%conv3 = trunc i32 %sub to i8] <--
-- end of trace --
=====================================================
CWE_191(Integer Underflow): 1
	[./191_25.c 64] bad25 		[N2758 -{%conv3 = trunc i32 %sub to i8}-> N2759]	(integer underflow)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/191/191_26.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [bad26]
 +bad26
SCC(1): [good26]
 +good26
SCC(1): [main]
 +main
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [printLine]
 +printLine
SCC(1): [printLongLine]
 +printLongLine
SCC(1): [printUnsignedLine]
 +printUnsignedLine
<begin of summary store (POINTER_AP)>
Functions [main, printHexCharLine, printIntLine, printLine, printLongLine, printUnsignedLine, bad26, good26]
Loops     []
----
function: bad26
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: good26
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printUnsignedLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.005s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N2918): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Integer Underflow
At node  : N2884
On edge  : N2884 -{%conv3 = trunc i32 %mul to i8}-> N2885
Message  : integer underflow
> Start from entry function: main, At N2918 of Function main
> Entering function: good26, On N2975 -> N2894 (call good26)
> takes the true branch, At N2903 of Function good26
> Entering function: printHexCharLine, On N2911 -> N2924 (call printHexCharLine)
> Leaving function: printHexCharLine, On N2923 -> N2913 (Return edge from printHexCharLine to good26)
> Leaving function: good26, On N2893 -> N2920 (Return edge from good26 to main)
> Entering function: bad26, On N2920 -> N2870 (call bad26)
> takes the true branch, At N2879 of Function bad26
<Defect> : N2884 -> N2885: [%conv3 = trunc i32 %mul to i8]
N2884 -> N2885: [%conv3 = trunc i32 %mul to i8] <--
-- end of trace --
=====================================================
CWE_191(Integer Underflow): 1
	[./191_26.c 53] bad26 		[N2884 -{%conv3 = trunc i32 %mul to i8}-> N2885]	(integer underflow)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/191/191_27.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [bad27]
 +bad27
SCC(1): [printLine]
 +printLine
SCC(1): [good27]
 +good27
SCC(1): [main]
 +main
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [printLongLine]
 +printLongLine
SCC(1): [printUnsignedLine]
 +printUnsignedLine
<begin of summary store (POINTER_AP)>
Functions [printHexCharLine, printIntLine, printLine, printLongLine, printUnsignedLine, bad27, good27, main]
Loops     []
----
function: bad27
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: good27
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printUnsignedLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.005s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N3037): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Integer Underflow
At node  : N2994
On edge  : N2994 -{%conv3 = trunc i32 %mul to i8}-> N2995
Message  : integer underflow
> Start from entry function: main, At N3037 of Function main
> Entering function: good27, On N3094 -> N3004 (call good27)
> takes the true branch, At N3013 of Function good27
> takes the false branch, At N3017 of Function good27
> Entering function: printLine, On N3035 -> N3062 (call printLine)
> takes the true branch, At N3068 of Function printLine
> Leaving function: printLine, On N3061 -> N3030 (Return edge from printLine to good27)
> Leaving function: good27, On N3003 -> N3039 (Return edge from good27 to main)
> Entering function: bad27, On N3039 -> N2980 (call bad27)
> takes the true branch, At N2989 of Function bad27
<Defect> : N2994 -> N2995: [%conv3 = trunc i32 %mul to i8]
N2994 -> N2995: [%conv3 = trunc i32 %mul to i8] <--
-- end of trace --
=====================================================
CWE_191(Integer Underflow): 1
	[./191_27.c 58] bad27 		[N2994 -{%conv3 = trunc i32 %mul to i8}-> N2995]	(integer underflow)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/191/191_28.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [bad28]
 +bad28
SCC(1): [printLine]
 +printLine
SCC(1): [good28]
 +good28
SCC(1): [main]
 +main
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [printLongLine]
 +printLongLine
SCC(1): [printUnsignedLine]
 +printUnsignedLine
<begin of summary store (POINTER_AP)>
Functions [printIntLine, printLine, printLongLine, printUnsignedLine, bad28, good28, main, printHexCharLine]
Loops     []
----
function: bad28
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: good28
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printUnsignedLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.005s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N3157): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Integer Underflow
At node  : N3114
On edge  : N3114 -{%conv3 = trunc i32 %mul to i8}-> N3115
Message  : integer underflow
> Start from entry function: main, At N3157 of Function main
> Entering function: good28, On N3214 -> N3124 (call good28)
> takes the true branch, At N3133 of Function good28
> takes the false branch, At N3137 of Function good28
> Entering function: printLine, On N3155 -> N3182 (call printLine)
> takes the true branch, At N3188 of Function printLine
> Leaving function: printLine, On N3181 -> N3150 (Return edge from printLine to good28)
> Leaving function: good28, On N3123 -> N3159 (Return edge from good28 to main)
> Entering function: bad28, On N3159 -> N3100 (call bad28)
> takes the true branch, At N3109 of Function bad28
<Defect> : N3114 -> N3115: [%conv3 = trunc i32 %mul to i8]
N3114 -> N3115: [%conv3 = trunc i32 %mul to i8] <--
-- end of trace --
=====================================================
CWE_191(Integer Underflow): 1
	[./191_28.c 58] bad28 		[N3114 -{%conv3 = trunc i32 %mul to i8}-> N3115]	(integer underflow)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/191/191_29.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [bad29]
 +bad29
SCC(1): [printLine]
 +printLine
SCC(1): [good29]
 +good29
SCC(1): [main]
 +main
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [printLongLine]
 +printLongLine
SCC(1): [printUnsignedLine]
 +printUnsignedLine
<begin of summary store (POINTER_AP)>
Functions [printLine, printLongLine, printUnsignedLine, bad29, good29, main, printHexCharLine, printIntLine]
Loops     []
----
function: bad29
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: good29
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printUnsignedLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.005s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N3277): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Integer Underflow
At node  : N3234
On edge  : N3234 -{%conv3 = trunc i32 %mul to i8}-> N3235
Message  : integer underflow
> Start from entry function: main, At N3277 of Function main
> Entering function: good29, On N3334 -> N3244 (call good29)
> takes the true branch, At N3253 of Function good29
> takes the false branch, At N3257 of Function good29
> Entering function: printLine, On N3275 -> N3302 (call printLine)
> takes the true branch, At N3308 of Function printLine
> Leaving function: printLine, On N3301 -> N3270 (Return edge from printLine to good29)
> Leaving function: good29, On N3243 -> N3279 (Return edge from good29 to main)
> Entering function: bad29, On N3279 -> N3220 (call bad29)
> takes the true branch, At N3229 of Function bad29
<Defect> : N3234 -> N3235: [%conv3 = trunc i32 %mul to i8]
N3234 -> N3235: [%conv3 = trunc i32 %mul to i8] <--
-- end of trace --
=====================================================
CWE_191(Integer Underflow): 1
	[./191_29.c 61] bad29 		[N3234 -{%conv3 = trunc i32 %mul to i8}-> N3235]	(integer underflow)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/191/191_30.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [bad30]
 +bad30
SCC(1): [printLine]
 +printLine
SCC(1): [good30]
 +good30
SCC(1): [main]
 +main
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [printLongLine]
 +printLongLine
SCC(1): [printUnsignedLine]
 +printUnsignedLine
<begin of summary store (POINTER_AP)>
Functions [bad30, good30, main, printHexCharLine, printIntLine, printLine, printLongLine, printUnsignedLine]
Loops     []
----
function: bad30
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: good30
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printUnsignedLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.004s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N3423): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Integer Underflow
At node  : N3361
On edge  : N3361 -{%conv6 = trunc i32 %mul to i8}-> N3362
Message  : integer underflow
> Start from entry function: main, At N3423 of Function main
> Entering function: good30, On N3480 -> N3376 (call good30)
> takes the true branch, At N3383 of Function good30
> takes the false branch, At N3388 of Function good30
> takes the true branch, At N3394 of Function good30
> takes the false branch, At N3398 of Function good30
> Entering function: printLine, On N3421 -> N3448 (call printLine)
> takes the true branch, At N3454 of Function printLine
> Leaving function: printLine, On N3447 -> N3412 (Return edge from printLine to good30)
> Leaving function: good30, On N3375 -> N3425 (Return edge from good30 to main)
> Entering function: bad30, On N3425 -> N3340 (call bad30)
> takes the true branch, At N3347 of Function bad30
> takes the true branch, At N3352 of Function bad30
> takes the true branch, At N3356 of Function bad30
<Defect> : N3361 -> N3362: [%conv6 = trunc i32 %mul to i8]
N3361 -> N3362: [%conv6 = trunc i32 %mul to i8] <--
-- end of trace --
=====================================================
CWE_191(Integer Underflow): 1
	[./191_30.c 61] bad30 		[N3361 -{%conv6 = trunc i32 %mul to i8}-> N3362]	(integer underflow)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/191/191_31.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [bad31]
 +bad31
SCC(1): [printLine]
 +printLine
SCC(1): [good31]
 +good31
SCC(1): [main]
 +main
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [printLongLine]
 +printLongLine
SCC(1): [printUnsignedLine]
 +printUnsignedLine
<begin of summary store (POINTER_AP)>
Functions [printIntLine, printLine, printLongLine, printUnsignedLine, bad31, good31, main, printHexCharLine]
Loops     []
----
function: bad31
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: good31
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printUnsignedLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.01s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N3546): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Integer Underflow
At node  : N3503
On edge  : N3503 -{%conv3 = trunc i32 %mul to i8}-> N3504
Message  : integer underflow
> Start from entry function: main, At N3546 of Function main
> Entering function: good31, On N3603 -> N3513 (call good31)
> takes the true branch, At N3522 of Function good31
> takes the false branch, At N3526 of Function good31
> Entering function: printLine, On N3544 -> N3571 (call printLine)
> takes the true branch, At N3577 of Function printLine
> Leaving function: printLine, On N3570 -> N3539 (Return edge from printLine to good31)
> Leaving function: good31, On N3512 -> N3548 (Return edge from good31 to main)
> Entering function: bad31, On N3548 -> N3489 (call bad31)
> takes the true branch, At N3498 of Function bad31
<Defect> : N3503 -> N3504: [%conv3 = trunc i32 %mul to i8]
N3503 -> N3504: [%conv3 = trunc i32 %mul to i8] <--
-- end of trace --
=====================================================
CWE_191(Integer Underflow): 1
	[./191_31.c 60] bad31 		[N3503 -{%conv3 = trunc i32 %mul to i8}-> N3504]	(integer underflow)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/191/191_32.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [bad32]
 +bad32
SCC(1): [printLine]
 +printLine
SCC(1): [good32]
 +good32
SCC(1): [main]
 +main
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [printLongLine]
 +printLongLine
SCC(1): [printUnsignedLine]
 +printUnsignedLine
<begin of summary store (POINTER_AP)>
Functions [bad32, good32, main, printHexCharLine, printIntLine, printLine, printLongLine, printUnsignedLine]
Loops     []
----
function: bad32
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: good32
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printUnsignedLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.01s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N3692): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Integer Underflow
At node  : N3630
On edge  : N3630 -{%conv7 = trunc i32 %mul to i8}-> N3631
Message  : integer underflow
> Start from entry function: main, At N3692 of Function main
> Entering function: good32, On N3749 -> N3645 (call good32)
> takes the true branch, At N3652 of Function good32
> takes the false branch, At N3657 of Function good32
> takes the true branch, At N3663 of Function good32
> takes the false branch, At N3667 of Function good32
> Entering function: printLine, On N3690 -> N3717 (call printLine)
> takes the true branch, At N3723 of Function printLine
> Leaving function: printLine, On N3716 -> N3681 (Return edge from printLine to good32)
> Leaving function: good32, On N3644 -> N3694 (Return edge from good32 to main)
> Entering function: bad32, On N3694 -> N3609 (call bad32)
> takes the true branch, At N3616 of Function bad32
> takes the true branch, At N3621 of Function bad32
> takes the true branch, At N3625 of Function bad32
<Defect> : N3630 -> N3631: [%conv7 = trunc i32 %mul to i8]
N3630 -> N3631: [%conv7 = trunc i32 %mul to i8] <--
-- end of trace --
=====================================================
CWE_191(Integer Underflow): 1
	[./191_32.c 60] bad32 		[N3630 -{%conv7 = trunc i32 %mul to i8}-> N3631]	(integer underflow)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/191/191_33.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
10 SCCs to deal with
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [staticReturnsTrue]
 +staticReturnsTrue
SCC(1): [bad33]
 +bad33
SCC(1): [printLine]
 +printLine
SCC(1): [staticReturnsFalse]
 +staticReturnsFalse
SCC(1): [good33]
 +good33
SCC(1): [main]
 +main
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [printLongLine]
 +printLongLine
SCC(1): [printUnsignedLine]
 +printUnsignedLine
<begin of summary store (POINTER_AP)>
Functions [main, printHexCharLine, printIntLine, printLine, printLongLine, printUnsignedLine, staticReturnsFalse, staticReturnsTrue, bad33, good33]
Loops     []
----
function: bad33
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: good33
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printUnsignedLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: staticReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: staticReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.008s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N3840): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Integer Underflow
At node  : N3778
On edge  : N3778 -{%conv7 = trunc i32 %mul to i8}-> N3779
Message  : integer underflow
> Start from entry function: main, At N3840 of Function main
> Entering function: good33, On N3905 -> N3793 (call good33)
> Entering function: staticReturnsTrue, On N3798 -> N3902 (call staticReturnsTrue)
> Leaving function: staticReturnsTrue, On N3901 -> N3799 (Return edge from staticReturnsTrue to good33)
> takes the true branch, At N3800 of Function good33
> Entering function: staticReturnsFalse, On N3803 -> N3898 (call staticReturnsFalse)
> Leaving function: staticReturnsFalse, On N3897 -> N3804 (Return edge from staticReturnsFalse to good33)
> takes the false branch, At N3805 of Function good33
> takes the true branch, At N3811 of Function good33
> takes the false branch, At N3815 of Function good33
> Entering function: printLine, On N3838 -> N3865 (call printLine)
> takes the true branch, At N3871 of Function printLine
> Leaving function: printLine, On N3864 -> N3829 (Return edge from printLine to good33)
> Leaving function: good33, On N3792 -> N3842 (Return edge from good33 to main)
> Entering function: bad33, On N3842 -> N3757 (call bad33)
> Entering function: staticReturnsTrue, On N3762 -> N3902 (call staticReturnsTrue)
> Leaving function: staticReturnsTrue, On N3901 -> N3763 (Return edge from staticReturnsTrue to bad33)
> takes the true branch, At N3764 of Function bad33
> Entering function: staticReturnsTrue, On N3767 -> N3902 (call staticReturnsTrue)
> Leaving function: staticReturnsTrue, On N3901 -> N3768 (Return edge from staticReturnsTrue to bad33)
> takes the true branch, At N3769 of Function bad33
> takes the true branch, At N3773 of Function bad33
<Defect> : N3778 -> N3779: [%conv7 = trunc i32 %mul to i8]
N3778 -> N3779: [%conv7 = trunc i32 %mul to i8] <--
-- end of trace --
=====================================================
CWE_191(Integer Underflow): 1
	[./191_33.c 68] bad33 		[N3778 -{%conv7 = trunc i32 %mul to i8}-> N3779]	(integer underflow)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/191/191_34.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [bad34]
 +bad34
SCC(1): [good34]
 +good34
SCC(1): [main]
 +main
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [printLine]
 +printLine
SCC(1): [printLongLine]
 +printLongLine
SCC(1): [printUnsignedLine]
 +printUnsignedLine
<begin of summary store (POINTER_AP)>
Functions [main, printHexCharLine, printIntLine, printLine, printLongLine, printUnsignedLine, bad34, good34]
Loops     []
----
function: bad34
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: good34
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printUnsignedLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.007s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N3946): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Integer Underflow
At node  : N3922
On edge  : N3922 -{%conv1 = trunc i32 %sub to i8}-> N3923
Message  : integer underflow
> Start from entry function: main, At N3946 of Function main
> Entering function: good34, On N4003 -> N3929 (call good34)
> Entering function: printHexCharLine, On N3942 -> N3952 (call printHexCharLine)
> Leaving function: printHexCharLine, On N3951 -> N3943 (Return edge from printHexCharLine to good34)
> Leaving function: good34, On N3928 -> N3948 (Return edge from good34 to main)
> Entering function: bad34, On N3948 -> N3912 (call bad34)
<Defect> : N3922 -> N3923: [%conv1 = trunc i32 %sub to i8]
N3922 -> N3923: [%conv1 = trunc i32 %sub to i8] <--
-- end of trace --
=====================================================
CWE_191(Integer Underflow): 1
	[./191_34.c 52] bad34 		[N3922 -{%conv1 = trunc i32 %sub to i8}-> N3923]	(integer underflow)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/191/191_35.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [bad35]
 +bad35
SCC(1): [printLine]
 +printLine
SCC(1): [good35]
 +good35
SCC(1): [main]
 +main
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [printLongLine]
 +printLongLine
SCC(1): [printUnsignedLine]
 +printUnsignedLine
<begin of summary store (POINTER_AP)>
Functions [printIntLine, printLine, printLongLine, printUnsignedLine, bad35, good35, main, printHexCharLine]
Loops     []
----
function: bad35
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: good35
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printUnsignedLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.005s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N4051): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Integer Underflow
At node  : N4018
On edge  : N4018 -{%conv1 = trunc i32 %sub to i8}-> N4019
Message  : integer underflow
> Start from entry function: main, At N4051 of Function main
> Entering function: good35, On N4108 -> N4025 (call good35)
> takes the false branch, At N4034 of Function good35
> Entering function: printLine, On N4049 -> N4076 (call printLine)
> takes the true branch, At N4082 of Function printLine
> Leaving function: printLine, On N4075 -> N4046 (Return edge from printLine to good35)
> Leaving function: good35, On N4024 -> N4053 (Return edge from good35 to main)
> Entering function: bad35, On N4053 -> N4008 (call bad35)
<Defect> : N4018 -> N4019: [%conv1 = trunc i32 %sub to i8]
N4018 -> N4019: [%conv1 = trunc i32 %sub to i8] <--
-- end of trace --
=====================================================
CWE_191(Integer Underflow): 1
	[./191_35.c 57] bad35 		[N4018 -{%conv1 = trunc i32 %sub to i8}-> N4019]	(integer underflow)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/191/191_36.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [bad36]
 +bad36
SCC(1): [printLine]
 +printLine
SCC(1): [good36]
 +good36
SCC(1): [main]
 +main
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [printLongLine]
 +printLongLine
SCC(1): [printUnsignedLine]
 +printUnsignedLine
<begin of summary store (POINTER_AP)>
Functions [printLongLine, printUnsignedLine, bad36, good36, main, printHexCharLine, printIntLine, printLine]
Loops     []
----
function: bad36
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: good36
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printUnsignedLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.005s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N4157): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Integer Underflow
At node  : N4124
On edge  : N4124 -{%conv1 = trunc i32 %sub to i8}-> N4125
Message  : integer underflow
> Start from entry function: main, At N4157 of Function main
> Entering function: good36, On N4214 -> N4131 (call good36)
> takes the false branch, At N4140 of Function good36
> Entering function: printLine, On N4155 -> N4182 (call printLine)
> takes the true branch, At N4188 of Function printLine
> Leaving function: printLine, On N4181 -> N4152 (Return edge from printLine to good36)
> Leaving function: good36, On N4130 -> N4159 (Return edge from good36 to main)
> Entering function: bad36, On N4159 -> N4114 (call bad36)
<Defect> : N4124 -> N4125: [%conv1 = trunc i32 %sub to i8]
N4124 -> N4125: [%conv1 = trunc i32 %sub to i8] <--
-- end of trace --
=====================================================
CWE_191(Integer Underflow): 1
	[./191_36.c 56] bad36 		[N4124 -{%conv1 = trunc i32 %sub to i8}-> N4125]	(integer underflow)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/191/191_37.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [bad37]
 +bad37
SCC(1): [printLine]
 +printLine
SCC(1): [good37]
 +good37
SCC(1): [main]
 +main
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [printLongLine]
 +printLongLine
SCC(1): [printUnsignedLine]
 +printUnsignedLine
<begin of summary store (POINTER_AP)>
Functions [bad37, good37, main, printHexCharLine, printIntLine, printLine, printLongLine, printUnsignedLine]
Loops     []
----
function: bad37
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: good37
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printUnsignedLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.004s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N4263): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Integer Underflow
At node  : N4230
On edge  : N4230 -{%conv1 = trunc i32 %sub to i8}-> N4231
Message  : integer underflow
> Start from entry function: main, At N4263 of Function main
> Entering function: good37, On N4320 -> N4237 (call good37)
> takes the false branch, At N4246 of Function good37
> Entering function: printLine, On N4261 -> N4288 (call printLine)
> takes the true branch, At N4294 of Function printLine
> Leaving function: printLine, On N4287 -> N4258 (Return edge from printLine to good37)
> Leaving function: good37, On N4236 -> N4265 (Return edge from good37 to main)
> Entering function: bad37, On N4265 -> N4220 (call bad37)
<Defect> : N4230 -> N4231: [%conv1 = trunc i32 %sub to i8]
N4230 -> N4231: [%conv1 = trunc i32 %sub to i8] <--
-- end of trace --
=====================================================
CWE_191(Integer Underflow): 1
	[./191_37.c 60] bad37 		[N4230 -{%conv1 = trunc i32 %sub to i8}-> N4231]	(integer underflow)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/191/191_38.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [bad38]
 +bad38
SCC(1): [printLine]
 +printLine
SCC(1): [good38]
 +good38
SCC(1): [main]
 +main
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [printLongLine]
 +printLongLine
SCC(1): [printUnsignedLine]
 +printUnsignedLine
<begin of summary store (POINTER_AP)>
Functions [bad38, good38, main, printHexCharLine, printIntLine, printLine, printLongLine, printUnsignedLine]
Loops     []
----
function: bad38
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: good38
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printUnsignedLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.007s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N4395): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Integer Underflow
At node  : N4343
On edge  : N4343 -{%conv3 = trunc i32 %sub to i8}-> N4344
Message  : integer underflow
> Start from entry function: main, At N4395 of Function main
> Entering function: good38, On N4452 -> N4355 (call good38)
> takes the true branch, At N4362 of Function good38
> takes the false branch, At N4367 of Function good38
> takes the false branch, At N4373 of Function good38
> Entering function: printLine, On N4393 -> N4420 (call printLine)
> takes the true branch, At N4426 of Function printLine
> Leaving function: printLine, On N4419 -> N4386 (Return edge from printLine to good38)
> Leaving function: good38, On N4354 -> N4397 (Return edge from good38 to main)
> Entering function: bad38, On N4397 -> N4326 (call bad38)
> takes the true branch, At N4333 of Function bad38
> takes the true branch, At N4338 of Function bad38
<Defect> : N4343 -> N4344: [%conv3 = trunc i32 %sub to i8]
N4343 -> N4344: [%conv3 = trunc i32 %sub to i8] <--
-- end of trace --
=====================================================
CWE_191(Integer Underflow): 1
	[./191_38.c 60] bad38 		[N4343 -{%conv3 = trunc i32 %sub to i8}-> N4344]	(integer underflow)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/191/191_39.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [bad39]
 +bad39
SCC(1): [printLine]
 +printLine
SCC(1): [good39]
 +good39
SCC(1): [main]
 +main
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [printLongLine]
 +printLongLine
SCC(1): [printUnsignedLine]
 +printUnsignedLine
<begin of summary store (POINTER_AP)>
Functions [bad39, good39, main, printHexCharLine, printIntLine, printLine, printLongLine, printUnsignedLine]
Loops     []
----
function: bad39
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: good39
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printUnsignedLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.011s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N4504): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Integer Underflow
At node  : N4471
On edge  : N4471 -{%conv1 = trunc i32 %sub to i8}-> N4472
Message  : integer underflow
> Start from entry function: main, At N4504 of Function main
> Entering function: good39, On N4561 -> N4478 (call good39)
> takes the false branch, At N4487 of Function good39
> Entering function: printLine, On N4502 -> N4529 (call printLine)
> takes the true branch, At N4535 of Function printLine
> Leaving function: printLine, On N4528 -> N4499 (Return edge from printLine to good39)
> Leaving function: good39, On N4477 -> N4506 (Return edge from good39 to main)
> Entering function: bad39, On N4506 -> N4461 (call bad39)
<Defect> : N4471 -> N4472: [%conv1 = trunc i32 %sub to i8]
N4471 -> N4472: [%conv1 = trunc i32 %sub to i8] <--
-- end of trace --
=====================================================
CWE_191(Integer Underflow): 1
	[./191_39.c 59] bad39 		[N4471 -{%conv1 = trunc i32 %sub to i8}-> N4472]	(integer underflow)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/191/191_40.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [bad40]
 +bad40
SCC(1): [printLine]
 +printLine
SCC(1): [good40]
 +good40
SCC(1): [main]
 +main
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [printLongLine]
 +printLongLine
SCC(1): [printUnsignedLine]
 +printUnsignedLine
<begin of summary store (POINTER_AP)>
Functions [good40, main, printHexCharLine, printIntLine, printLine, printLongLine, printUnsignedLine, bad40]
Loops     []
----
function: bad40
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: good40
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printUnsignedLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.004s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N4636): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Integer Underflow
At node  : N4584
On edge  : N4584 -{%conv3 = trunc i32 %sub to i8}-> N4585
Message  : integer underflow
> Start from entry function: main, At N4636 of Function main
> Entering function: good40, On N4693 -> N4596 (call good40)
> takes the true branch, At N4603 of Function good40
> takes the false branch, At N4608 of Function good40
> takes the false branch, At N4614 of Function good40
> Entering function: printLine, On N4634 -> N4661 (call printLine)
> takes the true branch, At N4667 of Function printLine
> Leaving function: printLine, On N4660 -> N4627 (Return edge from printLine to good40)
> Leaving function: good40, On N4595 -> N4638 (Return edge from good40 to main)
> Entering function: bad40, On N4638 -> N4567 (call bad40)
> takes the true branch, At N4574 of Function bad40
> takes the true branch, At N4579 of Function bad40
<Defect> : N4584 -> N4585: [%conv3 = trunc i32 %sub to i8]
N4584 -> N4585: [%conv3 = trunc i32 %sub to i8] <--
-- end of trace --
=====================================================
CWE_191(Integer Underflow): 1
	[./191_40.c 59] bad40 		[N4584 -{%conv3 = trunc i32 %sub to i8}-> N4585]	(integer underflow)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/191/191_41.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
10 SCCs to deal with
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [staticReturnsTrue]
 +staticReturnsTrue
SCC(1): [bad41]
 +bad41
SCC(1): [printLine]
 +printLine
SCC(1): [staticReturnsFalse]
 +staticReturnsFalse
SCC(1): [good41]
 +good41
SCC(1): [main]
 +main
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [printLongLine]
 +printLongLine
SCC(1): [printUnsignedLine]
 +printUnsignedLine
<begin of summary store (POINTER_AP)>
Functions [bad41, good41, main, printHexCharLine, printIntLine, printLine, printLongLine, printUnsignedLine, staticReturnsFalse, staticReturnsTrue]
Loops     []
----
function: bad41
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: good41
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printUnsignedLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: staticReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: staticReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.003s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N4770): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Integer Underflow
At node  : N4718
On edge  : N4718 -{%conv4 = trunc i32 %sub to i8}-> N4719
Message  : integer underflow
> Start from entry function: main, At N4770 of Function main
> Entering function: good41, On N4835 -> N4730 (call good41)
> Entering function: staticReturnsTrue, On N4735 -> N4832 (call staticReturnsTrue)
> Leaving function: staticReturnsTrue, On N4831 -> N4736 (Return edge from staticReturnsTrue to good41)
> takes the true branch, At N4737 of Function good41
> Entering function: staticReturnsFalse, On N4740 -> N4828 (call staticReturnsFalse)
> Leaving function: staticReturnsFalse, On N4827 -> N4741 (Return edge from staticReturnsFalse to good41)
> takes the false branch, At N4742 of Function good41
> takes the false branch, At N4748 of Function good41
> Entering function: printLine, On N4768 -> N4795 (call printLine)
> takes the true branch, At N4801 of Function printLine
> Leaving function: printLine, On N4794 -> N4761 (Return edge from printLine to good41)
> Leaving function: good41, On N4729 -> N4772 (Return edge from good41 to main)
> Entering function: bad41, On N4772 -> N4701 (call bad41)
> Entering function: staticReturnsTrue, On N4706 -> N4832 (call staticReturnsTrue)
> Leaving function: staticReturnsTrue, On N4831 -> N4707 (Return edge from staticReturnsTrue to bad41)
> takes the true branch, At N4708 of Function bad41
> Entering function: staticReturnsTrue, On N4711 -> N4832 (call staticReturnsTrue)
> Leaving function: staticReturnsTrue, On N4831 -> N4712 (Return edge from staticReturnsTrue to bad41)
> takes the true branch, At N4713 of Function bad41
<Defect> : N4718 -> N4719: [%conv4 = trunc i32 %sub to i8]
N4718 -> N4719: [%conv4 = trunc i32 %sub to i8] <--
-- end of trace --
=====================================================
CWE_191(Integer Underflow): 1
	[./191_41.c 67] bad41 		[N4718 -{%conv4 = trunc i32 %sub to i8}-> N4719]	(integer underflow)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/191/191_42.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [bad42]
 +bad42
SCC(1): [good42]
 +good42
SCC(1): [main]
 +main
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [printLine]
 +printLine
SCC(1): [printLongLine]
 +printLongLine
SCC(1): [printUnsignedLine]
 +printUnsignedLine
<begin of summary store (POINTER_AP)>
Functions [bad42, good42, main, printHexCharLine, printIntLine, printLine, printLongLine, printUnsignedLine]
Loops     []
----
function: bad42
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: good42
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printUnsignedLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.008s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N4893): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Integer Underflow
At node  : N4857
On edge  : N4857 -{%conv3 = trunc i32 %mul to i16}-> N4858
Message  : integer underflow
> Start from entry function: main, At N4893 of Function main
> Entering function: good42, On N4950 -> N4868 (call good42)
> takes the true branch, At N4877 of Function good42
> Entering function: printIntLine, On N4886 -> N4909 (call printIntLine)
> Leaving function: printIntLine, On N4908 -> N4888 (Return edge from printIntLine to good42)
> Leaving function: good42, On N4867 -> N4895 (Return edge from good42 to main)
> Entering function: bad42, On N4895 -> N4842 (call bad42)
> takes the true branch, At N4852 of Function bad42
<Defect> : N4857 -> N4858: [%conv3 = trunc i32 %mul to i16]
N4857 -> N4858: [%conv3 = trunc i32 %mul to i16] <--
-- end of trace --
=====================================================
CWE_191(Integer Underflow): 1
	[./191_42.c 53] bad42 		[N4857 -{%conv3 = trunc i32 %mul to i16}-> N4858]	(integer underflow)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/191/191_43.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [bad43]
 +bad43
SCC(1): [printLine]
 +printLine
SCC(1): [good43]
 +good43
SCC(1): [main]
 +main
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [printLongLine]
 +printLongLine
SCC(1): [printUnsignedLine]
 +printUnsignedLine
<begin of summary store (POINTER_AP)>
Functions [bad43, good43, main, printHexCharLine, printIntLine, printLine, printLongLine, printUnsignedLine]
Loops     []
----
function: bad43
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: good43
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printUnsignedLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.005s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N5018): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Integer Underflow
At node  : N4972
On edge  : N4972 -{%conv3 = trunc i32 %mul to i16}-> N4973
Message  : integer underflow
> Start from entry function: main, At N5018 of Function main
> Entering function: good43, On N5075 -> N4983 (call good43)
> takes the false branch, At N4993 of Function good43
> Leaving function: good43, On N4982 -> N5020 (Return edge from good43 to main)
> Entering function: bad43, On N5020 -> N4957 (call bad43)
> takes the true branch, At N4967 of Function bad43
<Defect> : N4972 -> N4973: [%conv3 = trunc i32 %mul to i16]
N4972 -> N4973: [%conv3 = trunc i32 %mul to i16] <--
-- end of trace --
=====================================================
CWE_191(Integer Underflow): 1
	[./191_43.c 58] bad43 		[N4972 -{%conv3 = trunc i32 %mul to i16}-> N4973]	(integer underflow)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/191/191_44.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [bad44]
 +bad44
SCC(1): [printLine]
 +printLine
SCC(1): [good44]
 +good44
SCC(1): [main]
 +main
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [printLongLine]
 +printLongLine
SCC(1): [printUnsignedLine]
 +printUnsignedLine
<begin of summary store (POINTER_AP)>
Functions [good44, main, printHexCharLine, printIntLine, printLine, printLongLine, printUnsignedLine, bad44]
Loops     []
----
function: bad44
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: good44
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printUnsignedLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.015s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N5144): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Integer Underflow
At node  : N5098
On edge  : N5098 -{%conv3 = trunc i32 %mul to i16}-> N5099
Message  : integer underflow
> Start from entry function: main, At N5144 of Function main
> Entering function: good44, On N5201 -> N5109 (call good44)
> takes the false branch, At N5119 of Function good44
> Leaving function: good44, On N5108 -> N5146 (Return edge from good44 to main)
> Entering function: bad44, On N5146 -> N5083 (call bad44)
> takes the true branch, At N5093 of Function bad44
<Defect> : N5098 -> N5099: [%conv3 = trunc i32 %mul to i16]
N5098 -> N5099: [%conv3 = trunc i32 %mul to i16] <--
-- end of trace --
=====================================================
CWE_191(Integer Underflow): 1
	[./191_44.c 58] bad44 		[N5098 -{%conv3 = trunc i32 %mul to i16}-> N5099]	(integer underflow)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/191/191_45.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [bad45]
 +bad45
SCC(1): [printLine]
 +printLine
SCC(1): [good45]
 +good45
SCC(1): [main]
 +main
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [printLongLine]
 +printLongLine
SCC(1): [printUnsignedLine]
 +printUnsignedLine
<begin of summary store (POINTER_AP)>
Functions [bad45, good45, main, printHexCharLine, printIntLine, printLine, printLongLine, printUnsignedLine]
Loops     []
----
function: bad45
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: good45
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printUnsignedLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.004s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N5270): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Integer Underflow
At node  : N5224
On edge  : N5224 -{%conv3 = trunc i32 %mul to i16}-> N5225
Message  : integer underflow
> Start from entry function: main, At N5270 of Function main
> Entering function: good45, On N5327 -> N5235 (call good45)
> takes the false branch, At N5245 of Function good45
> Leaving function: good45, On N5234 -> N5272 (Return edge from good45 to main)
> Entering function: bad45, On N5272 -> N5209 (call bad45)
> takes the true branch, At N5219 of Function bad45
<Defect> : N5224 -> N5225: [%conv3 = trunc i32 %mul to i16]
N5224 -> N5225: [%conv3 = trunc i32 %mul to i16] <--
-- end of trace --
=====================================================
CWE_191(Integer Underflow): 1
	[./191_45.c 61] bad45 		[N5224 -{%conv3 = trunc i32 %mul to i16}-> N5225]	(integer underflow)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/191/191_46.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [bad46]
 +bad46
SCC(1): [printLine]
 +printLine
SCC(1): [good46]
 +good46
SCC(1): [main]
 +main
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [printLongLine]
 +printLongLine
SCC(1): [printUnsignedLine]
 +printUnsignedLine
<begin of summary store (POINTER_AP)>
Functions [good46, main, printHexCharLine, printIntLine, printLine, printLongLine, printUnsignedLine, bad46]
Loops     []
----
function: bad46
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: good46
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printUnsignedLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.009s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N5422): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Integer Underflow
At node  : N5357
On edge  : N5357 -{%conv6 = trunc i32 %mul to i16}-> N5358
Message  : integer underflow
> Start from entry function: main, At N5422 of Function main
> Entering function: good46, On N5479 -> N5373 (call good46)
> takes the true branch, At N5380 of Function good46
> takes the false branch, At N5386 of Function good46
> takes the false branch, At N5392 of Function good46
> Leaving function: good46, On N5372 -> N5424 (Return edge from good46 to main)
> Entering function: bad46, On N5424 -> N5335 (call bad46)
> takes the true branch, At N5342 of Function bad46
> takes the true branch, At N5348 of Function bad46
> takes the true branch, At N5352 of Function bad46
<Defect> : N5357 -> N5358: [%conv6 = trunc i32 %mul to i16]
N5357 -> N5358: [%conv6 = trunc i32 %mul to i16] <--
-- end of trace --
=====================================================
CWE_191(Integer Underflow): 1
	[./191_46.c 61] bad46 		[N5357 -{%conv6 = trunc i32 %mul to i16}-> N5358]	(integer underflow)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/191/191_47.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [bad47]
 +bad47
SCC(1): [printLine]
 +printLine
SCC(1): [good47]
 +good47
SCC(1): [main]
 +main
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [printLongLine]
 +printLongLine
SCC(1): [printUnsignedLine]
 +printUnsignedLine
<begin of summary store (POINTER_AP)>
Functions [bad47, good47, main, printHexCharLine, printIntLine, printLine, printLongLine, printUnsignedLine]
Loops     []
----
function: bad47
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: good47
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printUnsignedLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.003s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N5551): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Integer Underflow
At node  : N5505
On edge  : N5505 -{%conv3 = trunc i32 %mul to i16}-> N5506
Message  : integer underflow
> Start from entry function: main, At N5551 of Function main
> Entering function: good47, On N5608 -> N5516 (call good47)
> takes the false branch, At N5526 of Function good47
> Leaving function: good47, On N5515 -> N5553 (Return edge from good47 to main)
> Entering function: bad47, On N5553 -> N5490 (call bad47)
> takes the true branch, At N5500 of Function bad47
<Defect> : N5505 -> N5506: [%conv3 = trunc i32 %mul to i16]
N5505 -> N5506: [%conv3 = trunc i32 %mul to i16] <--
-- end of trace --
=====================================================
CWE_191(Integer Underflow): 1
	[./191_47.c 60] bad47 		[N5505 -{%conv3 = trunc i32 %mul to i16}-> N5506]	(integer underflow)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/191/191_48.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [bad48]
 +bad48
SCC(1): [printLine]
 +printLine
SCC(1): [good48]
 +good48
SCC(1): [main]
 +main
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [printLongLine]
 +printLongLine
SCC(1): [printUnsignedLine]
 +printUnsignedLine
<begin of summary store (POINTER_AP)>
Functions [bad48, good48, main, printHexCharLine, printIntLine, printLine, printLongLine, printUnsignedLine]
Loops     []
----
function: bad48
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: good48
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printUnsignedLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.005s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N5703): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Integer Underflow
At node  : N5638
On edge  : N5638 -{%conv7 = trunc i32 %mul to i16}-> N5639
Message  : integer underflow
> Start from entry function: main, At N5703 of Function main
> Entering function: good48, On N5760 -> N5654 (call good48)
> takes the true branch, At N5661 of Function good48
> takes the false branch, At N5667 of Function good48
> takes the false branch, At N5673 of Function good48
> Leaving function: good48, On N5653 -> N5705 (Return edge from good48 to main)
> Entering function: bad48, On N5705 -> N5616 (call bad48)
> takes the true branch, At N5623 of Function bad48
> takes the true branch, At N5629 of Function bad48
> takes the true branch, At N5633 of Function bad48
<Defect> : N5638 -> N5639: [%conv7 = trunc i32 %mul to i16]
N5638 -> N5639: [%conv7 = trunc i32 %mul to i16] <--
-- end of trace --
=====================================================
CWE_191(Integer Underflow): 1
	[./191_48.c 60] bad48 		[N5638 -{%conv7 = trunc i32 %mul to i16}-> N5639]	(integer underflow)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/191/191_49.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
10 SCCs to deal with
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [staticReturnsTrue]
 +staticReturnsTrue
SCC(1): [bad49]
 +bad49
SCC(1): [printLine]
 +printLine
SCC(1): [staticReturnsFalse]
 +staticReturnsFalse
SCC(1): [good49]
 +good49
SCC(1): [main]
 +main
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [printLongLine]
 +printLongLine
SCC(1): [printUnsignedLine]
 +printUnsignedLine
<begin of summary store (POINTER_AP)>
Functions [main, printHexCharLine, printIntLine, printLine, printLongLine, printUnsignedLine, staticReturnsFalse, staticReturnsTrue, bad49, good49]
Loops     []
----
function: bad49
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: good49
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printUnsignedLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: staticReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: staticReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.012s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N5857): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Integer Underflow
At node  : N5792
On edge  : N5792 -{%conv8 = trunc i32 %mul to i16}-> N5793
Message  : integer underflow
> Start from entry function: main, At N5857 of Function main
> Entering function: good49, On N5922 -> N5808 (call good49)
> Entering function: staticReturnsTrue, On N5813 -> N5919 (call staticReturnsTrue)
> Leaving function: staticReturnsTrue, On N5918 -> N5814 (Return edge from staticReturnsTrue to good49)
> takes the true branch, At N5815 of Function good49
> Entering function: staticReturnsFalse, On N5819 -> N5915 (call staticReturnsFalse)
> Leaving function: staticReturnsFalse, On N5914 -> N5820 (Return edge from staticReturnsFalse to good49)
> takes the false branch, At N5821 of Function good49
> takes the false branch, At N5827 of Function good49
> Leaving function: good49, On N5807 -> N5859 (Return edge from good49 to main)
> Entering function: bad49, On N5859 -> N5770 (call bad49)
> Entering function: staticReturnsTrue, On N5775 -> N5919 (call staticReturnsTrue)
> Leaving function: staticReturnsTrue, On N5918 -> N5776 (Return edge from staticReturnsTrue to bad49)
> takes the true branch, At N5777 of Function bad49
> Entering function: staticReturnsTrue, On N5781 -> N5919 (call staticReturnsTrue)
> Leaving function: staticReturnsTrue, On N5918 -> N5782 (Return edge from staticReturnsTrue to bad49)
> takes the true branch, At N5783 of Function bad49
> takes the true branch, At N5787 of Function bad49
<Defect> : N5792 -> N5793: [%conv8 = trunc i32 %mul to i16]
N5792 -> N5793: [%conv8 = trunc i32 %mul to i16] <--
-- end of trace --
=====================================================
CWE_191(Integer Underflow): 1
	[./191_49.c 68] bad49 		[N5792 -{%conv8 = trunc i32 %mul to i16}-> N5793]	(integer underflow)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/191/191_50.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
8 SCCs to deal with
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [bad50]
 +bad50
SCC(1): [good50]
 +good50
SCC(1): [main]
 +main
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [printLine]
 +printLine
SCC(1): [printLongLine]
 +printLongLine
SCC(1): [printUnsignedLine]
 +printUnsignedLine
<begin of summary store (POINTER_AP)>
Functions [printLine, printLongLine, printUnsignedLine, bad50, good50, main, printHexCharLine, printIntLine]
Loops     []
----
function: bad50
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: good50
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printUnsignedLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.003s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N5968): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Integer Underflow
At node  : N5942
On edge  : N5942 -{%conv1 = trunc i32 %sub to i16}-> N5943
Message  : integer underflow
> Start from entry function: main, At N5968 of Function main
> Entering function: good50, On N6025 -> N5950 (call good50)
> Entering function: printIntLine, On N5964 -> N5984 (call printIntLine)
> Leaving function: printIntLine, On N5983 -> N5965 (Return edge from printIntLine to good50)
> Leaving function: good50, On N5949 -> N5970 (Return edge from good50 to main)
> Entering function: bad50, On N5970 -> N5931 (call bad50)
<Defect> : N5942 -> N5943: [%conv1 = trunc i32 %sub to i16]
N5942 -> N5943: [%conv1 = trunc i32 %sub to i16] <--
-- end of trace --
=====================================================
CWE_191(Integer Underflow): 1
	[./191_50.c 52] bad50 		[N5942 -{%conv1 = trunc i32 %sub to i16}-> N5943]	(integer underflow)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS


Process finished with exit code 0
