/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/java -ea -Didea.test.cyclic.buffer.size=1048576 -javaagent:/home/guzuxing/Downloads/idea-IU-171.4424.56/lib/idea_rt.jar=45474:/home/guzuxing/Downloads/idea-IU-171.4424.56/bin -Dfile.encoding=UTF-8 -classpath /home/guzuxing/Downloads/idea-IU-171.4424.56/lib/idea_rt.jar:/home/guzuxing/Downloads/idea-IU-171.4424.56/plugins/junit/lib/junit-rt.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/cldrdata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/dnsns.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/icedtea-sound.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/jaccess.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/localedata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/nashorn.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunec.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunjce_provider.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunpkcs11.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/zipfs.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/management-agent.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/rt.jar:/home/guzuxing/Documents/tsmart-v3/engine/out/test/classes:/home/guzuxing/Documents/tsmart-v3/engine/build/resources/test:/home/guzuxing/Documents/tsmart-v3/engine/out/production/classes:/home/guzuxing/Documents/tsmart-v3/engine/libs/runtime/llvm-macosx-x86_64.jar:/home/guzuxing/Documents/tsmart-v3/engine/libs/runtime/guava.jar:/home/guzuxing/Documents/tsmart-v3/engine/libs/runtime/java-cup-runtime.jar:/home/guzuxing/Documents/tsmart-v3/engine/libs/runtime/llvm-linux-x86_64.jar:/home/guzuxing/Documents/tsmart-v3/engine/libs/runtime/org.osgi.core.jar:/home/guzuxing/Documents/tsmart-v3/engine/libs/runtime/com.microsoft.z3.jar:/home/guzuxing/Documents/tsmart-v3/engine/libs/runtime/jopt-simple.jar:/home/guzuxing/Documents/tsmart-v3/engine/libs/runtime/javasmt.jar:/home/guzuxing/Documents/tsmart-v3/engine/libs/runtime/javacpp.jar:/home/guzuxing/Documents/tsmart-v3/engine/libs/runtime/scala-library.jar:/home/guzuxing/Documents/tsmart-v3/engine/libs/runtime/princess-assertionless.jar:/home/guzuxing/Documents/tsmart-v3/engine/libs/runtime/org.osgi.compendium.jar:/home/guzuxing/Documents/tsmart-v3/engine/libs/runtime/smtinterpol.jar:/home/guzuxing/Documents/tsmart-v3/engine/libs/runtime/llvm-linux-x86.jar:/home/guzuxing/Documents/tsmart-v3/engine/libs/runtime/llvm.jar:/home/guzuxing/Documents/tsmart-v3/engine/libs/runtime/llvm-platform.jar:/home/guzuxing/Documents/tsmart-v3/engine/libs/runtime/smt-parser.jar:/home/guzuxing/Documents/tsmart-v3/engine/libs/runtime/common.jar:/home/guzuxing/Documents/tsmart-v3/engine/libs/runtime/javolution-core-java.jar:/home/guzuxing/Documents/tsmart-v3/engine/libs/runtime/jsr305.jar:/home/guzuxing/Documents/tsmart-v3/engine/libs/XMLReport.jar:/home/guzuxing/Documents/tsmart-v3/engine/libs/build-capture.jar:/home/guzuxing/Documents/tsmart-v3/mod-commons/out/production/classes:/home/guzuxing/.gradle/caches/modules-2/files-2.1/junit/junit/4.11/4e031bb61df09069aeb2bffb4019e7a5034a4ee0/junit-4.11.jar:/home/guzuxing/.gradle/caches/modules-2/files-2.1/com.google.guava/guava/19.0/6ce200f6b23222af3d8abb6b6459e6c44f4bb0e9/guava-19.0.jar:/home/guzuxing/.gradle/caches/modules-2/files-2.1/com.google.code.findbugs/jsr305/3.0.0/5871fb60dc68d67da54a663c3fd636a10a532948/jsr305-3.0.0.jar:/home/guzuxing/.gradle/caches/modules-2/files-2.1/com.google.truth/truth/0.30/9d591b5a66eda81f0b88cf1c748ab8853d99b18b/truth-0.30.jar:/home/guzuxing/.gradle/caches/modules-2/files-2.1/org.hamcrest/hamcrest-core/1.3/42a25dc3219429f0e5d060061f71acb49bf010a0/hamcrest-core-1.3.jar:/home/guzuxing/.gradle/caches/modules-2/files-2.1/com.google.errorprone/error_prone_annotations/2.0.8/54e2d56cb157df08cbf183149bcf50c9f5151ed4/error_prone_annotations-2.0.8.jar com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 cn.edu.thu.tsmart.integrated.Juliet_476_Test
<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/476/476_1.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
10 SCCs to deal with
SCC(1): [printLine]
 +printLine
SCC(1): [bad1]
 +bad1
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [good1]
 +good1
SCC(1): [main]
 +main
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [printLongLine]
 +printLongLine
<begin of summary store (POINTER_AP)>
Functions [printLongLine, bad1, globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good1, main, printHexCharLine, printIntLine, printLine]
Loops     []
----
function: bad1
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good1
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.381s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N58): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Null Pointer Dereference
At node  : N9
On edge  : N9 -{%intOne = getelementptr inbounds %struct._twoIntsStruct, %struct._twoIntsStruct* %1, i32 0, i32 0}-> N10
Message  : null pointer dereference
> Start from entry function: main, At N58 of Function main
> Entering function: good1, On N106 -> N37 (call good1)
> takes the false branch, At N43 of Function good1
> Leaving function: good1, On N36 -> N60 (Return edge from good1 to main)
> Entering function: bad1, On N60 -> N1 (call bad1)
<Defect> : N9 -> N10: [%intOne = getelementptr inbounds %struct._twoIntsStruct, %struct._twoIntsStruct* %1, i32 0, i32 0]
N9 -> N10: [%intOne = getelementptr inbounds %struct._twoIntsStruct, %struct._twoIntsStruct* %1, i32 0, i32 0] <--
-- end of trace --
=====================================================
CWE_476(Null Pointer Dereference): 1
	[./476_1.c 58] bad1 		[N9 -{%intOne = getelementptr inbounds %struct._twoIntsStruct, %struct._twoIntsStruct* %1, i32 0, i32 0}-> N10]	(null pointer dereference)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/476/476_2.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
10 SCCs to deal with
SCC(1): [printLine]
 +printLine
SCC(1): [bad2]
 +bad2
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [good2]
 +good2
SCC(1): [main]
 +main
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [printLongLine]
 +printLongLine
<begin of summary store (POINTER_AP)>
Functions [bad2, globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good2, main, printHexCharLine, printIntLine, printLine, printLongLine]
Loops     []
----
function: bad2
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good2
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.115s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N174): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Null Pointer Dereference
At node  : N125
On edge  : N125 -{%intOne = getelementptr inbounds %struct._twoIntsStruct, %struct._twoIntsStruct* %1, i32 0, i32 0}-> N126
Message  : null pointer dereference
> Start from entry function: main, At N174 of Function main
> Entering function: good2, On N222 -> N153 (call good2)
> takes the false branch, At N159 of Function good2
> Leaving function: good2, On N152 -> N176 (Return edge from good2 to main)
> Entering function: bad2, On N176 -> N117 (call bad2)
<Defect> : N125 -> N126: [%intOne = getelementptr inbounds %struct._twoIntsStruct, %struct._twoIntsStruct* %1, i32 0, i32 0]
N125 -> N126: [%intOne = getelementptr inbounds %struct._twoIntsStruct, %struct._twoIntsStruct* %1, i32 0, i32 0] <--
-- end of trace --
=====================================================
CWE_476(Null Pointer Dereference): 1
	[./476_2.c 60] bad2 		[N125 -{%intOne = getelementptr inbounds %struct._twoIntsStruct, %struct._twoIntsStruct* %1, i32 0, i32 0}-> N126]	(null pointer dereference)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/476/476_3.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
10 SCCs to deal with
SCC(1): [printLine]
 +printLine
SCC(1): [bad3]
 +bad3
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [good3]
 +good3
SCC(1): [main]
 +main
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [printLongLine]
 +printLongLine
<begin of summary store (POINTER_AP)>
Functions [bad3, globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good3, main, printHexCharLine, printIntLine, printLine, printLongLine]
Loops     []
----
function: bad3
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good3
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.064s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N290): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Null Pointer Dereference
At node  : N241
On edge  : N241 -{%intOne = getelementptr inbounds %struct._twoIntsStruct, %struct._twoIntsStruct* %1, i32 0, i32 0}-> N242
Message  : null pointer dereference
> Start from entry function: main, At N290 of Function main
> Entering function: good3, On N338 -> N269 (call good3)
> takes the false branch, At N275 of Function good3
> Leaving function: good3, On N268 -> N292 (Return edge from good3 to main)
> Entering function: bad3, On N292 -> N233 (call bad3)
<Defect> : N241 -> N242: [%intOne = getelementptr inbounds %struct._twoIntsStruct, %struct._twoIntsStruct* %1, i32 0, i32 0]
N241 -> N242: [%intOne = getelementptr inbounds %struct._twoIntsStruct, %struct._twoIntsStruct* %1, i32 0, i32 0] <--
-- end of trace --
=====================================================
CWE_476(Null Pointer Dereference): 1
	[./476_3.c 60] bad3 		[N241 -{%intOne = getelementptr inbounds %struct._twoIntsStruct, %struct._twoIntsStruct* %1, i32 0, i32 0}-> N242]	(null pointer dereference)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/476/476_4.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
10 SCCs to deal with
SCC(1): [printLine]
 +printLine
SCC(1): [bad4]
 +bad4
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [good4]
 +good4
SCC(1): [main]
 +main
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [printLongLine]
 +printLongLine
<begin of summary store (POINTER_AP)>
Functions [globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good4, main, printHexCharLine, printIntLine, printLine, printLongLine, bad4]
Loops     []
----
function: bad4
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good4
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.032s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N406): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Null Pointer Dereference
At node  : N357
On edge  : N357 -{%intOne = getelementptr inbounds %struct._twoIntsStruct, %struct._twoIntsStruct* %1, i32 0, i32 0}-> N358
Message  : null pointer dereference
> Start from entry function: main, At N406 of Function main
> Entering function: good4, On N454 -> N385 (call good4)
> takes the false branch, At N391 of Function good4
> Leaving function: good4, On N384 -> N408 (Return edge from good4 to main)
> Entering function: bad4, On N408 -> N349 (call bad4)
<Defect> : N357 -> N358: [%intOne = getelementptr inbounds %struct._twoIntsStruct, %struct._twoIntsStruct* %1, i32 0, i32 0]
N357 -> N358: [%intOne = getelementptr inbounds %struct._twoIntsStruct, %struct._twoIntsStruct* %1, i32 0, i32 0] <--
-- end of trace --
=====================================================
CWE_476(Null Pointer Dereference): 1
	[./476_4.c 63] bad4 		[N357 -{%intOne = getelementptr inbounds %struct._twoIntsStruct, %struct._twoIntsStruct* %1, i32 0, i32 0}-> N358]	(null pointer dereference)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/476/476_5.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
10 SCCs to deal with
SCC(1): [printLine]
 +printLine
SCC(1): [bad5]
 +bad5
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [good5]
 +good5
SCC(1): [main]
 +main
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [printLongLine]
 +printLongLine
<begin of summary store (POINTER_AP)>
Functions [globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good5, main, printHexCharLine, printIntLine, printLine, printLongLine, bad5]
Loops     []
----
function: bad5
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good5
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.024s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N536): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Null Pointer Dereference
At node  : N476
On edge  : N476 -{%intOne = getelementptr inbounds %struct._twoIntsStruct, %struct._twoIntsStruct* %2, i32 0, i32 0}-> N477
Message  : null pointer dereference
> Start from entry function: main, At N536 of Function main
> Entering function: good5, On N584 -> N507 (call good5)
> takes the false branch, At N511 of Function good5
> takes the false branch, At N518 of Function good5
> Leaving function: good5, On N506 -> N538 (Return edge from good5 to main)
> Entering function: bad5, On N538 -> N465 (call bad5)
> takes the true branch, At N469 of Function bad5
<Defect> : N476 -> N477: [%intOne = getelementptr inbounds %struct._twoIntsStruct, %struct._twoIntsStruct* %2, i32 0, i32 0]
N476 -> N477: [%intOne = getelementptr inbounds %struct._twoIntsStruct, %struct._twoIntsStruct* %2, i32 0, i32 0] <--
-- end of trace --
=====================================================
CWE_476(Null Pointer Dereference): 1
	[./476_5.c 63] bad5 		[N476 -{%intOne = getelementptr inbounds %struct._twoIntsStruct, %struct._twoIntsStruct* %2, i32 0, i32 0}-> N477]	(null pointer dereference)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/476/476_6.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
10 SCCs to deal with
SCC(1): [printLine]
 +printLine
SCC(1): [bad6]
 +bad6
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [good6]
 +good6
SCC(1): [main]
 +main
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [printLongLine]
 +printLongLine
<begin of summary store (POINTER_AP)>
Functions [globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good6, main, printHexCharLine, printIntLine, printLine, printLongLine, bad6]
Loops     []
----
function: bad6
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good6
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.015s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N655): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Null Pointer Dereference
At node  : N606
On edge  : N606 -{%intOne = getelementptr inbounds %struct._twoIntsStruct, %struct._twoIntsStruct* %1, i32 0, i32 0}-> N607
Message  : null pointer dereference
> Start from entry function: main, At N655 of Function main
> Entering function: good6, On N703 -> N634 (call good6)
> takes the false branch, At N640 of Function good6
> Leaving function: good6, On N633 -> N657 (Return edge from good6 to main)
> Entering function: bad6, On N657 -> N598 (call bad6)
<Defect> : N606 -> N607: [%intOne = getelementptr inbounds %struct._twoIntsStruct, %struct._twoIntsStruct* %1, i32 0, i32 0]
N606 -> N607: [%intOne = getelementptr inbounds %struct._twoIntsStruct, %struct._twoIntsStruct* %1, i32 0, i32 0] <--
-- end of trace --
=====================================================
CWE_476(Null Pointer Dereference): 1
	[./476_6.c 62] bad6 		[N606 -{%intOne = getelementptr inbounds %struct._twoIntsStruct, %struct._twoIntsStruct* %1, i32 0, i32 0}-> N607]	(null pointer dereference)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/476/476_7.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
10 SCCs to deal with
SCC(1): [printLine]
 +printLine
SCC(1): [bad7]
 +bad7
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [good7]
 +good7
SCC(1): [main]
 +main
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [printLongLine]
 +printLongLine
<begin of summary store (POINTER_AP)>
Functions [globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good7, main, printHexCharLine, printIntLine, printLine, printLongLine, bad7]
Loops     []
----
function: bad7
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good7
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.009s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N785): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Null Pointer Dereference
At node  : N725
On edge  : N725 -{%intOne = getelementptr inbounds %struct._twoIntsStruct, %struct._twoIntsStruct* %2, i32 0, i32 0}-> N726
Message  : null pointer dereference
> Start from entry function: main, At N785 of Function main
> Entering function: good7, On N833 -> N756 (call good7)
> takes the false branch, At N760 of Function good7
> takes the false branch, At N767 of Function good7
> Leaving function: good7, On N755 -> N787 (Return edge from good7 to main)
> Entering function: bad7, On N787 -> N714 (call bad7)
> takes the true branch, At N718 of Function bad7
<Defect> : N725 -> N726: [%intOne = getelementptr inbounds %struct._twoIntsStruct, %struct._twoIntsStruct* %2, i32 0, i32 0]
N725 -> N726: [%intOne = getelementptr inbounds %struct._twoIntsStruct, %struct._twoIntsStruct* %2, i32 0, i32 0] <--
-- end of trace --
=====================================================
CWE_476(Null Pointer Dereference): 1
	[./476_7.c 62] bad7 		[N725 -{%intOne = getelementptr inbounds %struct._twoIntsStruct, %struct._twoIntsStruct* %2, i32 0, i32 0}-> N726]	(null pointer dereference)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/476/476_8.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
12 SCCs to deal with
SCC(1): [printLine]
 +printLine
SCC(1): [staticReturnsTrue]
 +staticReturnsTrue
SCC(1): [bad8]
 +bad8
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [staticReturnsFalse]
 +staticReturnsFalse
SCC(1): [good8]
 +good8
SCC(1): [main]
 +main
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [printLongLine]
 +printLongLine
<begin of summary store (POINTER_AP)>
Functions [bad8, globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good8, main, printHexCharLine, printIntLine, printLine, printLongLine, staticReturnsFalse, staticReturnsTrue]
Loops     []
----
function: bad8
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good8
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: staticReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: staticReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.01s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N917): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Null Pointer Dereference
At node  : N857
On edge  : N857 -{%intOne = getelementptr inbounds %struct._twoIntsStruct, %struct._twoIntsStruct* %1, i32 0, i32 0}-> N858
Message  : null pointer dereference
> Start from entry function: main, At N917 of Function main
> Entering function: good8, On N973 -> N888 (call good8)
> Entering function: staticReturnsFalse, On N890 -> N966 (call staticReturnsFalse)
> Leaving function: staticReturnsFalse, On N965 -> N891 (Return edge from staticReturnsFalse to good8)
> takes the false branch, At N892 of Function good8
> takes the false branch, At N899 of Function good8
> Leaving function: good8, On N887 -> N919 (Return edge from good8 to main)
> Entering function: bad8, On N919 -> N846 (call bad8)
> Entering function: staticReturnsTrue, On N848 -> N970 (call staticReturnsTrue)
> Leaving function: staticReturnsTrue, On N969 -> N849 (Return edge from staticReturnsTrue to bad8)
> takes the true branch, At N850 of Function bad8
<Defect> : N857 -> N858: [%intOne = getelementptr inbounds %struct._twoIntsStruct, %struct._twoIntsStruct* %1, i32 0, i32 0]
N857 -> N858: [%intOne = getelementptr inbounds %struct._twoIntsStruct, %struct._twoIntsStruct* %1, i32 0, i32 0] <--
-- end of trace --
=====================================================
CWE_476(Null Pointer Dereference): 1
	[./476_8.c 70] bad8 		[N857 -{%intOne = getelementptr inbounds %struct._twoIntsStruct, %struct._twoIntsStruct* %1, i32 0, i32 0}-> N858]	(null pointer dereference)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/476/476_9.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
10 SCCs to deal with
SCC(1): [printLine]
 +printLine
SCC(1): [bad9]
 +bad9
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [good9]
 +good9
SCC(1): [main]
 +main
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [printLongLine]
 +printLongLine
<begin of summary store (POINTER_AP)>
Functions [globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good9, main, printHexCharLine, printIntLine, printLine, printLongLine, bad9]
Loops     []
----
function: bad9
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good9
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.01s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N1042): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Null Pointer Dereference
At node  : N993
On edge  : N993 -{%intOne = getelementptr inbounds %struct._twoIntsStruct, %struct._twoIntsStruct* %1, i32 0, i32 0}-> N994
Message  : null pointer dereference
> Start from entry function: main, At N1042 of Function main
> Entering function: good9, On N1090 -> N1021 (call good9)
> takes the false branch, At N1027 of Function good9
> Leaving function: good9, On N1020 -> N1044 (Return edge from good9 to main)
> Entering function: bad9, On N1044 -> N985 (call bad9)
<Defect> : N993 -> N994: [%intOne = getelementptr inbounds %struct._twoIntsStruct, %struct._twoIntsStruct* %1, i32 0, i32 0]
N993 -> N994: [%intOne = getelementptr inbounds %struct._twoIntsStruct, %struct._twoIntsStruct* %1, i32 0, i32 0] <--
-- end of trace --
=====================================================
CWE_476(Null Pointer Dereference): 1
	[./476_9.c 60] bad9 		[N993 -{%intOne = getelementptr inbounds %struct._twoIntsStruct, %struct._twoIntsStruct* %1, i32 0, i32 0}-> N994]	(null pointer dereference)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/476/476_10.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
10 SCCs to deal with
SCC(1): [printLine]
 +printLine
SCC(1): [bad10]
 +bad10
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [good10]
 +good10
SCC(1): [main]
 +main
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [printLongLine]
 +printLongLine
<begin of summary store (POINTER_AP)>
Functions [bad10, globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good10, main, printHexCharLine, printIntLine, printLine, printLongLine]
Loops     []
----
function: bad10
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good10
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.021s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N1172): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Null Pointer Dereference
At node  : N1112
On edge  : N1112 -{%intOne = getelementptr inbounds %struct._twoIntsStruct, %struct._twoIntsStruct* %2, i32 0, i32 0}-> N1113
Message  : null pointer dereference
> Start from entry function: main, At N1172 of Function main
> Entering function: good10, On N1220 -> N1143 (call good10)
> takes the false branch, At N1147 of Function good10
> takes the false branch, At N1154 of Function good10
> Leaving function: good10, On N1142 -> N1174 (Return edge from good10 to main)
> Entering function: bad10, On N1174 -> N1101 (call bad10)
> takes the true branch, At N1105 of Function bad10
<Defect> : N1112 -> N1113: [%intOne = getelementptr inbounds %struct._twoIntsStruct, %struct._twoIntsStruct* %2, i32 0, i32 0]
N1112 -> N1113: [%intOne = getelementptr inbounds %struct._twoIntsStruct, %struct._twoIntsStruct* %2, i32 0, i32 0] <--
-- end of trace --
=====================================================
CWE_476(Null Pointer Dereference): 1
	[./476_10.c 60] bad10 		[N1112 -{%intOne = getelementptr inbounds %struct._twoIntsStruct, %struct._twoIntsStruct* %2, i32 0, i32 0}-> N1113]	(null pointer dereference)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/476/476_11.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
10 SCCs to deal with
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [printLine]
 +printLine
SCC(1): [bad11]
 +bad11
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [good11]
 +good11
SCC(1): [main]
 +main
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [printLongLine]
 +printLongLine
<begin of summary store (POINTER_AP)>
Functions [globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good11, main, printHexCharLine, printIntLine, printLine, printLongLine, bad11]
Loops     []
----
function: bad11
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good11
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.011s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N1303): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Null Pointer Dereference
At node  : N1243
On edge  : N1243 -{%intOne = getelementptr inbounds %struct._twoIntsStruct, %struct._twoIntsStruct* %1, i32 0, i32 0}-> N1244
Message  : null pointer dereference
> Start from entry function: main, At N1303 of Function main
> Entering function: good11, On N1351 -> N1274 (call good11)
> Entering function: globalReturnsFalse, On N1276 -> N1260 (call globalReturnsFalse)
> Leaving function: globalReturnsFalse, On N1259 -> N1277 (Return edge from globalReturnsFalse to good11)
> takes the false branch, At N1278 of Function good11
> takes the false branch, At N1285 of Function good11
> Leaving function: good11, On N1273 -> N1305 (Return edge from good11 to main)
> Entering function: bad11, On N1305 -> N1232 (call bad11)
> Entering function: globalReturnsTrue, On N1234 -> N1264 (call globalReturnsTrue)
> Leaving function: globalReturnsTrue, On N1263 -> N1235 (Return edge from globalReturnsTrue to bad11)
> takes the true branch, At N1236 of Function bad11
<Defect> : N1243 -> N1244: [%intOne = getelementptr inbounds %struct._twoIntsStruct, %struct._twoIntsStruct* %1, i32 0, i32 0]
N1243 -> N1244: [%intOne = getelementptr inbounds %struct._twoIntsStruct, %struct._twoIntsStruct* %1, i32 0, i32 0] <--
-- end of trace --
=====================================================
CWE_476(Null Pointer Dereference): 1
	[./476_11.c 60] bad11 		[N1243 -{%intOne = getelementptr inbounds %struct._twoIntsStruct, %struct._twoIntsStruct* %1, i32 0, i32 0}-> N1244]	(null pointer dereference)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/476/476_12.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
10 SCCs to deal with
SCC(1): [printLine]
 +printLine
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [bad12]
 +bad12
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [good12]
 +good12
SCC(1): [main]
 +main
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [printLongLine]
 +printLongLine
<begin of summary store (POINTER_AP)>
Functions [printLongLine, bad12, globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good12, main, printHexCharLine, printIntLine, printLine]
Loops     []
----
function: bad12
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good12
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.01s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N1468): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Null Pointer Dereference
At node  : N1375
On edge  : N1375 -{%intOne = getelementptr inbounds %struct._twoIntsStruct, %struct._twoIntsStruct* %1, i32 0, i32 0}-> N1376
Message  : null pointer dereference
> Start from entry function: main, At N1468 of Function main
> Entering function: good12, On N1516 -> N1423 (call good12)
> Entering function: globalReturnsTrueOrFalse, On N1426 -> N1417 (call globalReturnsTrueOrFalse)
> Leaving function: globalReturnsTrueOrFalse, On N1416 -> N1427 (Return edge from globalReturnsTrueOrFalse to good12)
> takes the false branch, At N1428 of Function good12
> takes the false branch, At N1446 of Function good12
> Leaving function: good12, On N1422 -> N1470 (Return edge from good12 to main)
> Entering function: bad12, On N1470 -> N1363 (call bad12)
> Entering function: globalReturnsTrueOrFalse, On N1366 -> N1417 (call globalReturnsTrueOrFalse)
> Leaving function: globalReturnsTrueOrFalse, On N1416 -> N1367 (Return edge from globalReturnsTrueOrFalse to bad12)
> takes the true branch, At N1368 of Function bad12
<Defect> : N1375 -> N1376: [%intOne = getelementptr inbounds %struct._twoIntsStruct, %struct._twoIntsStruct* %1, i32 0, i32 0]
N1375 -> N1376: [%intOne = getelementptr inbounds %struct._twoIntsStruct, %struct._twoIntsStruct* %1, i32 0, i32 0] <--
-- end of trace --
=====================================================
CWE_476(Null Pointer Dereference): 1
	[./476_12.c 60] bad12 		[N1375 -{%intOne = getelementptr inbounds %struct._twoIntsStruct, %struct._twoIntsStruct* %1, i32 0, i32 0}-> N1376]	(null pointer dereference)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/476/476_13.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
10 SCCs to deal with
SCC(1): [printLine]
 +printLine
SCC(1): [bad13]
 +bad13
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [good13]
 +good13
SCC(1): [main]
 +main
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [printLongLine]
 +printLongLine
<begin of summary store (POINTER_AP)>
Functions [bad13, globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good13, main, printHexCharLine, printIntLine, printLine, printLongLine]
Loops     []
----
function: bad13
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good13
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.012s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N1584): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Null Pointer Dereference
At node  : N1535
On edge  : N1535 -{%intOne = getelementptr inbounds %struct._twoIntsStruct, %struct._twoIntsStruct* %1, i32 0, i32 0}-> N1536
Message  : null pointer dereference
> Start from entry function: main, At N1584 of Function main
> Entering function: good13, On N1632 -> N1563 (call good13)
> takes the false branch, At N1569 of Function good13
> Leaving function: good13, On N1562 -> N1586 (Return edge from good13 to main)
> Entering function: bad13, On N1586 -> N1527 (call bad13)
<Defect> : N1535 -> N1536: [%intOne = getelementptr inbounds %struct._twoIntsStruct, %struct._twoIntsStruct* %1, i32 0, i32 0]
N1535 -> N1536: [%intOne = getelementptr inbounds %struct._twoIntsStruct, %struct._twoIntsStruct* %1, i32 0, i32 0] <--
-- end of trace --
=====================================================
CWE_476(Null Pointer Dereference): 1
	[./476_13.c 60] bad13 		[N1535 -{%intOne = getelementptr inbounds %struct._twoIntsStruct, %struct._twoIntsStruct* %1, i32 0, i32 0}-> N1536]	(null pointer dereference)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/476/476_14.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
10 SCCs to deal with
SCC(1): [printLine]
 +printLine
SCC(1): [bad14]
 +bad14
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [good14]
 +good14
SCC(1): [main]
 +main
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [printLongLine]
 +printLongLine
<begin of summary store (POINTER_AP)>
Functions [bad14, globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good14, main, printHexCharLine, printIntLine, printLine, printLongLine]
Loops     []
----
function: bad14
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good14
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.008s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N1714): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Null Pointer Dereference
At node  : N1654
On edge  : N1654 -{%intOne = getelementptr inbounds %struct._twoIntsStruct, %struct._twoIntsStruct* %2, i32 0, i32 0}-> N1655
Message  : null pointer dereference
> Start from entry function: main, At N1714 of Function main
> Entering function: good14, On N1762 -> N1685 (call good14)
> takes the false branch, At N1689 of Function good14
> takes the false branch, At N1696 of Function good14
> Leaving function: good14, On N1684 -> N1716 (Return edge from good14 to main)
> Entering function: bad14, On N1716 -> N1643 (call bad14)
> takes the true branch, At N1647 of Function bad14
<Defect> : N1654 -> N1655: [%intOne = getelementptr inbounds %struct._twoIntsStruct, %struct._twoIntsStruct* %2, i32 0, i32 0]
N1654 -> N1655: [%intOne = getelementptr inbounds %struct._twoIntsStruct, %struct._twoIntsStruct* %2, i32 0, i32 0] <--
-- end of trace --
=====================================================
CWE_476(Null Pointer Dereference): 1
	[./476_14.c 60] bad14 		[N1654 -{%intOne = getelementptr inbounds %struct._twoIntsStruct, %struct._twoIntsStruct* %2, i32 0, i32 0}-> N1655]	(null pointer dereference)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/476/476_15.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
10 SCCs to deal with
SCC(1): [printLine]
 +printLine
SCC(1): [bad15]
 +bad15
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [good15]
 +good15
SCC(1): [main]
 +main
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [printLongLine]
 +printLongLine
<begin of summary store (POINTER_AP)>
Functions [bad15, globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good15, main, printHexCharLine, printIntLine, printLine, printLongLine]
Loops     []
----
function: bad15
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good15
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.008s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N1831): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Null Pointer Dereference
At node  : N1782
On edge  : N1782 -{%intOne = getelementptr inbounds %struct._twoIntsStruct, %struct._twoIntsStruct* %1, i32 0, i32 0}-> N1783
Message  : null pointer dereference
> Start from entry function: main, At N1831 of Function main
> Entering function: good15, On N1879 -> N1810 (call good15)
> takes the false branch, At N1816 of Function good15
> Leaving function: good15, On N1809 -> N1833 (Return edge from good15 to main)
> Entering function: bad15, On N1833 -> N1774 (call bad15)
<Defect> : N1782 -> N1783: [%intOne = getelementptr inbounds %struct._twoIntsStruct, %struct._twoIntsStruct* %1, i32 0, i32 0]
N1782 -> N1783: [%intOne = getelementptr inbounds %struct._twoIntsStruct, %struct._twoIntsStruct* %1, i32 0, i32 0] <--
-- end of trace --
=====================================================
CWE_476(Null Pointer Dereference): 1
	[./476_15.c 61] bad15 		[N1782 -{%intOne = getelementptr inbounds %struct._twoIntsStruct, %struct._twoIntsStruct* %1, i32 0, i32 0}-> N1783]	(null pointer dereference)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/476/476_16.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
10 SCCs to deal with
SCC(1): [printLine]
 +printLine
SCC(1): [bad16]
 +bad16
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [good16]
 +good16
SCC(1): [main]
 +main
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [printLongLine]
 +printLongLine
<begin of summary store (POINTER_AP)>
Functions [bad16, globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good16, main, printHexCharLine, printIntLine, printLine, printLongLine]
Loops     []
----
function: bad16
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good16
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.01s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N1951): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Null Pointer Dereference
At node  : N1899
On edge  : N1899 -{%intOne = getelementptr inbounds %struct._twoIntsStruct, %struct._twoIntsStruct* %1, i32 0, i32 0}-> N1900
Message  : null pointer dereference
> Start from entry function: main, At N1951 of Function main
> Entering function: good16, On N1999 -> N1928 (call good16)
> takes the false branch, At N1935 of Function good16
> Leaving function: good16, On N1927 -> N1953 (Return edge from good16 to main)
> Entering function: bad16, On N1953 -> N1890 (call bad16)
<Defect> : N1899 -> N1900: [%intOne = getelementptr inbounds %struct._twoIntsStruct, %struct._twoIntsStruct* %1, i32 0, i32 0]
N1899 -> N1900: [%intOne = getelementptr inbounds %struct._twoIntsStruct, %struct._twoIntsStruct* %1, i32 0, i32 0] <--
-- end of trace --
=====================================================
CWE_476(Null Pointer Dereference): 1
	[./476_16.c 60] bad16 		[N1899 -{%intOne = getelementptr inbounds %struct._twoIntsStruct, %struct._twoIntsStruct* %1, i32 0, i32 0}-> N1900]	(null pointer dereference)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/476/476_17.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
10 SCCs to deal with
SCC(1): [printLine]
 +printLine
SCC(1): [bad17]
 +bad17
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [good17]
 +good17
SCC(1): [main]
 +main
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [printLongLine]
 +printLongLine
<begin of summary store (POINTER_AP)>
Functions [globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good17, main, printHexCharLine, printIntLine, printLine, printLongLine, bad17]
Loops     [N2082, N2035]
----
function: bad17
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good17
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
loop N2035 in bad17: 
N2016 -> P+ = [], P- = [] Point-To: L(bad17::twoIntsStructPointer) -> [N]
N2018 -> P+ = [], P- = [] Point-To: L(bad17::twoIntsStructPointer) -> [N]
----
loop N2082 in good17: 
N2066 -> P+ = [], P- = [] Point-To: L(good17::twoIntsStructPointer) -> [N]
N2068 -> P+ = [], P- = [] Point-To: L(good17::twoIntsStructPointer) -> [N]
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.018s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N2095): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Null Pointer Dereference
At node  : N2025
On edge  : N2025 -{%intOne = getelementptr inbounds %struct._twoIntsStruct, %struct._twoIntsStruct* %2, i32 0, i32 0}-> N2026
Message  : null pointer dereference
> Start from entry function: main, At N2095 of Function main
> Entering function: good17, On N2143 -> N2060 (call good17)
> takes the true branch, At N2068 of Function good17
> takes the false branch, At N2073 of Function good17
> takes the false branch, At N2068 of Function good17
> Leaving function: good17, On N2059 -> N2097 (Return edge from good17 to main)
> Entering function: bad17, On N2097 -> N2010 (call bad17)
> takes the true branch, At N2018 of Function bad17
<Defect> : N2025 -> N2026: [%intOne = getelementptr inbounds %struct._twoIntsStruct, %struct._twoIntsStruct* %2, i32 0, i32 0]
N2025 -> N2026: [%intOne = getelementptr inbounds %struct._twoIntsStruct, %struct._twoIntsStruct* %2, i32 0, i32 0] <--
-- end of trace --
=====================================================
CWE_476(Null Pointer Dereference): 1
	[./476_17.c 61] bad17 		[N2025 -{%intOne = getelementptr inbounds %struct._twoIntsStruct, %struct._twoIntsStruct* %2, i32 0, i32 0}-> N2026]	(null pointer dereference)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/476/476_18.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
10 SCCs to deal with
SCC(1): [printLine]
 +printLine
SCC(1): [bad18]
 +bad18
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [good18]
 +good18
SCC(1): [main]
 +main
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [printLongLine]
 +printLongLine
<begin of summary store (POINTER_AP)>
Functions [bad18, globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good18, main, printHexCharLine, printIntLine, printLine, printLongLine]
Loops     []
----
function: bad18
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good18
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.01s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N2213): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Null Pointer Dereference
At node  : N2163
On edge  : N2163 -{%intOne = getelementptr inbounds %struct._twoIntsStruct, %struct._twoIntsStruct* %1, i32 0, i32 0}-> N2164
Message  : null pointer dereference
> Start from entry function: main, At N2213 of Function main
> Entering function: good18, On N2261 -> N2191 (call good18)
> takes the false branch, At N2198 of Function good18
> Leaving function: good18, On N2190 -> N2215 (Return edge from good18 to main)
> Entering function: bad18, On N2215 -> N2154 (call bad18)
<Defect> : N2163 -> N2164: [%intOne = getelementptr inbounds %struct._twoIntsStruct, %struct._twoIntsStruct* %1, i32 0, i32 0]
N2163 -> N2164: [%intOne = getelementptr inbounds %struct._twoIntsStruct, %struct._twoIntsStruct* %1, i32 0, i32 0] <--
-- end of trace --
=====================================================
CWE_476(Null Pointer Dereference): 1
	[./476_18.c 60] bad18 		[N2163 -{%intOne = getelementptr inbounds %struct._twoIntsStruct, %struct._twoIntsStruct* %1, i32 0, i32 0}-> N2164]	(null pointer dereference)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/476/476_19.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
10 SCCs to deal with
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [bad19]
 +bad19
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [good19]
 +good19
SCC(1): [main]
 +main
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [printLine]
 +printLine
SCC(1): [printLongLine]
 +printLongLine
<begin of summary store (POINTER_AP)>
Functions [globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good19, main, printHexCharLine, printIntLine, printLine, printLongLine, bad19]
Loops     []
----
function: bad19
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good19
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.006s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N2309): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Null Pointer Dereference
At node  : N2277
On edge  : N2277 -{%1 = load i32, i32* %0, align 4}-> N2278
Message  : null pointer dereference
> Start from entry function: main, At N2309 of Function main
> Entering function: good19, On N2357 -> N2296 (call good19)
> Entering function: printIntLine, On N2305 -> N2325 (call printIntLine)
> Leaving function: printIntLine, On N2324 -> N2306 (Return edge from printIntLine to good19)
> Leaving function: good19, On N2295 -> N2311 (Return edge from good19 to main)
> Entering function: bad19, On N2311 -> N2272 (call bad19)
<Defect> : N2277 -> N2278: [%1 = load i32, i32* %0, align 4]
N2277 -> N2278: [%1 = load i32, i32* %0, align 4] <--
-- end of trace --
=====================================================
CWE_476(Null Pointer Dereference): 1
	[./476_19.c 58] bad19 		[N2277 -{%1 = load i32, i32* %0, align 4}-> N2278]	(null pointer dereference)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/476/476_20.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
10 SCCs to deal with
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [bad20]
 +bad20
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [printLine]
 +printLine
SCC(1): [good20]
 +good20
SCC(1): [main]
 +main
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [printLongLine]
 +printLongLine
<begin of summary store (POINTER_AP)>
Functions [main, printHexCharLine, printIntLine, printLine, printLongLine, bad20, globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good20]
Loops     []
----
function: bad20
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good20
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.008s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N2409): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Null Pointer Dereference
At node  : N2372
On edge  : N2372 -{%1 = load i32, i32* %0, align 4}-> N2373
Message  : null pointer dereference
> Start from entry function: main, At N2409 of Function main
> Entering function: good20, On N2457 -> N2391 (call good20)
> takes the false branch, At N2397 of Function good20
> Entering function: printLine, On N2407 -> N2434 (call printLine)
> takes the true branch, At N2440 of Function printLine
> Leaving function: printLine, On N2433 -> N2404 (Return edge from printLine to good20)
> Leaving function: good20, On N2390 -> N2411 (Return edge from good20 to main)
> Entering function: bad20, On N2411 -> N2367 (call bad20)
<Defect> : N2372 -> N2373: [%1 = load i32, i32* %0, align 4]
N2372 -> N2373: [%1 = load i32, i32* %0, align 4] <--
-- end of trace --
=====================================================
CWE_476(Null Pointer Dereference): 1
	[./476_20.c 63] bad20 		[N2372 -{%1 = load i32, i32* %0, align 4}-> N2373]	(null pointer dereference)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/476/476_21.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
10 SCCs to deal with
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [bad21]
 +bad21
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [printLine]
 +printLine
SCC(1): [good21]
 +good21
SCC(1): [main]
 +main
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [printLongLine]
 +printLongLine
<begin of summary store (POINTER_AP)>
Functions [printLine, printLongLine, bad21, globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good21, main, printHexCharLine, printIntLine]
Loops     []
----
function: bad21
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good21
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.007s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N2510): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Null Pointer Dereference
At node  : N2473
On edge  : N2473 -{%1 = load i32, i32* %0, align 4}-> N2474
Message  : null pointer dereference
> Start from entry function: main, At N2510 of Function main
> Entering function: good21, On N2558 -> N2492 (call good21)
> takes the false branch, At N2498 of Function good21
> Entering function: printLine, On N2508 -> N2535 (call printLine)
> takes the true branch, At N2541 of Function printLine
> Leaving function: printLine, On N2534 -> N2505 (Return edge from printLine to good21)
> Leaving function: good21, On N2491 -> N2512 (Return edge from good21 to main)
> Entering function: bad21, On N2512 -> N2468 (call bad21)
<Defect> : N2473 -> N2474: [%1 = load i32, i32* %0, align 4]
N2473 -> N2474: [%1 = load i32, i32* %0, align 4] <--
-- end of trace --
=====================================================
CWE_476(Null Pointer Dereference): 1
	[./476_21.c 63] bad21 		[N2473 -{%1 = load i32, i32* %0, align 4}-> N2474]	(null pointer dereference)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/476/476_22.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
10 SCCs to deal with
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [bad22]
 +bad22
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [printLine]
 +printLine
SCC(1): [good22]
 +good22
SCC(1): [main]
 +main
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [printLongLine]
 +printLongLine
<begin of summary store (POINTER_AP)>
Functions [bad22, globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good22, main, printHexCharLine, printIntLine, printLine, printLongLine]
Loops     []
----
function: bad22
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good22
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.006s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N2611): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Null Pointer Dereference
At node  : N2574
On edge  : N2574 -{%1 = load i32, i32* %0, align 4}-> N2575
Message  : null pointer dereference
> Start from entry function: main, At N2611 of Function main
> Entering function: good22, On N2659 -> N2593 (call good22)
> takes the false branch, At N2599 of Function good22
> Entering function: printLine, On N2609 -> N2636 (call printLine)
> takes the true branch, At N2642 of Function printLine
> Leaving function: printLine, On N2635 -> N2606 (Return edge from printLine to good22)
> Leaving function: good22, On N2592 -> N2613 (Return edge from good22 to main)
> Entering function: bad22, On N2613 -> N2569 (call bad22)
<Defect> : N2574 -> N2575: [%1 = load i32, i32* %0, align 4]
N2574 -> N2575: [%1 = load i32, i32* %0, align 4] <--
-- end of trace --
=====================================================
CWE_476(Null Pointer Dereference): 1
	[./476_22.c 66] bad22 		[N2574 -{%1 = load i32, i32* %0, align 4}-> N2575]	(null pointer dereference)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/476/476_23.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
10 SCCs to deal with
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [bad23]
 +bad23
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [printLine]
 +printLine
SCC(1): [good23]
 +good23
SCC(1): [main]
 +main
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [printLongLine]
 +printLongLine
<begin of summary store (POINTER_AP)>
Functions [bad23, globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good23, main, printHexCharLine, printIntLine, printLine, printLongLine]
Loops     []
----
function: bad23
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good23
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.007s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N2738): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Null Pointer Dereference
At node  : N2682
On edge  : N2682 -{%3 = load i32, i32* %2, align 4}-> N2683
Message  : null pointer dereference
> Start from entry function: main, At N2738 of Function main
> Entering function: good23, On N2786 -> N2706 (call good23)
> takes the true branch, At N2711 of Function good23
> takes the false branch, At N2716 of Function good23
> takes the false branch, At N2721 of Function good23
> Entering function: printLine, On N2736 -> N2763 (call printLine)
> takes the true branch, At N2769 of Function printLine
> Leaving function: printLine, On N2762 -> N2729 (Return edge from printLine to good23)
> Leaving function: good23, On N2705 -> N2740 (Return edge from good23 to main)
> Entering function: bad23, On N2740 -> N2670 (call bad23)
> takes the true branch, At N2675 of Function bad23
> takes the true branch, At N2680 of Function bad23
<Defect> : N2682 -> N2683: [%3 = load i32, i32* %2, align 4]
N2682 -> N2683: [%3 = load i32, i32* %2, align 4] <--
-- end of trace --
=====================================================
CWE_476(Null Pointer Dereference): 1
	[./476_23.c 66] bad23 		[N2682 -{%3 = load i32, i32* %2, align 4}-> N2683]	(null pointer dereference)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/476/476_24.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
10 SCCs to deal with
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [bad24]
 +bad24
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [printLine]
 +printLine
SCC(1): [good24]
 +good24
SCC(1): [main]
 +main
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [printLongLine]
 +printLongLine
<begin of summary store (POINTER_AP)>
Functions [bad24, globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good24, main, printHexCharLine, printIntLine, printLine, printLongLine]
Loops     []
----
function: bad24
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good24
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.005s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N2842): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Null Pointer Dereference
At node  : N2805
On edge  : N2805 -{%1 = load i32, i32* %0, align 4}-> N2806
Message  : null pointer dereference
> Start from entry function: main, At N2842 of Function main
> Entering function: good24, On N2890 -> N2824 (call good24)
> takes the false branch, At N2830 of Function good24
> Entering function: printLine, On N2840 -> N2867 (call printLine)
> takes the true branch, At N2873 of Function printLine
> Leaving function: printLine, On N2866 -> N2837 (Return edge from printLine to good24)
> Leaving function: good24, On N2823 -> N2844 (Return edge from good24 to main)
> Entering function: bad24, On N2844 -> N2800 (call bad24)
<Defect> : N2805 -> N2806: [%1 = load i32, i32* %0, align 4]
N2805 -> N2806: [%1 = load i32, i32* %0, align 4] <--
-- end of trace --
=====================================================
CWE_476(Null Pointer Dereference): 1
	[./476_24.c 65] bad24 		[N2805 -{%1 = load i32, i32* %0, align 4}-> N2806]	(null pointer dereference)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/476/476_25.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
10 SCCs to deal with
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [bad25]
 +bad25
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [printLine]
 +printLine
SCC(1): [good25]
 +good25
SCC(1): [main]
 +main
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [printLongLine]
 +printLongLine
<begin of summary store (POINTER_AP)>
Functions [globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good25, main, printHexCharLine, printIntLine, printLine, printLongLine, bad25]
Loops     []
----
function: bad25
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good25
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.005s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N2969): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Null Pointer Dereference
At node  : N2913
On edge  : N2913 -{%3 = load i32, i32* %2, align 4}-> N2914
Message  : null pointer dereference
> Start from entry function: main, At N2969 of Function main
> Entering function: good25, On N3017 -> N2937 (call good25)
> takes the true branch, At N2942 of Function good25
> takes the false branch, At N2947 of Function good25
> takes the false branch, At N2952 of Function good25
> Entering function: printLine, On N2967 -> N2994 (call printLine)
> takes the true branch, At N3000 of Function printLine
> Leaving function: printLine, On N2993 -> N2960 (Return edge from printLine to good25)
> Leaving function: good25, On N2936 -> N2971 (Return edge from good25 to main)
> Entering function: bad25, On N2971 -> N2901 (call bad25)
> takes the true branch, At N2906 of Function bad25
> takes the true branch, At N2911 of Function bad25
<Defect> : N2913 -> N2914: [%3 = load i32, i32* %2, align 4]
N2913 -> N2914: [%3 = load i32, i32* %2, align 4] <--
-- end of trace --
=====================================================
CWE_476(Null Pointer Dereference): 1
	[./476_25.c 65] bad25 		[N2913 -{%3 = load i32, i32* %2, align 4}-> N2914]	(null pointer dereference)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/476/476_26.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
12 SCCs to deal with
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [staticReturnsTrue]
 +staticReturnsTrue
SCC(1): [bad26]
 +bad26
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [printLine]
 +printLine
SCC(1): [staticReturnsFalse]
 +staticReturnsFalse
SCC(1): [good26]
 +good26
SCC(1): [main]
 +main
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [printLongLine]
 +printLongLine
<begin of summary store (POINTER_AP)>
Functions [globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good26, main, printHexCharLine, printIntLine, printLine, printLongLine, staticReturnsFalse, staticReturnsTrue, bad26]
Loops     []
----
function: bad26
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good26
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: staticReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: staticReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.03s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N3098): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Null Pointer Dereference
At node  : N3042
On edge  : N3042 -{%1 = load i32, i32* %0, align 4}-> N3043
Message  : null pointer dereference
> Start from entry function: main, At N3098 of Function main
> Entering function: good26, On N3154 -> N3066 (call good26)
> Entering function: staticReturnsTrue, On N3069 -> N3151 (call staticReturnsTrue)
> Leaving function: staticReturnsTrue, On N3150 -> N3070 (Return edge from staticReturnsTrue to good26)
> takes the true branch, At N3071 of Function good26
> Entering function: staticReturnsFalse, On N3074 -> N3147 (call staticReturnsFalse)
> Leaving function: staticReturnsFalse, On N3146 -> N3075 (Return edge from staticReturnsFalse to good26)
> takes the false branch, At N3076 of Function good26
> takes the false branch, At N3081 of Function good26
> Entering function: printLine, On N3096 -> N3123 (call printLine)
> takes the true branch, At N3129 of Function printLine
> Leaving function: printLine, On N3122 -> N3089 (Return edge from printLine to good26)
> Leaving function: good26, On N3065 -> N3100 (Return edge from good26 to main)
> Entering function: bad26, On N3100 -> N3030 (call bad26)
> Entering function: staticReturnsTrue, On N3033 -> N3151 (call staticReturnsTrue)
> Leaving function: staticReturnsTrue, On N3150 -> N3034 (Return edge from staticReturnsTrue to bad26)
> takes the true branch, At N3035 of Function bad26
> Entering function: staticReturnsTrue, On N3038 -> N3151 (call staticReturnsTrue)
> Leaving function: staticReturnsTrue, On N3150 -> N3039 (Return edge from staticReturnsTrue to bad26)
> takes the true branch, At N3040 of Function bad26
<Defect> : N3042 -> N3043: [%1 = load i32, i32* %0, align 4]
N3042 -> N3043: [%1 = load i32, i32* %0, align 4] <--
-- end of trace --
=====================================================
CWE_476(Null Pointer Dereference): 1
	[./476_26.c 73] bad26 		[N3042 -{%1 = load i32, i32* %0, align 4}-> N3043]	(null pointer dereference)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/476/476_27.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
10 SCCs to deal with
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [bad27]
 +bad27
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [printLine]
 +printLine
SCC(1): [good27]
 +good27
SCC(1): [main]
 +main
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [printLongLine]
 +printLongLine
<begin of summary store (POINTER_AP)>
Functions [globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good27, main, printHexCharLine, printIntLine, printLine, printLongLine, bad27]
Loops     []
----
function: bad27
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good27
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.008s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N3208): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Null Pointer Dereference
At node  : N3171
On edge  : N3171 -{%1 = load i32, i32* %0, align 4}-> N3172
Message  : null pointer dereference
> Start from entry function: main, At N3208 of Function main
> Entering function: good27, On N3256 -> N3190 (call good27)
> takes the false branch, At N3196 of Function good27
> Entering function: printLine, On N3206 -> N3233 (call printLine)
> takes the true branch, At N3239 of Function printLine
> Leaving function: printLine, On N3232 -> N3203 (Return edge from printLine to good27)
> Leaving function: good27, On N3189 -> N3210 (Return edge from good27 to main)
> Entering function: bad27, On N3210 -> N3166 (call bad27)
<Defect> : N3171 -> N3172: [%1 = load i32, i32* %0, align 4]
N3171 -> N3172: [%1 = load i32, i32* %0, align 4] <--
-- end of trace --
=====================================================
CWE_476(Null Pointer Dereference): 1
	[./476_27.c 63] bad27 		[N3171 -{%1 = load i32, i32* %0, align 4}-> N3172]	(null pointer dereference)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/476/476_28.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
10 SCCs to deal with
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [bad28]
 +bad28
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [printLine]
 +printLine
SCC(1): [good28]
 +good28
SCC(1): [main]
 +main
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [printLongLine]
 +printLongLine
<begin of summary store (POINTER_AP)>
Functions [globalReturnsTrueOrFalse, good28, main, printHexCharLine, printIntLine, printLine, printLongLine, bad28, globalReturnsFalse, globalReturnsTrue]
Loops     []
----
function: bad28
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good28
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.005s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N3335): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Null Pointer Dereference
At node  : N3279
On edge  : N3279 -{%3 = load i32, i32* %2, align 4}-> N3280
Message  : null pointer dereference
> Start from entry function: main, At N3335 of Function main
> Entering function: good28, On N3383 -> N3303 (call good28)
> takes the true branch, At N3308 of Function good28
> takes the false branch, At N3313 of Function good28
> takes the false branch, At N3318 of Function good28
> Entering function: printLine, On N3333 -> N3360 (call printLine)
> takes the true branch, At N3366 of Function printLine
> Leaving function: printLine, On N3359 -> N3326 (Return edge from printLine to good28)
> Leaving function: good28, On N3302 -> N3337 (Return edge from good28 to main)
> Entering function: bad28, On N3337 -> N3267 (call bad28)
> takes the true branch, At N3272 of Function bad28
> takes the true branch, At N3277 of Function bad28
<Defect> : N3279 -> N3280: [%3 = load i32, i32* %2, align 4]
N3279 -> N3280: [%3 = load i32, i32* %2, align 4] <--
-- end of trace --
=====================================================
CWE_476(Null Pointer Dereference): 1
	[./476_28.c 63] bad28 		[N3279 -{%3 = load i32, i32* %2, align 4}-> N3280]	(null pointer dereference)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/476/476_29.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
10 SCCs to deal with
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [bad29]
 +bad29
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [printLine]
 +printLine
SCC(1): [good29]
 +good29
SCC(1): [main]
 +main
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [printLongLine]
 +printLongLine
<begin of summary store (POINTER_AP)>
Functions [globalReturnsTrueOrFalse, good29, main, printHexCharLine, printIntLine, printLine, printLongLine, bad29, globalReturnsFalse, globalReturnsTrue]
Loops     []
----
function: bad29
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good29
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.005s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N3463): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Null Pointer Dereference
At node  : N3407
On edge  : N3407 -{%1 = load i32, i32* %0, align 4}-> N3408
Message  : null pointer dereference
> Start from entry function: main, At N3463 of Function main
> Entering function: good29, On N3511 -> N3431 (call good29)
> Entering function: globalReturnsTrue, On N3434 -> N3421 (call globalReturnsTrue)
> Leaving function: globalReturnsTrue, On N3420 -> N3435 (Return edge from globalReturnsTrue to good29)
> takes the true branch, At N3436 of Function good29
> Entering function: globalReturnsFalse, On N3439 -> N3417 (call globalReturnsFalse)
> Leaving function: globalReturnsFalse, On N3416 -> N3440 (Return edge from globalReturnsFalse to good29)
> takes the false branch, At N3441 of Function good29
> takes the false branch, At N3446 of Function good29
> Entering function: printLine, On N3461 -> N3488 (call printLine)
> takes the true branch, At N3494 of Function printLine
> Leaving function: printLine, On N3487 -> N3454 (Return edge from printLine to good29)
> Leaving function: good29, On N3430 -> N3465 (Return edge from good29 to main)
> Entering function: bad29, On N3465 -> N3395 (call bad29)
> Entering function: globalReturnsTrue, On N3398 -> N3421 (call globalReturnsTrue)
> Leaving function: globalReturnsTrue, On N3420 -> N3399 (Return edge from globalReturnsTrue to bad29)
> takes the true branch, At N3400 of Function bad29
> Entering function: globalReturnsTrue, On N3403 -> N3421 (call globalReturnsTrue)
> Leaving function: globalReturnsTrue, On N3420 -> N3404 (Return edge from globalReturnsTrue to bad29)
> takes the true branch, At N3405 of Function bad29
<Defect> : N3407 -> N3408: [%1 = load i32, i32* %0, align 4]
N3407 -> N3408: [%1 = load i32, i32* %0, align 4] <--
-- end of trace --
=====================================================
CWE_476(Null Pointer Dereference): 1
	[./476_29.c 63] bad29 		[N3407 -{%1 = load i32, i32* %0, align 4}-> N3408]	(null pointer dereference)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/476/476_30.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
10 SCCs to deal with
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [printLine]
 +printLine
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [bad30]
 +bad30
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [good30]
 +good30
SCC(1): [main]
 +main
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [printLongLine]
 +printLongLine
<begin of summary store (POINTER_AP)>
Functions [globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good30, main, printHexCharLine, printIntLine, printLine, printLongLine, bad30]
Loops     []
----
function: bad30
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good30
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.006s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N3620): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Use of Uninitialized Variable
At node  : N3540
On edge  : N3540 -{%1 = load i32, i32* %0, align 4}-> N3541
Message  : use of uninitialized variable
> Start from entry function: main, At N3620 of Function main
> Entering function: good30, On N3668 -> N3576 (call good30)
> Entering function: globalReturnsTrueOrFalse, On N3579 -> N3570 (call globalReturnsTrueOrFalse)
> Leaving function: globalReturnsTrueOrFalse, On N3569 -> N3580 (Return edge from globalReturnsTrueOrFalse to good30)
> takes the true branch, At N3581 of Function good30
> Entering function: globalReturnsTrueOrFalse, On N3586 -> N3570 (call globalReturnsTrueOrFalse)
> Leaving function: globalReturnsTrueOrFalse, On N3569 -> N3587 (Return edge from globalReturnsTrueOrFalse to good30)
> takes the false branch, At N3588 of Function good30
> takes the false branch, At N3601 of Function good30
> Entering function: printLine, On N3618 -> N3645 (call printLine)
> takes the true branch, At N3651 of Function printLine
> Leaving function: printLine, On N3644 -> N3609 (Return edge from printLine to good30)
> Leaving function: good30, On N3575 -> N3622 (Return edge from good30 to main)
> Entering function: bad30, On N3622 -> N3523 (call bad30)
> Entering function: globalReturnsTrueOrFalse, On N3527 -> N3570 (call globalReturnsTrueOrFalse)
> Leaving function: globalReturnsTrueOrFalse, On N3569 -> N3528 (Return edge from globalReturnsTrueOrFalse to bad30)
> takes the true branch, At N3529 of Function bad30
> Entering function: globalReturnsTrueOrFalse, On N3536 -> N3570 (call globalReturnsTrueOrFalse)
> Leaving function: globalReturnsTrueOrFalse, On N3569 -> N3537 (Return edge from globalReturnsTrueOrFalse to bad30)
> takes the true branch, At N3538 of Function bad30
<Defect> : N3540 -> N3541: [%1 = load i32, i32* %0, align 4]
N3540 -> N3541: [%1 = load i32, i32* %0, align 4] <--
-- end of trace --
-- start of trace --
Weakness : Null Pointer Dereference
At node  : N3540
On edge  : N3540 -{%1 = load i32, i32* %0, align 4}-> N3541
Message  : null pointer dereference
> Start from entry function: main, At N3620 of Function main
> Entering function: good30, On N3668 -> N3576 (call good30)
> Entering function: globalReturnsTrueOrFalse, On N3579 -> N3570 (call globalReturnsTrueOrFalse)
> Leaving function: globalReturnsTrueOrFalse, On N3569 -> N3580 (Return edge from globalReturnsTrueOrFalse to good30)
> takes the true branch, At N3581 of Function good30
> Entering function: globalReturnsTrueOrFalse, On N3586 -> N3570 (call globalReturnsTrueOrFalse)
> Leaving function: globalReturnsTrueOrFalse, On N3569 -> N3587 (Return edge from globalReturnsTrueOrFalse to good30)
> takes the false branch, At N3588 of Function good30
> takes the false branch, At N3601 of Function good30
> Entering function: printLine, On N3618 -> N3645 (call printLine)
> takes the true branch, At N3651 of Function printLine
> Leaving function: printLine, On N3644 -> N3609 (Return edge from printLine to good30)
> Leaving function: good30, On N3575 -> N3622 (Return edge from good30 to main)
> Entering function: bad30, On N3622 -> N3523 (call bad30)
> Entering function: globalReturnsTrueOrFalse, On N3527 -> N3570 (call globalReturnsTrueOrFalse)
> Leaving function: globalReturnsTrueOrFalse, On N3569 -> N3528 (Return edge from globalReturnsTrueOrFalse to bad30)
> takes the true branch, At N3529 of Function bad30
> Entering function: globalReturnsTrueOrFalse, On N3536 -> N3570 (call globalReturnsTrueOrFalse)
> Leaving function: globalReturnsTrueOrFalse, On N3569 -> N3537 (Return edge from globalReturnsTrueOrFalse to bad30)
> takes the true branch, At N3538 of Function bad30
<Defect> : N3540 -> N3541: [%1 = load i32, i32* %0, align 4]
N3540 -> N3541: [%1 = load i32, i32* %0, align 4] <--
-- end of trace --
=====================================================
CWE_457(Use of Uninitialized Variable): 1
	[./476_30.c 71] bad30 		[N3540 -{%1 = load i32, i32* %0, align 4}-> N3541]	(use of uninitialized variable)

CWE_476(Null Pointer Dereference): 1
	[./476_30.c 71] bad30 		[N3540 -{%1 = load i32, i32* %0, align 4}-> N3541]	(null pointer dereference)

Found 2 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/476/476_31.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
10 SCCs to deal with
SCC(1): [printLongLine]
 +printLongLine
SCC(1): [bad31]
 +bad31
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [good31]
 +good31
SCC(1): [main]
 +main
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [printLine]
 +printLine
<begin of summary store (POINTER_AP)>
Functions [globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good31, main, printHexCharLine, printIntLine, printLine, printLongLine, bad31]
Loops     []
----
function: bad31
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good31
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.005s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N3716): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Null Pointer Dereference
At node  : N3684
On edge  : N3684 -{%1 = load i64, i64* %0, align 8}-> N3685
Message  : null pointer dereference
> Start from entry function: main, At N3716 of Function main
> Entering function: good31, On N3764 -> N3703 (call good31)
> Entering function: printLongLine, On N3712 -> N3756 (call printLongLine)
> Leaving function: printLongLine, On N3755 -> N3713 (Return edge from printLongLine to good31)
> Leaving function: good31, On N3702 -> N3718 (Return edge from good31 to main)
> Entering function: bad31, On N3718 -> N3679 (call bad31)
<Defect> : N3684 -> N3685: [%1 = load i64, i64* %0, align 8]
N3684 -> N3685: [%1 = load i64, i64* %0, align 8] <--
-- end of trace --
=====================================================
CWE_476(Null Pointer Dereference): 1
	[./476_31.c 58] bad31 		[N3684 -{%1 = load i64, i64* %0, align 8}-> N3685]	(null pointer dereference)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/476/476_32.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
10 SCCs to deal with
SCC(1): [printLongLine]
 +printLongLine
SCC(1): [bad32]
 +bad32
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [printLine]
 +printLine
SCC(1): [good32]
 +good32
SCC(1): [main]
 +main
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [printIntLine]
 +printIntLine
<begin of summary store (POINTER_AP)>
Functions [main, printHexCharLine, printIntLine, printLine, printLongLine, bad32, globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good32]
Loops     []
----
function: bad32
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good32
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.005s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N3816): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Null Pointer Dereference
At node  : N3779
On edge  : N3779 -{%1 = load i64, i64* %0, align 8}-> N3780
Message  : null pointer dereference
> Start from entry function: main, At N3816 of Function main
> Entering function: good32, On N3864 -> N3798 (call good32)
> takes the false branch, At N3804 of Function good32
> Entering function: printLine, On N3814 -> N3841 (call printLine)
> takes the true branch, At N3847 of Function printLine
> Leaving function: printLine, On N3840 -> N3811 (Return edge from printLine to good32)
> Leaving function: good32, On N3797 -> N3818 (Return edge from good32 to main)
> Entering function: bad32, On N3818 -> N3774 (call bad32)
<Defect> : N3779 -> N3780: [%1 = load i64, i64* %0, align 8]
N3779 -> N3780: [%1 = load i64, i64* %0, align 8] <--
-- end of trace --
=====================================================
CWE_476(Null Pointer Dereference): 1
	[./476_32.c 63] bad32 		[N3779 -{%1 = load i64, i64* %0, align 8}-> N3780]	(null pointer dereference)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/476/476_33.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
10 SCCs to deal with
SCC(1): [printLongLine]
 +printLongLine
SCC(1): [bad33]
 +bad33
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [printLine]
 +printLine
SCC(1): [good33]
 +good33
SCC(1): [main]
 +main
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [printIntLine]
 +printIntLine
<begin of summary store (POINTER_AP)>
Functions [printLine, printLongLine, bad33, globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good33, main, printHexCharLine, printIntLine]
Loops     []
----
function: bad33
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good33
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.011s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N3917): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Null Pointer Dereference
At node  : N3880
On edge  : N3880 -{%1 = load i64, i64* %0, align 8}-> N3881
Message  : null pointer dereference
> Start from entry function: main, At N3917 of Function main
> Entering function: good33, On N3965 -> N3899 (call good33)
> takes the false branch, At N3905 of Function good33
> Entering function: printLine, On N3915 -> N3942 (call printLine)
> takes the true branch, At N3948 of Function printLine
> Leaving function: printLine, On N3941 -> N3912 (Return edge from printLine to good33)
> Leaving function: good33, On N3898 -> N3919 (Return edge from good33 to main)
> Entering function: bad33, On N3919 -> N3875 (call bad33)
<Defect> : N3880 -> N3881: [%1 = load i64, i64* %0, align 8]
N3880 -> N3881: [%1 = load i64, i64* %0, align 8] <--
-- end of trace --
=====================================================
CWE_476(Null Pointer Dereference): 1
	[./476_33.c 63] bad33 		[N3880 -{%1 = load i64, i64* %0, align 8}-> N3881]	(null pointer dereference)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/476/476_34.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
10 SCCs to deal with
SCC(1): [printLongLine]
 +printLongLine
SCC(1): [bad34]
 +bad34
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [printLine]
 +printLine
SCC(1): [good34]
 +good34
SCC(1): [main]
 +main
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [printIntLine]
 +printIntLine
<begin of summary store (POINTER_AP)>
Functions [bad34, globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good34, main, printHexCharLine, printIntLine, printLine, printLongLine]
Loops     []
----
function: bad34
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good34
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.003s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N4018): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Null Pointer Dereference
At node  : N3981
On edge  : N3981 -{%1 = load i64, i64* %0, align 8}-> N3982
Message  : null pointer dereference
> Start from entry function: main, At N4018 of Function main
> Entering function: good34, On N4066 -> N4000 (call good34)
> takes the false branch, At N4006 of Function good34
> Entering function: printLine, On N4016 -> N4043 (call printLine)
> takes the true branch, At N4049 of Function printLine
> Leaving function: printLine, On N4042 -> N4013 (Return edge from printLine to good34)
> Leaving function: good34, On N3999 -> N4020 (Return edge from good34 to main)
> Entering function: bad34, On N4020 -> N3976 (call bad34)
<Defect> : N3981 -> N3982: [%1 = load i64, i64* %0, align 8]
N3981 -> N3982: [%1 = load i64, i64* %0, align 8] <--
-- end of trace --
=====================================================
CWE_476(Null Pointer Dereference): 1
	[./476_34.c 66] bad34 		[N3981 -{%1 = load i64, i64* %0, align 8}-> N3982]	(null pointer dereference)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/476/476_35.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
10 SCCs to deal with
SCC(1): [printLongLine]
 +printLongLine
SCC(1): [bad35]
 +bad35
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [printLine]
 +printLine
SCC(1): [good35]
 +good35
SCC(1): [main]
 +main
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [printIntLine]
 +printIntLine
<begin of summary store (POINTER_AP)>
Functions [bad35, globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good35, main, printHexCharLine, printIntLine, printLine, printLongLine]
Loops     []
----
function: bad35
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good35
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.01s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N4145): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Null Pointer Dereference
At node  : N4089
On edge  : N4089 -{%3 = load i64, i64* %2, align 8}-> N4090
Message  : null pointer dereference
> Start from entry function: main, At N4145 of Function main
> Entering function: good35, On N4193 -> N4113 (call good35)
> takes the true branch, At N4118 of Function good35
> takes the false branch, At N4123 of Function good35
> takes the false branch, At N4128 of Function good35
> Entering function: printLine, On N4143 -> N4170 (call printLine)
> takes the true branch, At N4176 of Function printLine
> Leaving function: printLine, On N4169 -> N4136 (Return edge from printLine to good35)
> Leaving function: good35, On N4112 -> N4147 (Return edge from good35 to main)
> Entering function: bad35, On N4147 -> N4077 (call bad35)
> takes the true branch, At N4082 of Function bad35
> takes the true branch, At N4087 of Function bad35
<Defect> : N4089 -> N4090: [%3 = load i64, i64* %2, align 8]
N4089 -> N4090: [%3 = load i64, i64* %2, align 8] <--
-- end of trace --
=====================================================
CWE_476(Null Pointer Dereference): 1
	[./476_35.c 66] bad35 		[N4089 -{%3 = load i64, i64* %2, align 8}-> N4090]	(null pointer dereference)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/476/476_36.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
10 SCCs to deal with
SCC(1): [printLongLine]
 +printLongLine
SCC(1): [bad36]
 +bad36
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [printLine]
 +printLine
SCC(1): [good36]
 +good36
SCC(1): [main]
 +main
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [printIntLine]
 +printIntLine
<begin of summary store (POINTER_AP)>
Functions [bad36, globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good36, main, printHexCharLine, printIntLine, printLine, printLongLine]
Loops     []
----
function: bad36
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good36
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.012s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N4249): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Null Pointer Dereference
At node  : N4212
On edge  : N4212 -{%1 = load i64, i64* %0, align 8}-> N4213
Message  : null pointer dereference
> Start from entry function: main, At N4249 of Function main
> Entering function: good36, On N4297 -> N4231 (call good36)
> takes the false branch, At N4237 of Function good36
> Entering function: printLine, On N4247 -> N4274 (call printLine)
> takes the true branch, At N4280 of Function printLine
> Leaving function: printLine, On N4273 -> N4244 (Return edge from printLine to good36)
> Leaving function: good36, On N4230 -> N4251 (Return edge from good36 to main)
> Entering function: bad36, On N4251 -> N4207 (call bad36)
<Defect> : N4212 -> N4213: [%1 = load i64, i64* %0, align 8]
N4212 -> N4213: [%1 = load i64, i64* %0, align 8] <--
-- end of trace --
=====================================================
CWE_476(Null Pointer Dereference): 1
	[./476_36.c 65] bad36 		[N4212 -{%1 = load i64, i64* %0, align 8}-> N4213]	(null pointer dereference)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/476/476_37.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
10 SCCs to deal with
SCC(1): [printLongLine]
 +printLongLine
SCC(1): [bad37]
 +bad37
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [printLine]
 +printLine
SCC(1): [good37]
 +good37
SCC(1): [main]
 +main
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [printIntLine]
 +printIntLine
<begin of summary store (POINTER_AP)>
Functions [globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good37, main, printHexCharLine, printIntLine, printLine, printLongLine, bad37]
Loops     []
----
function: bad37
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good37
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.004s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N4376): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Null Pointer Dereference
At node  : N4320
On edge  : N4320 -{%3 = load i64, i64* %2, align 8}-> N4321
Message  : null pointer dereference
> Start from entry function: main, At N4376 of Function main
> Entering function: good37, On N4424 -> N4344 (call good37)
> takes the true branch, At N4349 of Function good37
> takes the false branch, At N4354 of Function good37
> takes the false branch, At N4359 of Function good37
> Entering function: printLine, On N4374 -> N4401 (call printLine)
> takes the true branch, At N4407 of Function printLine
> Leaving function: printLine, On N4400 -> N4367 (Return edge from printLine to good37)
> Leaving function: good37, On N4343 -> N4378 (Return edge from good37 to main)
> Entering function: bad37, On N4378 -> N4308 (call bad37)
> takes the true branch, At N4313 of Function bad37
> takes the true branch, At N4318 of Function bad37
<Defect> : N4320 -> N4321: [%3 = load i64, i64* %2, align 8]
N4320 -> N4321: [%3 = load i64, i64* %2, align 8] <--
-- end of trace --
=====================================================
CWE_476(Null Pointer Dereference): 1
	[./476_37.c 65] bad37 		[N4320 -{%3 = load i64, i64* %2, align 8}-> N4321]	(null pointer dereference)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/476/476_38.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
12 SCCs to deal with
SCC(1): [staticReturnsTrue]
 +staticReturnsTrue
SCC(1): [printLongLine]
 +printLongLine
SCC(1): [bad38]
 +bad38
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [printLine]
 +printLine
SCC(1): [staticReturnsFalse]
 +staticReturnsFalse
SCC(1): [good38]
 +good38
SCC(1): [main]
 +main
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [printIntLine]
 +printIntLine
<begin of summary store (POINTER_AP)>
Functions [bad38, globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good38, main, printHexCharLine, printIntLine, printLine, printLongLine, staticReturnsFalse, staticReturnsTrue]
Loops     []
----
function: bad38
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good38
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: staticReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: staticReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.007s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N4505): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Null Pointer Dereference
At node  : N4449
On edge  : N4449 -{%1 = load i64, i64* %0, align 8}-> N4450
Message  : null pointer dereference
> Start from entry function: main, At N4505 of Function main
> Entering function: good38, On N4561 -> N4473 (call good38)
> Entering function: staticReturnsTrue, On N4476 -> N4558 (call staticReturnsTrue)
> Leaving function: staticReturnsTrue, On N4557 -> N4477 (Return edge from staticReturnsTrue to good38)
> takes the true branch, At N4478 of Function good38
> Entering function: staticReturnsFalse, On N4481 -> N4554 (call staticReturnsFalse)
> Leaving function: staticReturnsFalse, On N4553 -> N4482 (Return edge from staticReturnsFalse to good38)
> takes the false branch, At N4483 of Function good38
> takes the false branch, At N4488 of Function good38
> Entering function: printLine, On N4503 -> N4530 (call printLine)
> takes the true branch, At N4536 of Function printLine
> Leaving function: printLine, On N4529 -> N4496 (Return edge from printLine to good38)
> Leaving function: good38, On N4472 -> N4507 (Return edge from good38 to main)
> Entering function: bad38, On N4507 -> N4437 (call bad38)
> Entering function: staticReturnsTrue, On N4440 -> N4558 (call staticReturnsTrue)
> Leaving function: staticReturnsTrue, On N4557 -> N4441 (Return edge from staticReturnsTrue to bad38)
> takes the true branch, At N4442 of Function bad38
> Entering function: staticReturnsTrue, On N4445 -> N4558 (call staticReturnsTrue)
> Leaving function: staticReturnsTrue, On N4557 -> N4446 (Return edge from staticReturnsTrue to bad38)
> takes the true branch, At N4447 of Function bad38
<Defect> : N4449 -> N4450: [%1 = load i64, i64* %0, align 8]
N4449 -> N4450: [%1 = load i64, i64* %0, align 8] <--
-- end of trace --
=====================================================
CWE_476(Null Pointer Dereference): 1
	[./476_38.c 73] bad38 		[N4449 -{%1 = load i64, i64* %0, align 8}-> N4450]	(null pointer dereference)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/476/476_39.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
10 SCCs to deal with
SCC(1): [printLongLine]
 +printLongLine
SCC(1): [bad39]
 +bad39
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [printLine]
 +printLine
SCC(1): [good39]
 +good39
SCC(1): [main]
 +main
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [printIntLine]
 +printIntLine
<begin of summary store (POINTER_AP)>
Functions [globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good39, main, printHexCharLine, printIntLine, printLine, printLongLine, bad39]
Loops     []
----
function: bad39
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good39
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.005s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N4615): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Null Pointer Dereference
At node  : N4578
On edge  : N4578 -{%1 = load i64, i64* %0, align 8}-> N4579
Message  : null pointer dereference
> Start from entry function: main, At N4615 of Function main
> Entering function: good39, On N4663 -> N4597 (call good39)
> takes the false branch, At N4603 of Function good39
> Entering function: printLine, On N4613 -> N4640 (call printLine)
> takes the true branch, At N4646 of Function printLine
> Leaving function: printLine, On N4639 -> N4610 (Return edge from printLine to good39)
> Leaving function: good39, On N4596 -> N4617 (Return edge from good39 to main)
> Entering function: bad39, On N4617 -> N4573 (call bad39)
<Defect> : N4578 -> N4579: [%1 = load i64, i64* %0, align 8]
N4578 -> N4579: [%1 = load i64, i64* %0, align 8] <--
-- end of trace --
=====================================================
CWE_476(Null Pointer Dereference): 1
	[./476_39.c 63] bad39 		[N4578 -{%1 = load i64, i64* %0, align 8}-> N4579]	(null pointer dereference)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/476/476_40.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
10 SCCs to deal with
SCC(1): [printLongLine]
 +printLongLine
SCC(1): [bad40]
 +bad40
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [printLine]
 +printLine
SCC(1): [good40]
 +good40
SCC(1): [main]
 +main
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [printIntLine]
 +printIntLine
<begin of summary store (POINTER_AP)>
Functions [good40, main, printHexCharLine, printIntLine, printLine, printLongLine, bad40, globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse]
Loops     []
----
function: bad40
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good40
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.004s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N4742): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Null Pointer Dereference
At node  : N4686
On edge  : N4686 -{%3 = load i64, i64* %2, align 8}-> N4687
Message  : null pointer dereference
> Start from entry function: main, At N4742 of Function main
> Entering function: good40, On N4790 -> N4710 (call good40)
> takes the true branch, At N4715 of Function good40
> takes the false branch, At N4720 of Function good40
> takes the false branch, At N4725 of Function good40
> Entering function: printLine, On N4740 -> N4767 (call printLine)
> takes the true branch, At N4773 of Function printLine
> Leaving function: printLine, On N4766 -> N4733 (Return edge from printLine to good40)
> Leaving function: good40, On N4709 -> N4744 (Return edge from good40 to main)
> Entering function: bad40, On N4744 -> N4674 (call bad40)
> takes the true branch, At N4679 of Function bad40
> takes the true branch, At N4684 of Function bad40
<Defect> : N4686 -> N4687: [%3 = load i64, i64* %2, align 8]
N4686 -> N4687: [%3 = load i64, i64* %2, align 8] <--
-- end of trace --
=====================================================
CWE_476(Null Pointer Dereference): 1
	[./476_40.c 63] bad40 		[N4686 -{%3 = load i64, i64* %2, align 8}-> N4687]	(null pointer dereference)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/476/476_41.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
10 SCCs to deal with
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [bad41]
 +bad41
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [printLine]
 +printLine
SCC(1): [good41]
 +good41
SCC(1): [main]
 +main
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [printLongLine]
 +printLongLine
<begin of summary store (POINTER_AP)>
Functions [main, printHexCharLine, printIntLine, printLine, printLongLine, bad41, globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good41]
Loops     []
----
function: bad41
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good41
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.004s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N4846): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Null Pointer Dereference
At node  : N4810
On edge  : N4810 -{%2 = load i32, i32* %1, align 4}-> N4811
Message  : null pointer dereference
> Start from entry function: main, At N4846 of Function main
> Entering function: good41, On N4894 -> N4832 (call good41)
> takes the true branch, At N4838 of Function good41
> Entering function: printLine, On N4843 -> N4871 (call printLine)
> takes the true branch, At N4877 of Function printLine
> Leaving function: printLine, On N4870 -> N4841 (Return edge from printLine to good41)
> Leaving function: good41, On N4831 -> N4848 (Return edge from good41 to main)
> Entering function: bad41, On N4848 -> N4802 (call bad41)
> takes the true branch, At N4808 of Function bad41
<Defect> : N4810 -> N4811: [%2 = load i32, i32* %1, align 4]
N4810 -> N4811: [%2 = load i32, i32* %1, align 4] <--
-- end of trace --
=====================================================
CWE_476(Null Pointer Dereference): 1
	[./476_41.c 59] bad41 		[N4810 -{%2 = load i32, i32* %1, align 4}-> N4811]	(null pointer dereference)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/476/476_42.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
10 SCCs to deal with
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [bad42]
 +bad42
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [printLine]
 +printLine
SCC(1): [good42]
 +good42
SCC(1): [main]
 +main
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [printLongLine]
 +printLongLine
<begin of summary store (POINTER_AP)>
Functions [printIntLine, printLine, printLongLine, bad42, globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good42, main, printHexCharLine]
Loops     []
----
function: bad42
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good42
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.008s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N4949): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Null Pointer Dereference
At node  : N4913
On edge  : N4913 -{%2 = load i32, i32* %1, align 4}-> N4914
Message  : null pointer dereference
> Start from entry function: main, At N4949 of Function main
> Entering function: good42, On N4997 -> N4935 (call good42)
> takes the true branch, At N4941 of Function good42
> Entering function: printLine, On N4946 -> N4974 (call printLine)
> takes the true branch, At N4980 of Function printLine
> Leaving function: printLine, On N4973 -> N4944 (Return edge from printLine to good42)
> Leaving function: good42, On N4934 -> N4951 (Return edge from good42 to main)
> Entering function: bad42, On N4951 -> N4905 (call bad42)
> takes the true branch, At N4911 of Function bad42
<Defect> : N4913 -> N4914: [%2 = load i32, i32* %1, align 4]
N4913 -> N4914: [%2 = load i32, i32* %1, align 4] <--
-- end of trace --
=====================================================
CWE_476(Null Pointer Dereference): 1
	[./476_42.c 61] bad42 		[N4913 -{%2 = load i32, i32* %1, align 4}-> N4914]	(null pointer dereference)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/476/476_43.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
10 SCCs to deal with
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [bad43]
 +bad43
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [printLine]
 +printLine
SCC(1): [good43]
 +good43
SCC(1): [main]
 +main
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [printLongLine]
 +printLongLine
<begin of summary store (POINTER_AP)>
Functions [printLongLine, bad43, globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good43, main, printHexCharLine, printIntLine, printLine]
Loops     []
----
function: bad43
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good43
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.004s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N5052): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Null Pointer Dereference
At node  : N5016
On edge  : N5016 -{%2 = load i32, i32* %1, align 4}-> N5017
Message  : null pointer dereference
> Start from entry function: main, At N5052 of Function main
> Entering function: good43, On N5100 -> N5038 (call good43)
> takes the true branch, At N5044 of Function good43
> Entering function: printLine, On N5049 -> N5077 (call printLine)
> takes the true branch, At N5083 of Function printLine
> Leaving function: printLine, On N5076 -> N5047 (Return edge from printLine to good43)
> Leaving function: good43, On N5037 -> N5054 (Return edge from good43 to main)
> Entering function: bad43, On N5054 -> N5008 (call bad43)
> takes the true branch, At N5014 of Function bad43
<Defect> : N5016 -> N5017: [%2 = load i32, i32* %1, align 4]
N5016 -> N5017: [%2 = load i32, i32* %1, align 4] <--
-- end of trace --
=====================================================
CWE_476(Null Pointer Dereference): 1
	[./476_43.c 61] bad43 		[N5016 -{%2 = load i32, i32* %1, align 4}-> N5017]	(null pointer dereference)

Found 1 defects in all (0 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/476/476_44.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
10 SCCs to deal with
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [bad44]
 +bad44
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [printLine]
 +printLine
SCC(1): [good44]
 +good44
SCC(1): [main]
 +main
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [printLongLine]
 +printLongLine
<begin of summary store (POINTER_AP)>
Functions [bad44, globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good44, main, printHexCharLine, printIntLine, printLine, printLongLine]
Loops     []
----
function: bad44
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good44
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.009s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N5165): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Memory Leak
At node  : N5110
On edge  : N5110 -{Return edge from bad44 to main}-> N5168
Message  : the heap object @H(bad44::call) is not referenced any more
> Start from entry function: main, At N5165 of Function main
> Entering function: good44, On N5213 -> N5151 (call good44)
> takes the true branch, At N5157 of Function good44
> Entering function: printLine, On N5162 -> N5190 (call printLine)
> takes the true branch, At N5196 of Function printLine
> Leaving function: printLine, On N5189 -> N5160 (Return edge from printLine to good44)
> Leaving function: good44, On N5150 -> N5167 (Return edge from good44 to main)
> Entering function: bad44, On N5167 -> N5111 (call bad44)
> Entering function: printIntLine, On N5122 -> N5181 (call printIntLine)
> Leaving function: printIntLine, On N5180 -> N5123 (Return edge from printIntLine to bad44)
> takes the true branch, At N5125 of Function bad44
> Entering function: printIntLine, On N5131 -> N5181 (call printIntLine)
> Leaving function: printIntLine, On N5180 -> N5132 (Return edge from printIntLine to bad44)
<Defect> : N5110 -> N5168: [Return edge from bad44 to main]
N5110 -> N5168: [Return edge from bad44 to main] <--
-- end of trace --
-- start of trace --
Weakness : Null Pointer Dereference
At node  : N5119
On edge  : N5119 -{store i32 5, i32* %1, align 4}-> N5120
Message  : null pointer dereference
> Start from entry function: main, At N5165 of Function main
> Entering function: good44, On N5213 -> N5151 (call good44)
> takes the true branch, At N5157 of Function good44
> Entering function: printLine, On N5162 -> N5190 (call printLine)
> takes the true branch, At N5196 of Function printLine
> Leaving function: printLine, On N5189 -> N5160 (Return edge from printLine to good44)
> Leaving function: good44, On N5150 -> N5167 (Return edge from good44 to main)
> Entering function: bad44, On N5167 -> N5111 (call bad44)
<Defect> : N5119 -> N5120: [store i32 5, i32* %1, align 4]
N5119 -> N5120: [store i32 5, i32* %1, align 4] <--
-- end of trace --
=====================================================
CWE_401(Memory Leak): 1
	[./476_44.c 101] bad44 		[N5110 -{Return edge from bad44 to main}-> N5168]	(the heap object @H(bad44::call) is not referenced any more)

CWE_476(Null Pointer Dereference): 1
	[./476_44.c 62] bad44 		[N5119 -{store i32 5, i32* %1, align 4}-> N5120]	(null pointer dereference)

Found 2 defects in all (2 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/476/476_45.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
10 SCCs to deal with
SCC(1): [printLine]
 +printLine
SCC(1): [bad45]
 +bad45
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [good45]
 +good45
SCC(1): [main]
 +main
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [printLongLine]
 +printLongLine
<begin of summary store (POINTER_AP)>
Functions [bad45, globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good45, main, printHexCharLine, printIntLine, printLine, printLongLine]
Loops     []
----
function: bad45
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good45
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.008s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N5288): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Memory Leak
At node  : N5259
On edge  : N5259 -{Return edge from good45 to main}-> N5290
Message  : the heap object @H(good45::call) is not referenced any more
> Start from entry function: main, At N5288 of Function main
> Entering function: good45, On N5336 -> N5260 (call good45)
> takes the false branch, At N5264 of Function good45
> Entering function: printIntLine, On N5276 -> N5304 (call printIntLine)
> Leaving function: printIntLine, On N5303 -> N5277 (Return edge from printIntLine to good45)
> Entering function: printIntLine, On N5281 -> N5304 (call printIntLine)
> Leaving function: printIntLine, On N5303 -> N5283 (Return edge from printIntLine to good45)
<Defect> : N5259 -> N5290: [Return edge from good45 to main]
N5259 -> N5290: [Return edge from good45 to main] <--
-- end of trace --
-- start of trace --
Weakness : Null Pointer Dereference
At node  : N5273
On edge  : N5273 -{store i32 5, i32* %2, align 4}-> N5274
Message  : null pointer dereference
> Start from entry function: main, At N5288 of Function main
> Entering function: good45, On N5336 -> N5260 (call good45)
> takes the false branch, At N5264 of Function good45
<Defect> : N5273 -> N5274: [store i32 5, i32* %2, align 4]
N5273 -> N5274: [store i32 5, i32* %2, align 4] <--
-- end of trace --
=====================================================
CWE_401(Memory Leak): 1
	[./476_45.c 102] good45 		[N5259 -{Return edge from good45 to main}-> N5290]	(the heap object @H(good45::call) is not referenced any more)

CWE_476(Null Pointer Dereference): 1
	[./476_45.c 91] good45 		[N5273 -{store i32 5, i32* %2, align 4}-> N5274]	(null pointer dereference)

Found 2 defects in all (5 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/476/476_46.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
10 SCCs to deal with
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [bad46]
 +bad46
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [printLine]
 +printLine
SCC(1): [good46]
 +good46
SCC(1): [main]
 +main
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [printLongLine]
 +printLongLine
<begin of summary store (POINTER_AP)>
Functions [bad46, globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good46, main, printHexCharLine, printIntLine, printLine, printLongLine]
Loops     []
----
function: bad46
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good46
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.004s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N5403): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Memory Leak
At node  : N5348
On edge  : N5348 -{Return edge from bad46 to main}-> N5406
Message  : the heap object @H(bad46::call) is not referenced any more
> Start from entry function: main, At N5403 of Function main
> Entering function: good46, On N5451 -> N5389 (call good46)
> takes the true branch, At N5395 of Function good46
> Entering function: printLine, On N5400 -> N5428 (call printLine)
> takes the true branch, At N5434 of Function printLine
> Leaving function: printLine, On N5427 -> N5398 (Return edge from printLine to good46)
> Leaving function: good46, On N5388 -> N5405 (Return edge from good46 to main)
> Entering function: bad46, On N5405 -> N5349 (call bad46)
> Entering function: printIntLine, On N5360 -> N5419 (call printIntLine)
> Leaving function: printIntLine, On N5418 -> N5361 (Return edge from printIntLine to bad46)
> takes the true branch, At N5363 of Function bad46
> Entering function: printIntLine, On N5369 -> N5419 (call printIntLine)
> Leaving function: printIntLine, On N5418 -> N5370 (Return edge from printIntLine to bad46)
<Defect> : N5348 -> N5406: [Return edge from bad46 to main]
N5348 -> N5406: [Return edge from bad46 to main] <--
-- end of trace --
-- start of trace --
Weakness : Null Pointer Dereference
At node  : N5357
On edge  : N5357 -{store i32 5, i32* %1, align 4}-> N5358
Message  : null pointer dereference
> Start from entry function: main, At N5403 of Function main
> Entering function: good46, On N5451 -> N5389 (call good46)
> takes the true branch, At N5395 of Function good46
> Entering function: printLine, On N5400 -> N5428 (call printLine)
> takes the true branch, At N5434 of Function printLine
> Leaving function: printLine, On N5427 -> N5398 (Return edge from printLine to good46)
> Leaving function: good46, On N5388 -> N5405 (Return edge from good46 to main)
> Entering function: bad46, On N5405 -> N5349 (call bad46)
<Defect> : N5357 -> N5358: [store i32 5, i32* %1, align 4]
N5357 -> N5358: [store i32 5, i32* %1, align 4] <--
-- end of trace --
=====================================================
CWE_401(Memory Leak): 1
	[./476_46.c 101] bad46 		[N5348 -{Return edge from bad46 to main}-> N5406]	(the heap object @H(bad46::call) is not referenced any more)

CWE_476(Null Pointer Dereference): 1
	[./476_46.c 61] bad46 		[N5357 -{store i32 5, i32* %1, align 4}-> N5358]	(null pointer dereference)

Found 2 defects in all (2 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/476/476_47.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
10 SCCs to deal with
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [bad47]
 +bad47
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [printLine]
 +printLine
SCC(1): [good47]
 +good47
SCC(1): [main]
 +main
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [printLongLine]
 +printLongLine
<begin of summary store (POINTER_AP)>
Functions [bad47, globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good47, main, printHexCharLine, printIntLine, printLine, printLongLine]
Loops     []
----
function: bad47
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good47
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.007s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N5530): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Memory Leak
At node  : N5461
On edge  : N5461 -{Return edge from bad47 to main}-> N5533
Message  : the heap object @H(bad47::call) is not referenced any more
> Start from entry function: main, At N5530 of Function main
> Entering function: good47, On N5578 -> N5508 (call good47)
> takes the false branch, At N5512 of Function good47
> takes the true branch, At N5519 of Function good47
> Entering function: printLine, On N5527 -> N5555 (call printLine)
> takes the true branch, At N5561 of Function printLine
> Leaving function: printLine, On N5554 -> N5523 (Return edge from printLine to good47)
> Leaving function: good47, On N5507 -> N5532 (Return edge from good47 to main)
> Entering function: bad47, On N5532 -> N5462 (call bad47)
> takes the true branch, At N5466 of Function bad47
> Entering function: printIntLine, On N5476 -> N5546 (call printIntLine)
> Leaving function: printIntLine, On N5545 -> N5477 (Return edge from printIntLine to bad47)
> takes the true branch, At N5479 of Function bad47
> Entering function: printIntLine, On N5485 -> N5546 (call printIntLine)
> Leaving function: printIntLine, On N5545 -> N5487 (Return edge from printIntLine to bad47)
<Defect> : N5461 -> N5533: [Return edge from bad47 to main]
N5461 -> N5533: [Return edge from bad47 to main] <--
-- end of trace --
-- start of trace --
Weakness : Null Pointer Dereference
At node  : N5473
On edge  : N5473 -{store i32 5, i32* %2, align 4}-> N5474
Message  : null pointer dereference
> Start from entry function: main, At N5530 of Function main
> Entering function: good47, On N5578 -> N5508 (call good47)
> takes the false branch, At N5512 of Function good47
> takes the true branch, At N5519 of Function good47
> Entering function: printLine, On N5527 -> N5555 (call printLine)
> takes the true branch, At N5561 of Function printLine
> Leaving function: printLine, On N5554 -> N5523 (Return edge from printLine to good47)
> Leaving function: good47, On N5507 -> N5532 (Return edge from good47 to main)
> Entering function: bad47, On N5532 -> N5462 (call bad47)
> takes the true branch, At N5466 of Function bad47
<Defect> : N5473 -> N5474: [store i32 5, i32* %2, align 4]
N5473 -> N5474: [store i32 5, i32* %2, align 4] <--
-- end of trace --
=====================================================
CWE_401(Memory Leak): 1
	[./476_47.c 101] bad47 		[N5461 -{Return edge from bad47 to main}-> N5533]	(the heap object @H(bad47::call) is not referenced any more)

CWE_476(Null Pointer Dereference): 1
	[./476_47.c 61] bad47 		[N5473 -{store i32 5, i32* %2, align 4}-> N5474]	(null pointer dereference)

Found 2 defects in all (2 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/476/476_48.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
11 SCCs to deal with
SCC(1): [printLine]
 +printLine
SCC(1): [staticReturnsFalse]
 +staticReturnsFalse
SCC(1): [bad48]
 +bad48
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [good48]
 +good48
SCC(1): [main]
 +main
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [printLongLine]
 +printLongLine
<begin of summary store (POINTER_AP)>
Functions [globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good48, main, printHexCharLine, printIntLine, printLine, printLongLine, staticReturnsFalse, bad48]
Loops     []
----
function: bad48
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good48
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: staticReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.009s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N5655): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Memory Leak
At node  : N5626
On edge  : N5626 -{Return edge from good48 to main}-> N5657
Message  : the heap object @H(good48::call1) is not referenced any more
> Start from entry function: main, At N5655 of Function main
> Entering function: good48, On N5707 -> N5627 (call good48)
> Entering function: staticReturnsFalse, On N5629 -> N5704 (call staticReturnsFalse)
> Leaving function: staticReturnsFalse, On N5703 -> N5630 (Return edge from staticReturnsFalse to good48)
> takes the false branch, At N5631 of Function good48
> Entering function: printIntLine, On N5643 -> N5671 (call printIntLine)
> Leaving function: printIntLine, On N5670 -> N5644 (Return edge from printIntLine to good48)
> Entering function: printIntLine, On N5648 -> N5671 (call printIntLine)
> Leaving function: printIntLine, On N5670 -> N5650 (Return edge from printIntLine to good48)
<Defect> : N5626 -> N5657: [Return edge from good48 to main]
N5626 -> N5657: [Return edge from good48 to main] <--
-- end of trace --
-- start of trace --
Weakness : Null Pointer Dereference
At node  : N5640
On edge  : N5640 -{store i32 5, i32* %1, align 4}-> N5641
Message  : null pointer dereference
> Start from entry function: main, At N5655 of Function main
> Entering function: good48, On N5707 -> N5627 (call good48)
> Entering function: staticReturnsFalse, On N5629 -> N5704 (call staticReturnsFalse)
> Leaving function: staticReturnsFalse, On N5703 -> N5630 (Return edge from staticReturnsFalse to good48)
> takes the false branch, At N5631 of Function good48
<Defect> : N5640 -> N5641: [store i32 5, i32* %1, align 4]
N5640 -> N5641: [store i32 5, i32* %1, align 4] <--
-- end of trace --
=====================================================
CWE_401(Memory Leak): 1
	[./476_48.c 109] good48 		[N5626 -{Return edge from good48 to main}-> N5657]	(the heap object @H(good48::call1) is not referenced any more)

CWE_476(Null Pointer Dereference): 1
	[./476_48.c 98] good48 		[N5640 -{store i32 5, i32* %1, align 4}-> N5641]	(null pointer dereference)

Found 2 defects in all (6 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/476/476_49.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
10 SCCs to deal with
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [bad49]
 +bad49
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [printLine]
 +printLine
SCC(1): [good49]
 +good49
SCC(1): [main]
 +main
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [printLongLine]
 +printLongLine
<begin of summary store (POINTER_AP)>
Functions [globalReturnsFalse, globalReturnsTrue, globalReturnsTrueOrFalse, good49, main, printHexCharLine, printIntLine, printLine, printLongLine, bad49]
Loops     []
----
function: bad49
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good49
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.004s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N5773): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Memory Leak
At node  : N5718
On edge  : N5718 -{Return edge from bad49 to main}-> N5776
Message  : the heap object @H(bad49::call) is not referenced any more
> Start from entry function: main, At N5773 of Function main
> Entering function: good49, On N5821 -> N5759 (call good49)
> takes the true branch, At N5765 of Function good49
> Entering function: printLine, On N5770 -> N5798 (call printLine)
> takes the true branch, At N5804 of Function printLine
> Leaving function: printLine, On N5797 -> N5768 (Return edge from printLine to good49)
> Leaving function: good49, On N5758 -> N5775 (Return edge from good49 to main)
> Entering function: bad49, On N5775 -> N5719 (call bad49)
> Entering function: printIntLine, On N5730 -> N5789 (call printIntLine)
> Leaving function: printIntLine, On N5788 -> N5731 (Return edge from printIntLine to bad49)
> takes the true branch, At N5733 of Function bad49
> Entering function: printIntLine, On N5739 -> N5789 (call printIntLine)
> Leaving function: printIntLine, On N5788 -> N5740 (Return edge from printIntLine to bad49)
<Defect> : N5718 -> N5776: [Return edge from bad49 to main]
N5718 -> N5776: [Return edge from bad49 to main] <--
-- end of trace --
-- start of trace --
Weakness : Null Pointer Dereference
At node  : N5727
On edge  : N5727 -{store i32 5, i32* %1, align 4}-> N5728
Message  : null pointer dereference
> Start from entry function: main, At N5773 of Function main
> Entering function: good49, On N5821 -> N5759 (call good49)
> takes the true branch, At N5765 of Function good49
> Entering function: printLine, On N5770 -> N5798 (call printLine)
> takes the true branch, At N5804 of Function printLine
> Leaving function: printLine, On N5797 -> N5768 (Return edge from printLine to good49)
> Leaving function: good49, On N5758 -> N5775 (Return edge from good49 to main)
> Entering function: bad49, On N5775 -> N5719 (call bad49)
<Defect> : N5727 -> N5728: [store i32 5, i32* %1, align 4]
N5727 -> N5728: [store i32 5, i32* %1, align 4] <--
-- end of trace --
=====================================================
CWE_401(Memory Leak): 1
	[./476_49.c 98] bad49 		[N5718 -{Return edge from bad49 to main}-> N5776]	(the heap object @H(bad49::call) is not referenced any more)

CWE_476(Null Pointer Dereference): 1
	[./476_49.c 59] bad49 		[N5727 -{store i32 5, i32* %1, align 4}-> N5728]	(null pointer dereference)

Found 2 defects in all (2 duplicates ignored).
=====================================================
Phase status: SUCCESS

<< Starting CFACreatePhase(cfa) Phase >>
[/home/guzuxing/Documents/benchmark/CWE/Juliet_Test_Suite/476/476_50.ll]
Finish creating ll file
Finish parsing file
Finish parsing to Cfa
Finish inserting global variables
Finish removing unreachable nodes
Finish simplifying
Finish labeling reverse post order id
Finish labeling flood order
Finish inserting fun call return
Finish building
Finish post process
CFA exported to: output/cfa-merged/cfa.dot
Function CFA exported to: output/cfa-separate/
Call graph exported to: output/cfa-merged/call-graph.dot
Used instruction types are exported to: output/cfa-merged/instructions.txt
Phase status: SUCCESS

<< Starting SummaryComputationPhase(summary) Phase >>
Computing summary >>> 
Running summary: cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer
10 SCCs to deal with
SCC(1): [printLine]
 +printLine
SCC(1): [bad50]
 +bad50
SCC(1): [globalReturnsFalse]
 +globalReturnsFalse
SCC(1): [globalReturnsTrue]
 +globalReturnsTrue
SCC(1): [globalReturnsTrueOrFalse]
 +globalReturnsTrueOrFalse
SCC(1): [printIntLine]
 +printIntLine
SCC(1): [good50]
 +good50
SCC(1): [main]
 +main
SCC(1): [printHexCharLine]
 +printHexCharLine
SCC(1): [printLongLine]
 +printLongLine
<begin of summary store (POINTER_AP)>
Functions [globalReturnsTrue, globalReturnsTrueOrFalse, good50, main, printHexCharLine, printIntLine, printLine, printLongLine, bad50, globalReturnsFalse]
Loops     []
----
function: bad50
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: globalReturnsFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrue
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: globalReturnsTrueOrFalse
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: good50
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: main
P+ = [] 
P- = [] 
Point-To:

Ret-Value: R
----
function: printHexCharLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printIntLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
----
function: printLongLine
P+ = [] 
P- = [] 
Point-To:

Ret-Value: 
<end of summary store>
Finish summary: (Configuration: [summary=POINTER_AP, ARGCPA.cpa=cpa.composite.CompositeCPA, computer=cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer, analysis.traversal.controlled.maxWaitingSize=100, cpa=cpa.arg.ARGCPA, analysis.traversal.useDominationOrder=true, analysis.traversal.order=bfs, CompositeCPA.cpas=cpa.location.LocationCPA, cpa.accesspath.AccessPathAnalysisCPA], cn.edu.thu.tsmart.core.summary.computer.PointerAccessSummaryComputer)
Finish summary >>> 
Used time: 0.006s
Phase status: SUCCESS

<< Starting MultiEntryAlgorithmRunPhase(basic) Phase >>
Using 1 entries: [main(N5896): +oo]
> [1/1] entry: main ()
finish entry: main
Phase status: SUCCESS

<< Starting AnalyzingResultPhase(result) Phase >>
== Reports ==
-- start of trace --
Weakness : Memory Leak
At node  : N5867
On edge  : N5867 -{Return edge from good50 to main}-> N5898
Message  : the heap object @H(good50::call) is not referenced any more
> Start from entry function: main, At N5896 of Function main
> Entering function: good50, On N5944 -> N5868 (call good50)
> takes the false branch, At N5872 of Function good50
> Entering function: printIntLine, On N5884 -> N5912 (call printIntLine)
> Leaving function: printIntLine, On N5911 -> N5885 (Return edge from printIntLine to good50)
> Entering function: printIntLine, On N5889 -> N5912 (call printIntLine)
> Leaving function: printIntLine, On N5911 -> N5891 (Return edge from printIntLine to good50)
<Defect> : N5867 -> N5898: [Return edge from good50 to main]
N5867 -> N5898: [Return edge from good50 to main] <--
-- end of trace --
-- start of trace --
Weakness : Null Pointer Dereference
At node  : N5881
On edge  : N5881 -{store i32 5, i32* %2, align 4}-> N5882
Message  : null pointer dereference
> Start from entry function: main, At N5896 of Function main
> Entering function: good50, On N5944 -> N5868 (call good50)
> takes the false branch, At N5872 of Function good50
<Defect> : N5881 -> N5882: [store i32 5, i32* %2, align 4]
N5881 -> N5882: [store i32 5, i32* %2, align 4] <--
-- end of trace --
=====================================================
CWE_401(Memory Leak): 1
	[./476_50.c 99] good50 		[N5867 -{Return edge from good50 to main}-> N5898]	(the heap object @H(good50::call) is not referenced any more)

CWE_476(Null Pointer Dereference): 1
	[./476_50.c 88] good50 		[N5881 -{store i32 5, i32* %2, align 4}-> N5882]	(null pointer dereference)

Found 2 defects in all (5 duplicates ignored).
=====================================================
Phase status: SUCCESS


Process finished with exit code 0
